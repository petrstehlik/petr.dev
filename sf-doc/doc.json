{
    "openapi": "3.0.0",
    "info": {
        "title": "Spaceflow API",
        "description": "Spaceflow is creating digital experiences to enable better life in buildings.",
        "version": "3.0.0"
    },
    "paths": {
        "\/api\/v1\/authentication\/authentication-token\/extend": {
            "post": {
                "summary": "This endpoint return new extended Authentication token.",
                "operationId": "post_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_authenticationtoken_postextendedauthenticationtoken__invoke",
                "responses": {
                    "200": {
                        "description": "Authentication token was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTokenEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/commands\/create-provisioned-invitation": {
            "post": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "operationId": "post_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_commands_postcreateprovisionedinvitation__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreatePersonalDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create session process",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/commands\/create-public-invitation-for-end-users": {
            "post": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "summary": "Create a public invitation for EndUsers in given Tenant.",
                "description": "The target_id in the request should be the UUID of some Tenant. Otherwise expect\nan FailedToCreatePublicInvitationBecauseTargetIsNotATenant error event in the feedback.",
                "operationId": "post_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_commands_postcreatepublicinvitationforendusers__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreatePublicInvitationRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create session process",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/commands\/create-session-token": {
            "post": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "summary": "Create session process.",
                "description": "This endpoint is authenticated by JWT \"Authentication Token\".",
                "operationId": "post_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_commands_postcreatesessionprocess__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateSessionProcessRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create session process",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/commands\/get-invitation-parameters": {
            "post": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "summary": "Obtain details of the Invitation with given invitationCode.",
                "description": "This endpoint will not consume the Invitation. It merely fetches some settings from the system and returns them.\nThis endpoint returns response synchronously.\nThis endpoint does not require any authentication.",
                "operationId": "post_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_commands_postgetinvitationparameters__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/GetInvitationParametersRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invitation was successfuly retrieved.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableInvitationParametersEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/commands\/join-to-space": {
            "post": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "summary": "This endpoint is authenticated by JWT \"Authentication Token\".",
                "operationId": "post_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_commands_postjointospace__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/JoinToSpaceRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/commands\/remove-invitation": {
            "post": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "summary": "Remove particular invitation.",
                "operationId": "post_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_commands_postremoveinvitation__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveInvitationRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create session process",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/commands\/resend-invitation-email": {
            "post": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "operationId": "post_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_commands_postresendinvitationemail__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ResendInvitationEmailRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resend invitation email",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/invitation\/list\/public": {
            "get": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "summary": "List public Invitations for Targets managed by your user.",
                "description": "Filter fields explanation:\n\n- target_id = show only invitations targetted against the particular Hierarchy Subject entry. If you put there a Tenant ID, it will show invitations to that Tenant.If you put there a Space ID, it will only show invitations to that Space.\n- master_target_id = show invitations targetted underneath or equal to particular HierarhySubject entry. If you put there a Space ID, it will return invitations for\n  this Space1 AND the Tenants underneath.",
                "operationId": "get_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_invitation_getpublicinvitations__invoke",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>target_id (equal)<\/li>\n<li>master_target_id (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: invitation_code, target_id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session token was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePublicInvitationCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/invitation-process\/{processId}\/session-token": {
            "get": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "summary": "This endpoint is authenticated by JWT \"Authentication Token\".",
                "operationId": "get_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_invitationprocess_sessiontoken_getsessionforauthenticationtoken__invoke",
                "parameters": [
                    {
                        "name": "processId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session token was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSessionTokenEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/my\/session": {
            "get": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "operationId": "get_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_my_session_getmysession__invoke",
                "responses": {
                    "200": {
                        "description": "Return information about currently logged-in user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSessionEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/my\/spaces": {
            "get": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "summary": "This endpoint is authenticated by JWT \"Authentication Token\".",
                "operationId": "get_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_my_spaces_getspaceforauthenticationtoken__invoke",
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceAccountEntryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/session\/{processId}\/session-token": {
            "get": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "summary": "This endpoint is authenticated by JWT \"Authentication Token\".",
                "operationId": "get_spaceflow_modules_authenticationmanagement_application_api_v1_authentication_session_sessiontoken_getsessionforauthenticationtoken__invoke",
                "parameters": [
                    {
                        "name": "processId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session token was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSessionTokenEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/authentication\/my\/spaces": {
            "get": {
                "tags": [
                    "AuthenticationManagement"
                ],
                "summary": "This endpoint is authenticated by JWT \"Authentication Token\".",
                "description": "This endpoint returns a list of Portfolios (and Spaces within them) to which the user has access to.\nIt also provides the status of the user in the particular Portfolio (e.g. there is no reason to enter Portfolio\nin which he is Deactivated or he has no roles there - unless he is asking for GDPR deletion).\n\nIt also allows pagination of records (by default 20 records is returned per page).\n\nIt also allows filtering by name of portfolio or space (either filter by space_label or portfolio_label OR filter by portfolio_and_space_label if you don't care where the result exists). The \"contains\" filter operation is case insensitive.",
                "operationId": "get_spaceflow_modules_authenticationmanagement_application_api_v2_authentication_my_spaces_getspaceforauthenticationtoken__invoke",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>portfolio_id (equal, not_equal)<\/li>\n<li>space_id (equal, not_equal, isnull)<\/li>\n<li>portfolio_label (equal, not_equal, isnull, contains)<\/li>\n<li>space_label (equal, not_equal, isnull, contains)<\/li>\n<li>roles_total (equal, not_equal, gt, gte, lt, lte)<\/li>\n<li>state (equal, not_equal, isnull, contains, in, not_in)<\/li>\n<li>portfolio_and_space_label (contains)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: portfolio_label, space_label",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceAccountEntryCollection2"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/add-acs-manager-role-to-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Add ACS Manager role in a given target (preferably tenant) to a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_addacsmanagerroletouserintarget_postaddacsmanagerroletouserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddAcsManagerRoleToUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/add-concierge-role-to-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Add Concierge role in a given target (preferably space) to a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_addconciergeroletouserintarget_postaddconciergeroletouserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddConciergeRoleToUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/add-end-user-role-to-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Add End User role in a given target (preferably tenant) to a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_addenduserroletouserintarget_postaddenduserroletouserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddEndUserRoleToUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/add-portfolio-manager-role-to-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Add Portfolio Manager role in a given target (preferably portfolio) to a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_addportfoliomanagerroletouserintarget_postaddportfoliomanagerroletouserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddPortfolioManagerRoleToUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/add-space-manager-role-to-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Add Space Manager role in a given target (preferably space) to a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_addspacemanagerroletouserintarget_postaddspacemanagerroletouserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddSpaceManagerRoleToUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/add-tenant-manager-role-to-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Add Tenant Manager role in a given target (preferably tenant) to a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_addtenantmanagerroletouserintarget_postaddtenantmanagerroletouserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddTenantManagerRoleToUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/add-ticket-manager-role-to-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Add Ticket Manager role in a given target (preferably space) to a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_addticketmanagerroletouserintarget_postaddticketmanagerroletouserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddTicketManagerRoleToUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/add-vendor-manager-role-to-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Add Vendor Manager role in a given target (preferably vendor) to a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_addvendormanagerroletouserintarget_postaddvendormanagerroletouserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddVendorManagerRoleToUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/deactivate-user": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Deactivate user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_deactivateuser_postdeactivateuser__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivateUserRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/set-user-profile-visibility": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_deactivateuser_postsetuserprofilevisibility__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SetUserProfileVisibilityRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/delete-my-user": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "!DANGEROUS! Delete the calling User.",
                "description": "This operation is irreversible.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_deletemyuser_postdeletemyuser__invoke",
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/remove-acs-manager-role-from-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Remove ACS Manager role in a given target (preferably tenant) from a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_removeacsmanagerrolefromuserintarget_postremoveacsmanagerrolefromuserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveAcsManagerRoleFromUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/remove-concierge-role-from-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Remove Concierge role in a given target (preferably space) from a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_removeconciergerolefromuserintarget_postremoveconciergerolefromuserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveConciergeRoleFromUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/remove-end-user-role-from-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Remove End User role in a given target (preferably tenant) from a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_removeenduserrolefromuserintarget_postremoveenduserrolefromuserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveEndUserRoleFromUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/remove-portfolio-manager-role-from-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Remove Portfolio Manager role in a given target (preferably portfolio) from a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_removeportfoliomanagerrolefromuserintarget_postremoveportfoliomanagerrolefromuserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemovePortfolioManagerRoleFromUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/remove-space-manager-role-from-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Remove Space Manager role in a given target (preferably space) from a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_removespacemanagerrolefromuserintarget_postremovespacemanagerrolefromuserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveSpaceManagerRoleFromUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/remove-tenant-manager-role-from-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Remove Tenant Manager role in a given target (preferably tenant) from a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_removetenantmanagerrolefromuserintarget_postremovetenantmanagerrolefromuserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveTenantManagerRoleFromUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/remove-ticket-manager-role-from-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Remove Ticket Manager role in a given target (preferably space) from a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_removeticketmanagerrolefromuserintarget_postremoveticketmanagerrolefromuserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveTicketManagerRoleFromUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/commands\/remove-vendor-manager-role-from-user-in-target": {
            "post": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Remove Vendor Manager role in a given target (preferably vendor) from a given user.",
                "operationId": "post_spaceflow_modules_securitymanagement_application_api_v1_commands_removevendormanagerrolefromuserintarget_postremovevendormanagerrolefromuserintarget__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveVendorManagerRoleFromUserInTargetRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/current-session-permissions": {
            "get": {
                "tags": [
                    "UserModule"
                ],
                "summary": "Retrieve all permissions granted to the current user session.",
                "operationId": "get_spaceflow_modules_securitymanagement_application_api_v1_currentsessionpermissions_getallsessionpermissions__invoke",
                "responses": {
                    "200": {
                        "description": "List of permissions was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCurrentPermissionCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/current-session-permissions\/by-space-id\/{spaceId}": {
            "get": {
                "tags": [
                    "SecurityManagement"
                ],
                "summary": "Retrieve all permissions granted to the current user session restricted to the specified space.",
                "operationId": "get_spaceflow_modules_securitymanagement_application_api_v1_currentsessionpermissions_getsessionpermissionsbyspaceid__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of permissions was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCurrentPermissionCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/security\/users-with-roles\/list\/all": {
            "get": {
                "tags": [
                    "SecurityManagement"
                ],
                "summary": "Retrieve a list of users with their roles.",
                "description": "Explanation of filter fields:\n\n - master_target_id: Return only Users whose Roles are assigned to or beneath the HierarchyStructure entry with this UUID.\n - target_id: Return only Users whose Roles are assigned to, beneath or above the HierarchyStructure entry with this UUID.\n - user_id: Return the record for User with given UUID.\n - role_type: Return only Users whose Role is of given type.\n - first_name: Filter Users by given first name.\n - last_name: Filter Users by given last name\n - full_name: Filter Users by their full names. The full_name performs search both over \"{first_name} {last_name}\" and \"{last_name} {first_name}\"\n - status: Filter Users by their status. The available options are: `invited`, `active`, `deactivated`.\n - email: Filter Users by given email address.\n\nThe resulting collection of entries is filtered by your permission policies. In general, you won't see users whose roles are assigned to a HierarchyStructure entry above your own HierarchyStructure entry, albeit there might be some exceptions for this case. See Policy `17fc8690-88ab-4d79-9bcc-2490952238f0` for example.",
                "operationId": "get_spaceflow_modules_securitymanagement_application_api_v1_userswithroles_getuserswithroles__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>master_target_id (equal, in)<\/li>\n<li>target_id (equal)<\/li>\n<li>user_id (equal)<\/li>\n<li>role_type (equal, in, not_equal, not_in)<\/li>\n<li>first_name (equal, contains)<\/li>\n<li>last_name (equal, contains)<\/li>\n<li>full_name (contains)<\/li>\n<li>status (equal, in, not_equal, not_in)<\/li>\n<li>email (equal, contains)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: first_name, last_name, user_id, email, role_type, target_label, role_name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users and their roles",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableUserWithRoleCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/allowed-assignees\/list\/by-space-id\/{spaceId}": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_allowedassignees_getavailableassignees__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of people who can be used as automatic category assignees was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAssigneeAllowedValueCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/available-ticket-categories\/by-owner-id\/{ownerId}": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_availablecategories_getavailablecategories__invoke",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>name (equal, contains, not_equal, not_contains)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available ticket categories was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAvailableCategoryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/categories": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "summary": "Retrieve all categories.",
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_categories_getcategories__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>workflow_id (equal, in, not_equal, not_in)<\/li>\n<li>owner_id (equal, in, not_equal, not_in)<\/li>\n<li>automatic_assignee_id (equal, in, not_equal, not_in)<\/li>\n<li>name (equal, contains, not_equal, not_contains)<\/li>\n<li>is_deactivated (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, name, is_deactivated",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCategoryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/category-templates": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_categorytemplates_getcategorytemplates__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>workflow_id (equal, in, not_equal, not_in)<\/li>\n<li>name (equal, contains, not_equal, not_contains)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of category templates was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCategoryTemplateCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/notification-settings\/commands\/change": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Change notification settings.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_changenotificationsettings_postchangenotificationsettings__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeManagersInNotificationSettingsRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/notification-settings\/commands\/change-type": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Change notification settings.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_changenotificationsettingstype_postchangenotificationsettingstype__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeNotificationSettingsTypeRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/commands\/create-category": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Create new category.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_createcategory_postcreatecategory__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateCategoryRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/labels\/commands\/create": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Create new label.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_createlabel_postcreatelabel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateLabelRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/commands\/create-ticket": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Create new ticket.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_createticket_postcreateticket__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateTicketRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/commands\/create-ticket-number-series": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Create new ticket number series.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_createticketnumberseries_postcreateticketnumberseries__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateTicketNumberSeriesRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/commands\/deactivate-category": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Deactivate category.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_deactivatecategory_postdeactivatecategory__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivateCategoryRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/labels\/commands\/delete": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Remove label.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_deletelabel_postdeletelabel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeleteLabelRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/commands\/set-ticket-is-in-external-system": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Set ticket is in external system.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_externalsystem_postticketisinexternalsystem__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SetTicketIsInExternalSystemRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/commands\/remove-category-automatic-assignee": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Remove category automatic assignee.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_removecategoryautomaticassignee_postremovecategoryautomaticassignee__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveCategoryAutomaticAssigneeRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/commands\/set-category-automatic-assignee": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Set category automatic assignee.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_setcategoryautomaticassignee_postsetcategoryautomaticassignee__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SetCategoryAutomaticAssigneeRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/commands\/set-category-managers": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_setcategorymanagers_postsetcategorymanagers__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SetCategoryManagersRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/commands\/start-action-on-ticket": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Start action on ticket.",
                "description": "When the request action code is `ADD_TICKET_COMMENT` or `ADD_TICKET_INTERNAL_COMMENT`\nthe record_id entry in the response will correspond to the newly created comment id (if the Workflow allows creation of such thing).",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_startactiononticket_poststartactiononticket__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/StartActionOnTicketRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/commands\/start-ticket-in-workflow": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Start new ticket in workflow process.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_startticketinworkflowprocess_poststartticketinworkflowprocess__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/StartTicketInWorkflowProcessRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/commands\/update-category": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Create new category.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_commands_updatecategory_postupdatecategory__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateCategoryRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/file-uploads\/by-id\/{fileUploadId}": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_fileupload_getfileupload__invoke",
                "parameters": [
                    {
                        "name": "fileUploadId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File upload details were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableFileUploadEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/file-uploads\/commands\/start": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_ticketing_application_api_v1_fileupload_poststartfileupload__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/StartFileUploadRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/labels\/list\/by-space-id\/{spaceId}": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "summary": "Get labels.",
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_labels_getlabels__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of space labels",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableLabelCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/notification-settings\/by-space-id\/{spaceId}": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "summary": "Retrieve notification settings.",
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_notificationsettings_getnotificationsettings__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notification settings was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableNotificationSettings"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/ticketing-status\/by-owner-id\/{ownerId}": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "summary": "Check if Ticketing is enabled for specified hierarchy subject owner.",
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_settings_getticketingstatus__invoke",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticketing status for specified owner was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTicketingStatusEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/ticket-number-series": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_ticketnumberseries_getticketnumberseries__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>owner_id (equal, in, not_equal, not_in)<\/li>\n<li>numbering_strategy (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, numbering_strategy",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ticket number series was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTicketNumberSeriesCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/tickets\/by-id\/{ticketId}\/available-actions": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_tickets_availableactions_getavailableactions__invoke",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available actions was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTicketAvailableActionCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/tickets\/by-id\/{ticketId}\/comments": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_tickets_comments_getcomments__invoke",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>author_id (equal, in, not_equal, not_in)<\/li>\n<li>created_at (equal, gt, gte, lt, lte)<\/li>\n<li>internal (equal, in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, created_at",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of comments for requested ticket was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCommentCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/tickets\/by-id\/{ticketId}\/contact-information": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_tickets_contactinformation_getticketcontactinformation__invoke",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact information for requested ticket was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableContactInformation"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/tickets\/admin": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_tickets_getadmintickets__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>category_id (equal, in, not_equal, not_in)<\/li>\n<li>author_id (equal, in, not_equal, not_in)<\/li>\n<li>parent_owner_id (equal, in, not_equal, not_in)<\/li>\n<li>parent_owner_type (equal, in, not_equal, not_in)<\/li>\n<li>priority (equal, gt, gte, lt, lte)<\/li>\n<li>ticket_owner_id (equal, in, not_equal, not_in)<\/li>\n<li>entrance_id (equal, in, not_equal, not_in)<\/li>\n<li>number (equal, in, not_equal, not_in)<\/li>\n<li>title (equal, contains, not_equal, not_contains)<\/li>\n<li>due_date (equal, gt, gte, lt, lte)<\/li>\n<li>assignee_id (equal, in, not_equal, not_in)<\/li>\n<li>archived (equal)<\/li>\n<li>submitted_at (equal, gt, gte, lt, lte)<\/li>\n<li>state_code (equal, in, not_equal, not_in)<\/li>\n<li>last_updated_at (equal, gt, gte, lt, lte)<\/li>\n<li>author_name (equal, in, not_equal, not_in, contains, not_contains)<\/li>\n<li>is_in_external_system (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, category_id, author_id, parent_owner_id, parent_owner_type, entrance_id, priority, number, title, state_code, due_date, archived, submitted_at, assignee_id, last_updated_at, is_in_external_system, author_name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tickets was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTicketCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/tickets\/end-user": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_tickets_getendusertickets__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>category_id (equal, in, not_equal, not_in)<\/li>\n<li>author_id (equal, in, not_equal, not_in)<\/li>\n<li>owner_id (equal, in, not_equal, not_in)<\/li>\n<li>number (equal, in, not_equal, not_in)<\/li>\n<li>title (equal, contains, not_equal, not_contains)<\/li>\n<li>submitted_at (equal, gt, gte, lt, lte)<\/li>\n<li>state_code (equal, in, not_equal, not_in)<\/li>\n<li>last_updated_at (equal, gt, gte, lt, lte)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, number, title, state_code, submitted_at, author_id, last_updated_at",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tickets was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableEndUserTicketCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/tickets\/by-id\/{ticketId}\/ticket-ratings": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_tickets_ratings_getticketratings__invoke",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, rating, createdAt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ticket ratings was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTicketRatingCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/tickets\/by-id\/{ticketId}\/repair-costs": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_tickets_repaircosts_getrepaircosts__invoke",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of repair costs was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTicketRepairCostCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/ticketing\/workflows": {
            "get": {
                "tags": [
                    "Ticketing"
                ],
                "summary": "Retrieve all workflows.",
                "operationId": "get_spaceflow_modules_ticketing_application_api_v1_workflows_getworkflows__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>owner_id (equal, in, not_equal, not_in)<\/li>\n<li>name (equal, contains, not_equal, not_contains)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of workflows was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableWorkflowCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/ticketing\/commands\/update-category": {
            "post": {
                "tags": [
                    "Ticketing",
                    "Commands"
                ],
                "summary": "Create new category.",
                "operationId": "post_spaceflow_modules_ticketing_application_api_v2_commands_updatecategory_postupdatecategory__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateCategoryRequestEntry2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/targeting\/allowed-targets\/by-space-id\/{spaceId}": {
            "get": {
                "tags": [
                    "Targeting"
                ],
                "summary": "Read the list of targets that the current user can use to target his content to within the specified space,\ne.g. when creating newsfeed post.",
                "operationId": "get_spaceflow_modules_targeting_application_api_v1_allowedtargets_getallowedtargetsbyspaceid__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of targets that the logged user can use",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTargetDescriptionListEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/targeting\/allowed-targets": {
            "get": {
                "tags": [
                    "Targeting"
                ],
                "summary": "Read the list of targets that the current user can use to target his content to,\ne.g. when creating newsfeed post.",
                "operationId": "get_spaceflow_modules_targeting_application_api_v1_allowedtargets_getallowedtargets__invoke",
                "responses": {
                    "200": {
                        "description": "List of targets that the logged user can use",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTargetDescriptionListEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/targeting\/my-targets": {
            "get": {
                "tags": [
                    "Targeting"
                ],
                "summary": "Get target list of logged user.",
                "operationId": "get_spaceflow_modules_targeting_application_api_v1_mytargets_getmytargets__invoke",
                "responses": {
                    "200": {
                        "description": "Get target list of logged user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTargets"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/custom-menu-icon\/commands\/create": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands",
                    "CustomMenuIcon"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_custommenuicon_commands_postcreatecustommenuicon__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateCustomMenuIconRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/custom-menu-icon\/commands\/delete": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands",
                    "CustomMenuIcon"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_custommenuicon_commands_postdeletecustommenuicon__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeleteCustomMenuIconRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/custom-menu-icon\/by-id\/{id}": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "CustomMenuIcon"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_custommenuicon_getcustommenuicon__invoke",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom Menu Icon was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCustomMenuIcon"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/custom-menu-icon\/list\/all": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "CustomMenuIcon"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_custommenuicon_getcustommenuicons__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. There are no fields with enabled filtering",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em>",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom Menu Icon list was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCustomMenuIconCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/start-image-upload": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "ImageUploads",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_imageupload_commands_poststartimageuploadcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/StartImageUploadRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/image-uploads\/by-id\/{imageUploadId}\/upload-url": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "ImageUploads"
                ],
                "summary": "Get image upload url by id.",
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_imageupload_getimageuploadurl__invoke",
                "parameters": [
                    {
                        "name": "imageUploadId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image upload details were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableImageUploadEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-portfolio-internal-details": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Portfolios",
                    "Commands"
                ],
                "summary": "Change Portfolio Internal Details.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_changeportfoliointernaldetails_postchangeportfoliointernaldetails__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePortfolioInternalDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/create-portfolio": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Portfolios",
                    "Commands"
                ],
                "summary": "Create Portfolio.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_createportfolio_postcreateportfoliocommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreatePortfolioRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/activate-portfolio-custom-icon": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postactivatecustomicon__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ActivateCustomIconRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/activate-document-management-system": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postactivatedocumentmanagementsystem__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ActivateDocumentManagementSystemRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/activate-portfolio-custom-white-label": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Activate custom white label.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postactivateportfoliocustomwhitelabel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ActivatePortfolioCustomWhiteLabelRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/activate-portfolio-smart-parcels": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postactivateportfoliosmartparcels__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ActivateSmartParcelsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/activate-portfolio-visitor-management-system": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postactivatevisitormanagementsystem__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ActivateVisitorManagementSystemRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/add-portfolio-custom-branding": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postaddportfoliocustombranding__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddPortfolioCustomBrandingRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-portfolio-address": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change portfolio address.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postchangeportfolioaddress__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePortfolioAddressRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-portfolio-custom-branding": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postchangeportfoliocustombranding__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePortfolioCustomBrandingRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-portfolio-custom-white-label": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change portfolio Custom White Label.",
                "description": "This endpoint it is deprecated, use instead:\n- api\/v2\/spaces\/commands\/change-portfolio-custom-white-label.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postchangeportfoliocustomwhitelabel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePortfolioCustomWhiteLabelRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-portfolio-details": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change portfolio details.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postchangeportfoliodetails__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePortfolioDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/deactivate-portfolio-custom-icon": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change portfolio address.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postdeactivatecustomicon__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivateCustomIconRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/deactivate-document-management-system": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postdeactivatedocumentmanagementsystem__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivateDocumentManagementSystemRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/deactivate-portfolio-custom-white-label": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Deactivate custom white label.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postdeactivateportfoliocustomwhitelabel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivatePortfolioCustomWhiteLabelRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/deactivate-portfolio-smart-parcels": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postdeactivateportfoliosmartparcels__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivateSmartParcelsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/deactivate-portfolio-visitor-management-system": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postdeactivatevisitormanagementsystem__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivateVisitorManagementSystemRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/remove-portfolio-custom-branding": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Remove custom branding from a given portfolio.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_portfolios_commands_postremoveportfoliocustombranding__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemovePortfolioCustomBrandingRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/portfolios\/list\/all": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Portfolios"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_portfolios_getallportfolios__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>name (equal, contains, not_equal, not_contains)<\/li>\n<li>companyName (equal, contains, not_equal, not_contains)<\/li>\n<li>companyRegistrationNumber (equal, contains, not_equal, not_contains)<\/li>\n<li>status (equal, contains, not_equal, not_contains)<\/li>\n<li>communityManagerId (equal, in, not_equal, not_in)<\/li>\n<li>businessDevelopmentManagerId (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, name, companyName, companyRegistrationNumber, status, communityManagerId, businessDevelopmentManagerId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all portfolios was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePortfolioCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/portfolios\/{portfolioId}": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Portfolios"
                ],
                "summary": "Get portfolio by ID.",
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_portfolios_getportfolio__invoke",
                "parameters": [
                    {
                        "name": "portfolioId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get single Portfolio by Id",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePortfolioDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/portfolios\/{portfolioId}\/internal-details": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Portfolios"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_portfolios_getportfoliointernaldetails__invoke",
                "parameters": [
                    {
                        "name": "portfolioId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Portfolio internal details were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePortfolioInternalDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/portfolios\/{portfolioId}\/settings": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Portfolios"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_portfolios_getportfoliosettings__invoke",
                "parameters": [
                    {
                        "name": "portfolioId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Portfolio settings were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePortfolioSettings"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-space-app-details": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "summary": "Change Space App Details.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_changespaceappdetailscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeSpaceAppDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-space-area": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "summary": "Change Space Area.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_changespaceareacommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeSpaceAreaRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-space-details": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change Space Details.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_changespacedetailscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeSpaceDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-space-entrance": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change Space Entrance.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_changespaceentrance_postchangespaceentrance__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SpaceEntranceRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-space-app-setting": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "summary": "Change Space Settings.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_changespacesettingscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeSpaceSettingsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/activate-space-smart-parcels": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postactivatespacesmartparcelscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ActivateSpaceSmartParcelsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/activate-space-visitor-management-system": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postactivatevisitormanagementsystemcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ActivateVisitorManagementSystemRequestEntry2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/add-important-contact": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postaddimportantcontact__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddImportantContactRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/add-level-details": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postaddleveldetailscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddLevelDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/add-portfolio-important-contact": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postaddportfolioimportantcontact__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddPortfolioImportantContactRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/cancel-calendar-event": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "summary": "Cancel Calendar Event.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postcancelcalendarevent__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CancelCalendarEventRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-level-details": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postchangeleveldetailscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeLevelDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-space-groups": {
            "post": {
                "tags": [
                    "SpaceManagement"
                ],
                "summary": "Set Space Labels.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postchangespacegroups__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeSpaceGroupsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-space-internal-details": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "summary": "Change Space Internal Details.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postchangespaceinternaldetailscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeSpaceInternalDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-time-zone": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change Space Timezone.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postchangespacetimezonecommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeSpaceTimeZoneRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-space-unit-details": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change space unit details.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postchangespaceunitdetails__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeSpaceUnitDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-welcome-screen": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands",
                    "WelcomeScreen"
                ],
                "summary": "Change the Welcome Screen for the Space.",
                "description": "If no Welcome Screen exists for that space, an error event is produced in the feedback.\nThis endpoint may only be used for updating already existing Welcome Screen. Initialization must be done\nvia \/create-welcome-screen.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postchangewelcomescreen__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeWelcomeScreenRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/create-calendar-event": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postcreatecalendarevent__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateCalendarEventRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/add-custom-menu-item": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands",
                    "CustomMenu"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postcreatecustommenuitem__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddCustomMenuItemRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/create-level": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Create Level.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postcreatelevel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateLevelRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/create-space": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Create Space.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postcreatespace__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateSpaceRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/create-space-entrance": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Create Space Entrance.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postcreatespaceentrance__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateSpaceEntranceRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/create-space-unit": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Create Space Unit.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postcreatespaceunit__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateSpaceUnitRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateSpaceUnitRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/create-welcome-screen": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands",
                    "WelcomeScreen"
                ],
                "summary": "Create a Welcome Screen for given Space.",
                "description": "If a Welcome Screen for this Space already exists, an error event will be created in the Event Feedback.\nThis action can only be called for initialization on welcome screen. Additional changes must be done via the \/change-welcome-screen action.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postcreatewelcomescreen__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateWelcomeScreenRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/deactivate-space-smart-parcels": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postdeactivatespacesmartparcelscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivateSpaceSmartParcelsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/deactivate-space-visitor-management-system": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postdeactivatevisitormanagementsystemcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivateVisitorManagementSystemRequestEntry2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/delete-level": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Delete Level.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postdeletelevel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeleteLevelRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/delete-space-entrance": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Delete Space Entrance.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postdeletespaceentrance__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeleteSpaceEntranceRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/delete-space-unit": {
            "post": {
                "tags": [
                    "SpaceManagement"
                ],
                "summary": "Delete Space Unit.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postdeletespaceunit__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SpaceUnitIdRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/delete-welcome-screen": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands",
                    "WelcomeScreen"
                ],
                "summary": "Remove the Welcome Screen from the Space with given ID.",
                "description": "Beware, the \"is_welcome_screen_on\" key in SpaceSettings will still return true.\nBut the endpoint for returning Welcome Screens will start returning 404.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postdeletewelcomescreen__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeleteWelcomeScreenRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/remove-custom-menu-item": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands",
                    "CustomMenu"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postremovecustommenuitem__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveCustomMenuItemRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/remove-important-contact": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postremoveimportantcontact__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveImportantContactRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/remove-portfolio-important-contact": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postremoveportfolioimportantcontact__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemovePortfolioImportantContactRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/set-space-branding": {
            "post": {
                "tags": [
                    "SpaceManagement"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postsetspacebranding__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SetSpaceBrandingRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/set-space-labels": {
            "post": {
                "tags": [
                    "SpaceManagement"
                ],
                "summary": "Set Space Labels.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postsetspacelabels__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SetSpaceLabelsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/update-calendar-event": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "summary": "Update Calendar Event.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postupdatecalendareventcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateCalendarEventRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/update-custom-menu-item": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands",
                    "CustomMenu"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postupdatecustommenuitemcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateCustomMenuItemRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/update-level-order": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_spaces_commands_postupdatelevelorder__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateLevelOrderRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}\/admin-custom-menu": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "CustomMenu"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getadmincustommenu__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of custom menu items was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCustomMenuItemCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces-internal-details\/list\/all": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getallspaceinternaldetails__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>space_id (equal, in, not_equal, not_in)<\/li>\n<li>status (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: space_id, status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all Spaces' InternalDetails was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceInternalDetailsCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}\/units": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getallspaceunits__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>tenant_id (equal, in, not_equal, not_in)<\/li>\n<li>entrance_id (equal, in, not_equal, not_in)<\/li>\n<li>name (equal, contains, not_equal, not_contains)<\/li>\n<li>entrance_name (equal, contains, not_equal, not_contains)<\/li>\n<li>level_id (equal, in, not_equal, not_in)<\/li>\n<li>unit_order (equal, gt, gte, lt, lte)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, name, entrance_name, level_order, unit_order",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all space units was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceUnitsCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/list\/all": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getallspaces__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>name (equal, contains, not_equal, not_contains)<\/li>\n<li>portfolio_id (equal, in, not_equal, not_in)<\/li>\n<li>status (equal, contains, not_equal, not_contains)<\/li>\n<li>type (equal, contains, not_equal, not_contains)<\/li>\n<li>community_manager_id (equal, in, not_equal, not_in)<\/li>\n<li>business_development_manager_id (equal, in, not_equal, not_in)<\/li>\n<li>created_at (equal, gt, gte, lt, lte)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, name, portfolio_id, status, type, community_manager_id, business_development_manager_id, created_at",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all spaces was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}\/calendar-events": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getcalendarevents__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>event_id (equal, in, not_equal, not_in)<\/li>\n<li>space_id (equal, in, not_equal, not_in)<\/li>\n<li>start_at (equal, gt, gte, lt, lte)<\/li>\n<li>end_at (equal, gt, gte, lt, lte)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: title, start_at, end_at",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of space calendar events was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CalendarEventEntryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}\/important-contacts": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getimportantcontacts__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>space_id (equal, in, not_equal, not_in)<\/li>\n<li>is_public_profile (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em>",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of space important contacts was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableImportantContactCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}\/mobile-app-custom-menu": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "CustomMenu"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getmobileappcustommenu__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of custom menu items was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCustomMenuItemCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/portfolios\/{portfolioId}\/important-contacts": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Portfolios"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getportfolioimportantcontacts__invoke",
                "parameters": [
                    {
                        "name": "portfolioId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>portfolio_id (equal, in, not_equal, not_in)<\/li>\n<li>is_public_profile (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em>",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of space important contacts was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableImportantContactCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}\/app-details": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getspaceappdetails__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space app details were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceAppDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}\/space-area": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "summary": "Retrieve Space Area by id.",
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getspaceareaquery__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space area were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceArea"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getspacedetails__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space details were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePortfolioInternalDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/by-id\/{spaceId}\/entrances": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getspaceentrances__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>tenant_id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em>",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space entrances were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceEntranceCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/by-id\/{spaceId}\/internal-details": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getspaceinternaldetails__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space internal details were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceInternalDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}\/levels": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getspacelevels__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>tenant_id (equal, in, not_equal, not_in)<\/li>\n<li>level_id (equal, in, not_equal, not_in)<\/li>\n<li>space_id (equal, in, not_equal, not_in)<\/li>\n<li>entrance_id (equal, in, not_equal, not_in)<\/li>\n<li>entrance_name (equal, contains, not_equal, not_contains)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: level_order, unit_order, entrance_name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of space levels was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceLevelCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}\/settings": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "summary": "Retrieve space settings by id.",
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getspacesettings__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space settings were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceSettings"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}\/units\/{unitId}": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces"
                ],
                "summary": "Get space units details.",
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getspaceunitsdetails__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unitId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space unit details were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceUnit"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/spaces\/{spaceId}\/welcome-screen": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Spaces",
                    "WelcomeScreen"
                ],
                "summary": "Retrieve a Space welcome screen by id.",
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_spaces_getspacewelcomescreen__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space settings were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceWelcomeScreen"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/add-tenant-space-units": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Add Tenant Space Units.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postaddtenantspaceunitscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/TenantSpaceUnitsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-company-representative-details": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Change Company Representative Details.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postchangecompanyrepresentativedetailscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeCompanyRepresentativeDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-company-tenant-public-profile": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Change Company Tenant Public Profile.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postchangecompanytenantpublicprofilecommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeCompanyTenantPublicProfileRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-individual-tenant-address": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Change Individual Tenant Address.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postchangeindividualtenantaddresscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/IndividualTenantAddressRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-individual-tenant-info-details": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Change Individual Tenant Info Details.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postchangeindividualtenantinfodetailscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/IndividualTenantInfoDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-tenant-company-address": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Change Tenant Company Address.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postchangetenantcompanyaddresscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeTenantCompanyAddressRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-tenant-company-info-details": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Change Tenant Company Info Details.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postchangetenantcompanyinfodetailscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeTenantCompanyInfoDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-tenant-lease-information": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Change Tenant Lease Information.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postchangetenantleaseinformation__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/TenantLeaseInformationRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-tenant-setting": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Change Tenant Settings.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postchangetenantsettingscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeTenantSettingsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/change-tenant-status": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change Tenant Status.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postchangetenantstatus__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/TenantStatusRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/create-tenant": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Create Tenant.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postcreatetenantcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateTenantWithDefaultAuthenticationMethodProcessRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/remove-tenant-space-units": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Remove Tenant Space Unit.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postremovetenantspaceunitscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/TenantSpaceUnitsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/turn-off-company-tenant-public-profile": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Turn Off Company Tenant Public Profile.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postturnoffcompanytenantpublicprofilecommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/TurnOffCompanyTenantPublicProfileRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/commands\/turn-on-company-tenant-public-profile": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Tenants",
                    "Commands"
                ],
                "summary": "Turn On Company Tenant Public Profile.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v1_tenants_commands_postturnoncompanytenantpublicprofilecommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/TurnOnCompanyTenantPublicProfileRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/tenants\/list\/all": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Tenants"
                ],
                "summary": "Retrieve all categories.",
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_tenants_getalltenantsinspace__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>status (equal, contains, not_equal, not_contains)<\/li>\n<li>type (equal, contains, not_equal, not_contains)<\/li>\n<li>created_at (equal, gt, gte, lt, lte)<\/li>\n<li>space_id (equal, in, not_equal, not_in)<\/li>\n<li>search (equal, not_equal, contains)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, status, type, created_at, space_id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTenantShortExtractCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/tenants\/by-id\/{tenantId}\/details\/admin": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Tenants"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_tenants_gettenantdetailsadmin__invoke",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tenants details for admin",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTenantDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/tenants\/by-id\/{tenantId}\/details": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Tenants"
                ],
                "summary": "Read Tenant details. DEPRECATED endpoint.",
                "description": "This endpoint is deprecated. Use following endpoints instead:\n- \/api\/v2\/spaces\/tenants\/by-id\/{tenantId}\/details (for general information)\n- \/api\/v1\/spaces\/tenants\/by-id\/{tenantId}\/details\/admin (admin purpose)",
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_tenants_gettenantdetails__invoke",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response containing Tenant detail records.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTenantDetailsV1"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/tenants\/by-id\/{tenantId}\/lease-information": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Tenants"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_tenants_gettenantleaseinformation__invoke",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get tenants lease information by tenant Id",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTenantLeaseInformation"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/tenants\/by-id\/{tenantId}\/settings": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Tenants"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_tenants_gettenantsettings__invoke",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tenants settings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTenantSettings"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/tenants\/by-id\/{tenantId}\/space-units\/list\/all": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Tenants"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_tenants_gettenantspaceunits__invoke",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tenants settings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceUnitsCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/tenants\/by-id\/{tenantId}\/count-of-tenants-in-tenant": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Tenants"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_tenants_gettenantscountinsideatenant__invoke",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tenants settings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTenantsCountInTenant"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/spaces\/tenants-with-representatives\/list\/all": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Tenants"
                ],
                "summary": "Retrieve tenants with their respective tenant representatives.",
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v1_tenants_gettenantswithrepresentatives__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>level_id (equal, in, not_equal, not_in)<\/li>\n<li>entrance_id (equal, in, not_equal, not_in)<\/li>\n<li>space_unit_id (equal, in, not_equal, not_in)<\/li>\n<li>search (equal, contains)<\/li>\n<li>type (equal, not_equal, in, not_in)<\/li>\n<li>status (equal, not_equal, in, not_in)<\/li>\n<li>space_id (equal, in)<\/li>\n<li>id (equal, in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, status, type, created_at, space_id, tenant_id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tenants was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTenantWithLeaseAndManagersCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/spaces\/commands\/change-portfolio-custom-white-label": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change portfolio Custom White Label.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v2_portfolios_commands_postchangeportfoliocustomwhitelabel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/V2ChangePortfolioCustomWhiteLabelRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/spaces\/commands\/create-space": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Create Space with timezone.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v2_spaces_commands_v2postcreatespace__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/V2CreateSpaceRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/spaces\/tenants\/by-id\/{tenantId}\/details": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Tenants"
                ],
                "operationId": "get_spaceflow_modules_spacemanagement_application_api_v2_tenants_gettenantdetails__invoke",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tenants details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTenantDetailsV2"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v3\/spaces\/commands\/change-portfolio-custom-white-label": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change portfolio Custom White Label.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v3_portfolios_commands_postchangeportfoliocustomwhitelabel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePortfolioCustomWhiteLabelRequestEntry2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v4\/spaces\/commands\/change-portfolio-custom-white-label": {
            "post": {
                "tags": [
                    "SpaceManagement",
                    "Commands"
                ],
                "summary": "Change portfolio Custom White Label.",
                "operationId": "post_spaceflow_modules_spacemanagement_application_api_v4_portfolios_commands_postchangeportfoliocustomwhitelabel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePortfolioCustomWhiteLabelRequestEntry3"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/notification\/commands\/remove-device-token": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "operationId": "post_spaceflow_modules_notification_application_api_v1_commands_removedevicetoken_removedevicetokencommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveDeviceTokenEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Remove device token",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/notification\/commands\/send-push-notification": {
            "post": {
                "tags": [
                    "Notification",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_notification_application_api_v1_commands_sendpushnotification_postsendpushnotificationcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SendPushNotificationEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/notification\/user-notification-setting\/commands\/set": {
            "post": {
                "tags": [
                    "Notification",
                    "Commands"
                ],
                "summary": "Set user common notification settings.",
                "operationId": "post_spaceflow_modules_notification_application_api_v1_commands_setusernotificationsetting_postsetusernotificationsetting__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SetUserNotificationSettingEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/notification\/commands\/add-device-token": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Add device token.",
                "operationId": "post_spaceflow_modules_notification_application_api_v1_notification_commands_postadddevicetoken__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SerializableDeviceTokenRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Add device token",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/notification\/commands\/chat-push-notification": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Send Chat Push Notification.",
                "description": "Internal endpoint with HTTP basic authentication.",
                "operationId": "post_spaceflow_modules_notification_application_api_v1_notification_commands_postchatpushnotification__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SerializablePostChatPushNotificationRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trigger Push Notification",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableEntryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/notification\/user-notification-settings\/list\/by-user-id\/{userId}": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "operationId": "get_spaceflow_modules_notification_application_api_v1_usernotificationsettings_getusernotificationssettings__invoke",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get user notification settings list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableUserNotificationSettingsEntryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/google\/access-via-code": {
            "post": {
                "tags": [
                    "GoogleOAuthModule"
                ],
                "summary": "Process the tokens obtained from the Google SSO after the user authenticated.",
                "operationId": "post_spaceflow_modules_googleoauthmodule_application_accessviacodetoken_accessviacodetoken__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AccessViaCodeTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Google token was accepted for further processing.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AccessViaCodeTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/google\/access-via-jwt": {
            "post": {
                "tags": [
                    "GoogleOAuthModule"
                ],
                "summary": "Process the tokens obtained from the Google SSO after the user authenticated.",
                "operationId": "post_spaceflow_modules_googleoauthmodule_application_accessviajwttoken_accessviajwttoken__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AccessViaJwtTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Google token was accepted for further processing.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AccessViaJwtTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/google\/describe": {
            "get": {
                "tags": [
                    "GoogleOAuthModule"
                ],
                "summary": "List the available endpoints for this module.",
                "operationId": "get_spaceflow_modules_googleoauthmodule_application_describeprocess_describeprocess__invoke",
                "responses": {
                    "200": {
                        "description": "List of available endpoints for this authentication method",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DescribeProcessResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/google\/start": {
            "post": {
                "tags": [
                    "GoogleOAuthModule"
                ],
                "summary": "Start the particular Google OAuth authentication process - returns the URL for the Google SSO page.",
                "operationId": "post_spaceflow_modules_googleoauthmodule_application_startgoogleoauthauthenticationprocess_startgoogleoauthauthenticationprocess__invoke",
                "responses": {
                    "200": {
                        "description": "Authentication process started",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StartGoogleOAuthAuthenticationProcessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/facebook\/access-via-code": {
            "post": {
                "tags": [
                    "FacebookOAuthModule"
                ],
                "operationId": "post_spaceflow_modules_facebookoauthmodule_application_accessviacodetoken_accessviacodetoken__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AccessViaCodeTokenRequest2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Facebook authorization code was accepted for further processing.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AccessViaCodeTokenResponse2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/facebook\/access-via-jwt": {
            "post": {
                "tags": [
                    "FacebookOAuthModule"
                ],
                "operationId": "post_spaceflow_modules_facebookoauthmodule_application_accessviajwttoken_accessviajwttoken__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AccessViaJwtTokenRequest2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Facebook access token was accepted for further processing.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AccessViaJwtTokenResponse2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/facebook\/describe": {
            "get": {
                "tags": [
                    "FacebookOAuthModule"
                ],
                "summary": "List the available endpoints for this module.",
                "operationId": "get_spaceflow_modules_facebookoauthmodule_application_describeprocess_describeprocess__invoke",
                "responses": {
                    "200": {
                        "description": "List of available endpoints for this authentication method",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DescribeProcessResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/facebook\/start": {
            "post": {
                "tags": [
                    "FacebookOAuthModule"
                ],
                "operationId": "post_spaceflow_modules_facebookoauthmodule_application_startfacebookoauthauthenticationprocess_startfacebookoauthauthenticationprocess__invoke",
                "responses": {
                    "200": {
                        "description": "Authentication process started",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StartFacebookOAuthAuthenticationProcessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/apple\/access-via-code": {
            "post": {
                "tags": [
                    "AppleOAuthModule"
                ],
                "operationId": "post_spaceflow_modules_appleoauthmodule_application_accessviacodetoken_accessviacodetoken__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AccessViaCodeTokenRequest3"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Apple ID token was accepted for further processing.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AccessViaCodeTokenResponse3"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/apple\/describe": {
            "get": {
                "tags": [
                    "AppleOAuthModule"
                ],
                "summary": "List the available endpoints for this module.",
                "operationId": "get_spaceflow_modules_appleoauthmodule_application_describeprocess_describeprocess__invoke",
                "responses": {
                    "200": {
                        "description": "List of available endpoints for this authentication method",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DescribeProcessResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/apple\/start": {
            "post": {
                "tags": [
                    "AppleOAuthModule"
                ],
                "operationId": "post_spaceflow_modules_appleoauthmodule_application_startappleoauthauthenticationprocess_startappleoauthauthenticationprocess__invoke",
                "responses": {
                    "200": {
                        "description": "Authentication process started",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StartAppleOAuthAuthenticationProcessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/saml\/login": {
            "post": {
                "tags": [
                    "Saml"
                ],
                "operationId": "post_spaceflow_modules_samlauthmodule_application_api_v1_saml_postsamllogin__invoke",
                "responses": {
                    "302": {
                        "description": "SAML response was processed and use is redirected back to SF frontend"
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication\/saml\/start": {
            "post": {
                "tags": [
                    "Saml"
                ],
                "operationId": "post_spaceflow_modules_samlauthmodule_application_api_v1_saml_postsamlstart__invoke",
                "responses": {
                    "200": {
                        "description": "Craft an URL to start the Azure AD SAML Login process with.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PostSamlStartResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/commands\/start-image-upload": {
            "post": {
                "tags": [
                    "PeopleModule",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_people_application_api_v1_imageupload_commands_poststartimageuploadcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/StartImageUploadRequestBody2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/image-uploads\/by-id\/{imageUploadId}\/upload-url": {
            "get": {
                "tags": [
                    "PeopleModule",
                    "ImageUploads"
                ],
                "summary": "Get image upload url by id.",
                "operationId": "get_spaceflow_modules_people_application_api_v1_imageupload_getimageuploadurl__invoke",
                "parameters": [
                    {
                        "name": "imageUploadId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image upload details were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableImageUploadEntry2"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/commands\/change-own-avatar": {
            "post": {
                "tags": [
                    "PeopleModule",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_people_application_api_v1_person_commands_postchangeownavatarcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeOwnAvatarRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/commands\/change-personal-information": {
            "post": {
                "tags": [
                    "PeopleModule",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_people_application_api_v1_person_commands_postchangepersonpersonalinformation__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePersonalInformationRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/commands\/set-person-portfolio-external-details": {
            "post": {
                "tags": [
                    "PeopleModule",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_people_application_api_v1_person_commands_postsetpersonportfolioexternaldetailscommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PersonPortfolioExternalDetailsEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/commands\/update-phone-number": {
            "post": {
                "tags": [
                    "PeopleModule",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_people_application_api_v1_person_commands_postupdatephonenumber__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdatePhoneNumberRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/list\/acs-managers\/by-hierarchy-subject-id\/{hierarchySubjectId}": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "summary": "Get ACS managers.",
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getacsmanagers__invoke",
                "parameters": [
                    {
                        "name": "hierarchySubjectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: first_name, last_name, id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ACS managers for given hierarchy subject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePersonCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/list\/all\/by-hierarchy-subject-id\/{hierarchySubjectId}": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getchatpeople__invoke",
                "parameters": [
                    {
                        "name": "hierarchySubjectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>is_public_profile (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users who can approach in chat given hierarchy subject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePersonCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/list\/concierges\/by-hierarchy-subject-id\/{hierarchySubjectId}": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "summary": "Get ACS managers.",
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getconcierges__invoke",
                "parameters": [
                    {
                        "name": "hierarchySubjectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Concierges for given hierarchy subject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePersonCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/list\/hobbies\/{lang}": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "summary": "Get list of default hobbies.",
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getdefaulthobbies__invoke",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available hobbies",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTranslatedHobbyCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/list\/end-users\/by-hierarchy-subject-id\/{hierarchySubjectId}": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "summary": "Get end-users of hierarchy subject id (Portfolio\/Space\/Tenant ID).",
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getendusers__invoke",
                "parameters": [
                    {
                        "name": "hierarchySubjectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: first_name, last_name, id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of end users for given hierarchy subject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePersonCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/own-person-detail": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getownpersondetail__invoke",
                "responses": {
                    "200": {
                        "description": "Get own details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePerson"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/by-id\/{personId}\/details": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Tenants"
                ],
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getpersondetail__invoke",
                "parameters": [
                    {
                        "name": "personId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tenants details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePerson"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person-portfolio-external-details": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "summary": "Get persons portfolio payment details list.",
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getpersonportfolioexternaldetails__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>person_id (equal, in, not_equal, not_in)<\/li>\n<li>portfolio_id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of person portfolio payment details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePersonPortfolioExternalDetailsCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/list\/portfolio-managers\/by-hierarchy-subject-id\/{hierarchySubjectId}": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "summary": "Get portfolio managers.",
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getportfoliomanagers__invoke",
                "parameters": [
                    {
                        "name": "hierarchySubjectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: first_name, last_name, id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of portfolio managers for given hierarchy subject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePersonCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/list\/space-managers\/by-hierarchy-subject-id\/{hierarchySubjectId}": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "summary": "Get space managers.",
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getspacemanagers__invoke",
                "parameters": [
                    {
                        "name": "hierarchySubjectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: first_name, last_name, id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of space managers for given hierarchy subject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePersonCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/list\/tenant-managers\/by-hierarchy-subject-id\/{hierarchySubjectId}": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "summary": "Get tenant managers.",
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_gettenantmanagers__invoke",
                "parameters": [
                    {
                        "name": "hierarchySubjectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: first_name, last_name, id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tenant managers for given hierarchy subject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePersonCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/list\/ticket-managers\/by-hierarchy-subject-id\/{hierarchySubjectId}": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "summary": "Get ticketing managers of hierarchy subject id (Portfolio\/Space\/Tenant ID).",
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getticketingmanagers__invoke",
                "parameters": [
                    {
                        "name": "hierarchySubjectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: first_name, last_name, id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ticket managers for given hierarchy subject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePersonCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/people\/person\/list\/vendor-managers\/by-hierarchy-subject-id\/{hierarchySubjectId}": {
            "get": {
                "tags": [
                    "PeopleModule"
                ],
                "summary": "Get vendor managers of hierarchy subject id.",
                "operationId": "get_spaceflow_modules_people_application_api_v1_person_getvendormanagers__invoke",
                "parameters": [
                    {
                        "name": "hierarchySubjectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: first_name, last_name, id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vendor managers for given hierarchy subject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePersonCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/allowed-actions\/{spaceId}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "AllowedActions"
                ],
                "summary": "Returns allowed actions in Space.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_allowedactions_getallowedactions__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Allowed actions were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAllowedActions"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/channel-subscriptions\/commands\/add": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Channels",
                    "Commands"
                ],
                "summary": "Add subscription to a channel for the user.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_channelsubscriptions_commands_postaddsubscription__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddSubscriptionRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed. Subscription is being created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/channel-subscriptions\/commands\/remove": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Channels",
                    "Commands"
                ],
                "summary": "Remove subscription to a channel for the user.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_channelsubscriptions_commands_postremovesubscription__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveSubscriptionRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed. Subscription is being removed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/channel-subscriptions\/list\/all": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Channels"
                ],
                "summary": "List of user subscribed channels.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_channelsubscriptions_getusersubscribedchannels__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>space_id (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User channel subscriptions list was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableUserChannelSubscriptionCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/channels\/commands\/create": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Channels",
                    "Commands"
                ],
                "summary": "Create new Channel.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_channels_commands_postcreatechannel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateChannelRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed. Channel is being created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/channels\/commands\/delete": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Channels",
                    "Commands"
                ],
                "summary": "Delete a Channel.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_channels_commands_postdeletechannel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeleteChannelRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed. Channel is being deleted.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/channels\/commands\/set-as-mandatory": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Channels",
                    "Commands"
                ],
                "summary": "Set Channel as mandatory.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_channels_commands_postsetchannelasmandatory__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SetChannelAsMandatoryRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and Channel is being set as mandatory.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/channels\/commands\/unset-from-mandatory": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Channels",
                    "Commands"
                ],
                "summary": "Unset Channel from mandatory.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_channels_commands_postunsetchannelfrommandatory__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UnsetChannelFromMandatoryRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and Channel is being unset from mandatory.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/channels\/commands\/update": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Channels",
                    "Commands"
                ],
                "summary": "Update a Channel.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_channels_commands_postupdatechannel__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateChannelRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and Channel is being updated.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/channels\/list\/all": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Channels"
                ],
                "summary": "List channels accessible to current user.",
                "description": "Note: When filtering by title, it is recommended to apply also filtering by locale.\nNote: Sort by \"-is_mandatory\" in order to ensure mandatory channels are first in the list.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_channels_getchannels__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>target_id (equal)<\/li>\n<li>channel_id (equal)<\/li>\n<li>locale (equal)<\/li>\n<li>title (contains)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: channel_id, is_mandatory",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channel list was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableChannelCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/conversations\/delete-conversation": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Conversations",
                    "Commands"
                ],
                "summary": "Delete Conversation.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_conversations_commands_deleteconversationcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeleteConversationRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/commands\/create-conversation": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Conversations",
                    "Commands"
                ],
                "summary": "Create Conversation.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_conversations_commands_postcreateconversationcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateConversationRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/conversations\/list\/all": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Conversations"
                ],
                "summary": "Get conversations for post.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_conversations_getconversationsforpost__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>created_at (equal, gt, gte, lt, lte)<\/li>\n<li>post_id (equal, in, not_equal, not_in)<\/li>\n<li>author_id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, created_at, post_id, author_id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all conversations was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableConversationCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/events\/events\/by-id\/{eventId}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Events",
                    "Commands"
                ],
                "summary": "Event detail.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_event_geteventdetail__invoke",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event detail",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableEventDetail"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/events\/events\/by-id\/{eventId}\/participants": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Events",
                    "Queries"
                ],
                "summary": "Event participants.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_event_geteventparticipants__invoke",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>created_at (equal, gt, gte, lt, lte)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: created_at, user_id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event participants",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableEventParticipantCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/events\/events\/by-id\/{eventId}\/settings": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Events"
                ],
                "summary": "Event detail.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_event_geteventsettings__invoke",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Event Settings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableEventSettings"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/events\/joined-events\/list": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Events",
                    "Queries"
                ],
                "summary": "Joined events for the participant.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_event_geteventsforparticipant__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>event_id (equal, in, not_equal, not_in)<\/li>\n<li>start_at (equal, gt, gte, lt, lte)<\/li>\n<li>end_at (equal, gt, gte, lt, lte)<\/li>\n<li>customer_id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: start_at, end_at",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Joined events for the participant",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableEventForParticipantCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/events\/commands\/change-event-settings": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Events",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_event_postchangeeventsettings__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeEventSettingsRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/events\/commands\/join-event": {
            "post": {
                "tags": [
                    "Events",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_event_postjoinevent__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/JoinEventRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/events\/commands\/unjoin-event": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Events",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_event_postunjoinevent__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UnJoinEventRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/commands\/start-image-upload": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Commands",
                    "ImageUploads"
                ],
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_imageupload_commands_poststartimageuploadcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/StartImageUploadRequestBody3"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/image-uploads\/by-id\/{imageUploadId}\/upload-url": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "ImageUploads"
                ],
                "summary": "Get image upload url by id.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_imageupload_getimageuploadurl__invoke",
                "parameters": [
                    {
                        "name": "imageUploadId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image upload details were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableImageUploadEntry3"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/commands\/like-subject": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "LikeSubject",
                    "Commands"
                ],
                "summary": "Add Like Subject.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_likesubject_commands_postlikesubjectcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddLikeSubjectRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/commands\/unlike-subject": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "LikeSubject",
                    "Commands"
                ],
                "summary": "Unlike Subject.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_likesubject_commands_postunlikesubjectcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UnlikeSubjectRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/liked-subjects\/by-target-subject-id\/{targetSubjectId}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "LikedSubjects"
                ],
                "summary": "Read Subject Likes.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_likedsubjects_getlikedsubjectsbytargetsubjectid__invoke",
                "parameters": [
                    {
                        "name": "targetSubjectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subject Likes",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableLikedSubject"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/commands\/change-notification-settings": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_notificationsettings_commands_postchangenotificationsettings__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeNotificationSettingsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/notification-settings\/by-space-id\/{spaceId}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "NotificationSettings"
                ],
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_notificationsettings_getnotificationsettings__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notification settings were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableNotificationSettings2"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/polls\/commands\/add-poll-answer": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Polls",
                    "Commands"
                ],
                "summary": "Add Poll Answer.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_polls_commands_postaddpollanswercommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddPollAnswerRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/polls\/commands\/add-user-answer-to-poll": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Polls",
                    "Commands"
                ],
                "summary": "Add User Answer To Poll.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_polls_commands_postadduseranswertopollcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AddUserAnswerToPollRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/polls\/commands\/change-poll-settings": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Polls",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_polls_commands_postchangepollsettings__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePollSettingsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/polls\/commands\/remove-poll-answer": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Polls",
                    "Commands"
                ],
                "summary": "Remove Poll Answer.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_polls_commands_postremovepollanswercommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemovePollAnswerRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/polls\/commands\/vote-for-poll-answers": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Polls",
                    "Commands"
                ],
                "summary": "Vote for poll answers.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_polls_commands_postvoteforpollanswers__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/VoteForPollAnswersRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vote for poll answers.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/polls\/by-id\/{pollId}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Polls"
                ],
                "summary": "Poll detail.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_polls_getpoll__invoke",
                "parameters": [
                    {
                        "name": "pollId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll detail",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePoll"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/polls\/by-id\/{pollId}\/settings": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Polls"
                ],
                "summary": "Get Poll Settings.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_polls_getpollsettings__invoke",
                "parameters": [
                    {
                        "name": "pollId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll settings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePollSettings"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/polls\/by-id\/{pollId}\/votes": {
            "get": {
                "tags": [
                    "SpaceManagement",
                    "Newsfeed"
                ],
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_polls_getpollvotes__invoke",
                "parameters": [
                    {
                        "name": "pollId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll votes",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePollVotes"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/posts\/commands\/change-post-data": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Posts",
                    "Commands"
                ],
                "summary": "Change Post Data.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_posts_commands_postchangepostdatacommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePostDataRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/posts\/commands\/change-post-state": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Posts",
                    "Commands"
                ],
                "summary": "Change Post State.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_posts_commands_postchangepoststatecommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePostStateRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/posts\/commands\/change-post-target": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Posts",
                    "Commands"
                ],
                "summary": "Change Post Target.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_posts_commands_postchangeposttargetcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePostTargetRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/posts\/commands\/create-post": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Posts",
                    "Commands"
                ],
                "summary": "Create Post.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_posts_commands_postcreatepostcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreatePostRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/posts\/commands\/pin-post": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Posts",
                    "Commands"
                ],
                "summary": "Pin Post.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_posts_commands_postpinpostcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PinPostRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/posts\/commands\/unpin-post": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Posts",
                    "Commands"
                ],
                "summary": "Unpin Post.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_posts_commands_postunpinpostcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UnPinPostRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/posts\/list\/by-space-id\/{spaceId}\/managed": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Posts"
                ],
                "summary": "Return Posts managed by given Space.",
                "description": "While the structure and filters are same as \/api\/v1\/newsfeed\/posts\/list\/by-space-id\/{spaceId},\nthis endpoint does not take into account the Channels that the current user is subscribed to \/ are set as mandatory.\n\nAs a result, this endpoint is more suitable for managing all the Posts in Channel rather than using it for using it\nfor the Newsfeed wall.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_posts_getmanagedpostsinspace__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>post_id (equal)<\/li>\n<li>channel_id (equal, isnull)<\/li>\n<li>search (contains)<\/li>\n<li>type (equal)<\/li>\n<li>state (equal, not_equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em>",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all posts was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePostInSpaceCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/posts\/by-id\/{postId}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Posts"
                ],
                "summary": "Get Posts Details.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_posts_getpostdetail__invoke",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePostDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/posts\/list\/all": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Posts"
                ],
                "summary": "Returns posts.",
                "description": "Filter relevant_for_space_id filters all posts targeted to given space, its tenants and also the parent portfolio.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_posts_getposts__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>type (equal, contains, not_equal, not_contains)<\/li>\n<li>is_pinned (equal, contains, not_equal, not_contains)<\/li>\n<li>author_id (equal, contains, not_equal, not_contains)<\/li>\n<li>state (equal, contains, not_equal, not_contains)<\/li>\n<li>target_id (equal, in, not_equal, not_in)<\/li>\n<li>relevant_for_space_id (equal)<\/li>\n<li>search (equal, not_equal, contains)<\/li>\n<li>tag_id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, type, isPinned, authorId, state, targetId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all posts was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePostsCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/posts\/list\/by-space-id\/{spaceId}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Posts"
                ],
                "summary": "Return Posts relevant to you in given Space.",
                "description": "By default it:\n- Returns Posts that are assigned to targets relevant in given Space:\n  - Posts assigned to Portfolio owning this Space.\n  - Posts assigned to Space itself.\n  - Posts assigned to Tenants in this Space.\n- Posts that belong to *Mandatory* Channels assigned to this Space.\n- Posts that belong to Channels that you have subscribed to and belong to this Space.\n\nIf you apply filter ?filters[channel_id][isnull]=0, then this endpoint will return:\n- Posts Mandatory in Channels assigned to this Space\n- Posts that belongs to Channels that you have subscribed to\n\n\nIf you apply filter ?filters[channel_id][equal]=channelId, then this endpoint will return:\n- Posts assigned to given channelId (provided that you have subscribed to this Channel previously).",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_posts_getpostsinspace__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>post_id (equal)<\/li>\n<li>channel_id (equal, isnull)<\/li>\n<li>search (contains)<\/li>\n<li>type (equal)<\/li>\n<li>state (equal, not_equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em>",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all posts was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePostInSpaceCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/commands\/change-reported-content-status": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Commands"
                ],
                "summary": "Change status of reported content.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_reportedcontent_commands_postchangereportedcontentstatus__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeReportedContentStatusRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/commands\/report-content": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Commands"
                ],
                "summary": "Report content.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_reportedcontent_commands_postreportcontent__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportContentRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/reported-content\/list\/all": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "ReportedContent"
                ],
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_reportedcontent_getallreportedcontent__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>category (equal, contains, not_equal, not_contains)<\/li>\n<li>status (equal, contains, not_equal, not_contains)<\/li>\n<li>reported_at (equal, gt, gte, lt, lte)<\/li>\n<li>target_id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: category, status, reported_at",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all reported content",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableReportedContentCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/reported-content\/categories": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "ReportedContent"
                ],
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_reportedcontent_getreportedcontentcategories__invoke",
                "responses": {
                    "200": {
                        "description": "List of all reported content categories were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableReportedContentCategories"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/tags\/commands\/create": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Tags",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_tags_commands_postcreatetag__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateTagRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/tags\/commands\/delete": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Tags",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_tags_commands_postdeletetag__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeleteTagRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/tags\/commands\/update": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Tags",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_tags_commands_postupdatetag__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateTagRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/tags\/by-id\/{id}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Tags"
                ],
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_tags_gettag__invoke",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTag"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/tags\/list\/all": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Tags"
                ],
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v1_tags_gettags__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>space_id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em>",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag list was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTagCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/newsfeed\/user-channel-notifications\/commands\/set": {
            "post": {
                "tags": [
                    "Notification",
                    "Commands"
                ],
                "summary": "Set push notifications for newsfeed channel push notifications.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v1_userchannelnotifications_commands_setusernewsfeedchannelpushnotificationssetting_postsetusernewsfeedchannelpushnotificationssetting__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SetUserNewsfeedChannelPushNotificationsSettingEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/events\/events\/by-id\/{eventId}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Events",
                    "Commands"
                ],
                "summary": "Event detail.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v2_event_geteventdetail__invoke",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event detail",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableEventDetail2"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/newsfeed\/liked-subjects\/by-target-subject-id\/{targetSubjectId}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "LikedSubjects"
                ],
                "summary": "Returns list of likes for post or comments by hierarchy target id.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v2_likedsubjects_getlikedsubjectsbytargetsubjectid__invoke",
                "parameters": [
                    {
                        "name": "targetSubjectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>created_at (equal, gt, gte, lt, lte)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: created_at",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of likes for post or comments by hierarchy target id.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableLikeCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/polls\/commands\/change-poll-settings": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Polls",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v2_polls_commands_changepollsettings_changepollsettings__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePollSettingsRequestEntry2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/newsfeed\/polls\/by-id\/{pollId}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Polls"
                ],
                "summary": "Poll detail.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v2_polls_getpoll__invoke",
                "parameters": [
                    {
                        "name": "pollId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll detail",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePoll2"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/newsfeed\/posts\/commands\/change-post-target": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Posts",
                    "Commands"
                ],
                "summary": "Change Post Target.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v2_posts_commands_changeposttarget_changeposttargetcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePostTargetRequestEntry2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/newsfeed\/posts\/commands\/create-post": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Posts",
                    "Commands"
                ],
                "summary": "Create Post.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v2_posts_commands_createpost_createpostcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreatePostCommandBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/newsfeed\/posts\/by-id\/{postId}": {
            "get": {
                "tags": [
                    "Newsfeed",
                    "Posts"
                ],
                "summary": "Get Posts Details.",
                "operationId": "get_spaceflow_modules_newsfeed_application_api_v2_posts_getpostdetail__invoke",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializablePostDetails2"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v3\/newsfeed\/posts\/commands\/create-post-in-channel": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Posts",
                    "Commands"
                ],
                "summary": "Create a Post in a specified Channel.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v3_posts_commands_createpostinchannel_postcreatepostinchannelcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreatePostInChannelCommandBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v3\/newsfeed\/posts\/commands\/create-post-in-targets": {
            "post": {
                "tags": [
                    "Newsfeed",
                    "Posts",
                    "Commands"
                ],
                "summary": "Create a Post in a specific Targets.",
                "description": "This endpoint can only be utilized by admins.",
                "operationId": "post_spaceflow_modules_newsfeed_application_api_v3_posts_commands_createpostintargets_postcreatepostinchannelcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreatePostInTargetsCommandBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/change-password": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_changepassword__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePasswordRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Change password",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSuccessResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/certificate-login": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postcertificatelogin__invoke",
                "responses": {
                    "200": {
                        "description": "Log in via x509 mTLS method",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAuthenticationTokenResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/confirm-registration": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postconfirmregistration__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ConfirmRegistrationRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Confirm registration",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSuccessResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/delete-my-user": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "summary": "!DANGEROUS! Delete the User from the AuthenticationAuthority.",
                "description": "This operation is irreversible. After call of this endpoint, the currently logged in user (determined by\nthe presented AuthenticationToken) is irreversibly removed from the Authentication Authority module.\n\nThis means that the credentials of this user are permanently removed from the platform.\n\nThis endpoint can only be called if the AuthenticationToken was issued by the AuthenticationAuthority\n(the `ami` claim in JWT equals to 5eac1fbb-80df-471b-ba68-1ca0730adfd7).\n\nOtherwise, 409 is returned.",
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postdeletemyuser__invoke",
                "responses": {
                    "200": {
                        "description": "User deleted from the AuthenticationAuthority.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSuccessResponseEntry"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User with this ID was not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSuccessResponseEntry"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "AuthenticationToken issued by a different authentication module was supplied",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSuccessResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/generate-totp-code": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "summary": "MFA: TOTP first step.",
                "description": "Use this endpoint to generate the TOTP secret for the User.\nThe MFA is not enforced yet after the call to this endpoint. To verify that the user\ncorrectly set-up his Authenticator device, a call to \/api\/v1\/authentication-authority\/validate-totp-code\nis required.",
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postgeneratetotpcode__invoke",
                "responses": {
                    "200": {
                        "description": "TOTP QR code was generated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableGenerateTotpCodeSuccessResponseEntry"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "TOTP code validation failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableGenerateTotpCodeFailedResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/login": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "summary": "When exceeded login attempts in given time frame, temporary lockout for given login e-mail occurs.",
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postlogin__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/LoginRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Log in",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAuthenticationTokenResponseEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Login failure",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#\/components\/schemas\/SerializableLoginFailedResponseEntry"
                                        },
                                        {
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/recover-from-totp": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "summary": "Endpoint for recovery User account after the loss a Authenticator device.",
                "description": "This endpoint does not require authentication. It only requires the RecoveryCode and e-mail of the respective\nuser account.",
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postrecoverfromtotp__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RecoverFromTotpRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTotpRecoverResponseEntry"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "TOTP code validation failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTotpRecoverFailedResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/regenerate-confirmation-code": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postregenerateconfirmationcode__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RegenerateConfirmationCodeRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Log in",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableRegenerateConfirmationCodeResponseEntry"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Failed resend confirmation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableRegenerateConfirmationCodeResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/register": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postregister__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RegisterRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Register",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSuccessResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/remove-totp": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "summary": "Remove MFA via TOTP verification from the logged-in user account.",
                "description": "This endpoint is used when the user wishes to no longer be signing in via TOTP.\nJust provide the users AuthenticationToken and current TOTP code and if everything checks up,\nthe MFA is disabled.",
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postremovetotp__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveTotpRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTotpRemovalResponseEntry"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "TOTP code validation failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTotpRemovalFailedResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/request-password-reset": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postrequestpasswordreset__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RequestPasswordResetRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Register",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSuccessResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/reset-password": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postresetpassword__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ResetPasswordRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Register",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSuccessResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/authentication-authority\/validate-totp-code": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "summary": "MFA: TOTP second step.",
                "description": "Use this endpoint to validate that the user correctly installed the TOTP secret to his authenticator\nby sending the generate TOTP code. If the code is correct, the MFA via TOTP is enabled for the user\nand the Recovery code is provided for User.\n\nNote: This endpoint requires the AuthenticationToken. Not SessionToken ;).",
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v1_authenticationauthority_postvalidatetotpcode__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ValidateTotpCodeRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "TOTP code is valid",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTotpValidationResponseEntry"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "TOTP code validation failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableTotpValidationFailedResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/authentication-authority\/confirm-registration": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "summary": "Confirms the registration for the User with the given code.",
                "description": "Unlike the v1 of this endpoint, this can only be called one time.\n\nAlso returns AuthenticationToken on successful call so you can immediately log the calling user in.",
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v2_authenticationauthority_postconfirmregistration__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ConfirmRegistrationRequestEntry2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Confirm registration succeeded.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableConfirmRegistrationSucceededResponseEntry"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Confirm registration failed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableConfirmRegistrationFailedResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/authentication-authority\/register": {
            "post": {
                "tags": [
                    "AuthenticationAuthority"
                ],
                "operationId": "post_spaceflow_modules_authenticationauthority_application_api_v2_authenticationauthority_postregister__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RegisterRequestEntry2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration was successfull",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableRegistrationSuccessResponseEntry"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Business error occured during the registration process",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableRegistrationFailureResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/authentication-json\/by-building-id\/{buildingId}": {
            "get": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "operationId": "get_spaceflow_modules_visitormanagement_application_api_v1_authentication_getauthenticationjson__invoke",
                "parameters": [
                    {
                        "name": "buildingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get authentication JSON",
                        "content": {
                            "application\/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/authentication-qr-code\/by-building-id\/{buildingId}": {
            "get": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "operationId": "get_spaceflow_modules_visitormanagement_application_api_v1_authentication_getauthenticationqr__invoke",
                "parameters": [
                    {
                        "name": "buildingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get authentication QR code",
                        "content": {
                            "application\/binary": {}
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/configuration\/update": {
            "put": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "operationId": "put_spaceflow_modules_visitormanagement_application_api_v1_configurations_commands_updateconfiguration__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateConfigurationRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Configuration updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/configurations\/by-building-id\/{buildingId}": {
            "get": {
                "tags": [
                    "VisitorManagement",
                    "Configurations"
                ],
                "operationId": "get_spaceflow_modules_visitormanagement_application_api_v1_configurations_getconfiguration__invoke",
                "parameters": [
                    {
                        "name": "buildingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve Building configuration",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ConfigurationEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/health": {
            "get": {
                "tags": [
                    "VisitorManagement"
                ],
                "operationId": "get_spaceflow_modules_visitormanagement_application_api_v1_gethealthcheck__invoke",
                "responses": {
                    "200": {
                        "description": "Get visit by ID",
                        "content": {
                            "application\/json": {
                                "schema": {},
                                "example": {
                                    "open_api": "ok",
                                    "vms_module": "fail"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/visits\/{visitId}\/cancel": {
            "put": {
                "tags": [
                    "VisitorManagement",
                    "Visits",
                    "Commands"
                ],
                "summary": "Cancel visit.",
                "operationId": "put_spaceflow_modules_visitormanagement_application_api_v1_visits_cancelvisit__invoke",
                "parameters": [
                    {
                        "name": "visitId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Visit successfully cancelled",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/visits\/checkin\/email": {
            "put": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "operationId": "put_spaceflow_modules_visitormanagement_application_api_v1_visits_checkinemail__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CheckInEmailRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The visit was successfully checked in",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/visits\/checkin\/manual": {
            "put": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "operationId": "put_spaceflow_modules_visitormanagement_application_api_v1_visits_checkinmanually__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CheckInManuallyRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The visit was successfully checked in",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/visits\/checkin\/qr": {
            "put": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "operationId": "put_spaceflow_modules_visitormanagement_application_api_v1_visits_checkinqr__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CheckInQrRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The visit was successfully checked in",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/visits\/by-host-id\/{hostId}": {
            "get": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "operationId": "get_spaceflow_modules_visitormanagement_application_api_v1_visits_gethostvisitors__invoke",
                "parameters": [
                    {
                        "name": "hostId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: status, last_name, status_section",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>status (equal)<\/li>\n<li>status_section (equal)<\/li>\n<li>from (equal)<\/li>\n<li>to (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of host's visits",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableHostVisitorsEntryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/visits\/by-id\/{visitId}": {
            "get": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "operationId": "get_spaceflow_modules_visitormanagement_application_api_v1_visits_getvisitbyid__invoke",
                "parameters": [
                    {
                        "name": "visitId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get visit by ID",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableVisit"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/visits\/ics-file\/{visitId}": {
            "get": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "operationId": "get_spaceflow_modules_visitormanagement_application_api_v1_visits_getvisitics__invoke",
                "parameters": [
                    {
                        "name": "visitId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get visit ICS file",
                        "content": {
                            "text\/calendar": {}
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/visits\/qr-code\/{visitId}": {
            "get": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "operationId": "get_spaceflow_modules_visitormanagement_application_api_v1_visits_getvisitqr__invoke",
                "parameters": [
                    {
                        "name": "visitId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a QR code of a visit",
                        "content": {
                            "application\/binary": {}
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/visits\/create": {
            "post": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "summary": "Create visit.",
                "operationId": "post_spaceflow_modules_visitormanagement_application_api_v1_visits_postcreatevisit__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateVisitRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Visit created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateVisitResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/visits\/by-space-id\/{spaceId}": {
            "get": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "summary": "Get visits by SpaceID.",
                "operationId": "get_spaceflow_modules_visitormanagement_application_api_v1_visits_retrievebuildingvisitors__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: status, status_section, last_name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>status (equal)<\/li>\n<li>status_section (equal)<\/li>\n<li>from (equal)<\/li>\n<li>to (equal)<\/li>\n<li>tenant_id (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all visitors in space",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableBuildingVisitCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vms\/visits\/{visitId}\/update": {
            "put": {
                "tags": [
                    "VisitorManagement",
                    "Visits"
                ],
                "summary": "Update visit.",
                "operationId": "put_spaceflow_modules_visitormanagement_application_api_v1_visits_updatevisit__invoke",
                "parameters": [
                    {
                        "name": "visitId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateVisitRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Visit Updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenities\/list\/all": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_amenities_getamenities__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>vendor_id (equal, in, not_equal, not_in)<\/li>\n<li>service_section_id (equal, in, not_equal, not_in)<\/li>\n<li>status (equal, in, not_equal, not_in)<\/li>\n<li>title (equal, contains, not_contains)<\/li>\n<li>language (equal)<\/li>\n<li>parent_owner_id (equal, in, not_equal, not_in)<\/li>\n<li>parent_owner_type (equal, in, not_equal, not_in)<\/li>\n<li>is_promoted (equal)<\/li>\n<li>maximum_capacity (equal, gt, gte, lt, lte)<\/li>\n<li>availability_start_date (equal)<\/li>\n<li>availability_end_date (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, vendor_id, service_section_id, status, is_promoted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get amenities list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAmenityEntryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenity-bookings-admin\/by-id\/{amenityBookingId}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_amenitybooking_getamenitybookingadmin__invoke",
                "parameters": [
                    {
                        "name": "amenityBookingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Amenity booking was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAmenityBookingAdmin"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenity-bookings\/by-id\/{amenityBookingId}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_amenitybooking_getamenitybooking__invoke",
                "parameters": [
                    {
                        "name": "amenityBookingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Amenity booking was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAmenityBooking"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenity-bookings-admin\/list\/all": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_amenitybooking_getamenitybookingsadmin__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>status (equal, in, not_equal, not_in)<\/li>\n<li>category_id (equal, in, not_equal, not_in)<\/li>\n<li>amenity_id (equal, in, not_equal, not_in)<\/li>\n<li>vendor_id (equal, in, not_equal, not_in)<\/li>\n<li>submitted_at (equal, gt, gte, lt, lte)<\/li>\n<li>reservation_interval_start (equal, gt, gte, lt, lte)<\/li>\n<li>customer_id (equal, in, not_equal, not_in)<\/li>\n<li>amenity_title (equal, contains, not_contains)<\/li>\n<li>language (equal)<\/li>\n<li>parent_owner_id (equal, in, not_equal, not_in)<\/li>\n<li>parent_owner_type (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: status, reservation_interval_start, submitted_at, parent_owner_id, parent_owner_type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of amenity bookings was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAmenityBookingAdminCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenity-bookings\/list\/all": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_amenitybooking_getamenitybookings__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>status (equal, in, not_equal, not_in)<\/li>\n<li>category_id (equal, in, not_equal, not_in)<\/li>\n<li>amenity_id (equal, in, not_equal, not_in)<\/li>\n<li>vendor_id (equal, in, not_equal, not_in)<\/li>\n<li>submitted_at (equal, gt, gte, lt, lte)<\/li>\n<li>reservation_interval_start (equal, gt, gte, lt, lte)<\/li>\n<li>customer_id (equal, in, not_equal, not_in)<\/li>\n<li>amenity_title (equal, contains, not_contains)<\/li>\n<li>language (equal)<\/li>\n<li>parent_owner_id (equal, in, not_equal, not_in)<\/li>\n<li>parent_owner_type (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: status, reservation_interval_start, submitted_at, parent_owner_id, parent_owner_type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of amenity bookings was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAmenityBookingCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/calendar-reservations\/by-id\/{calendarReservationsId}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_calendarreservations_getcalendarreservations__invoke",
                "parameters": [
                    {
                        "name": "calendarReservationsId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calendar reservations was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCalendarReservationsEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/calendar-reservations\/commands\/update": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_calendarreservations_postupdatecalendarreservations__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateCalendarReservationsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenity-bookings\/commands\/cancel": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_cancelamenitybooking_postcancelamenitybooking__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CancelAmenityBookingRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CancelAmenityBookingRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenities\/commands\/change-amenity-promoted": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_changeamenitypromoted_postchangeamenitypromoted__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeAmenityPromotedRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangeAmenityPromotedRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenities\/commands\/change-status": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_changeamenitystatus_postchangeamenitystatus__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeAmenityStatusRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangeAmenityStatusRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenity-bookings\/commands\/change-private-note": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_changeprivatenoteforamenitybooking_postchangeprivatenoteforamenitybooking__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangePrivateNoteForAmenityBookingRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangePrivateNoteForAmenityBookingRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/services\/commands\/change": {
            "post": {
                "tags": [
                    "Vendors",
                    "Services",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_changeservice_postchangeservice__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeServiceRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangeServiceRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/services\/commands\/change-service-promoted": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_changeservicepromoted_postchangeservicepromoted__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeServicePromotedRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangeServicePromotedRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenities\/commands\/change-service-section": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_changeservicesectionofamenity_postchangeservicesectionofamenity__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeServiceSectionOfAmenityRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangeServiceSectionOfAmenityRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/services\/commands\/change-service-section-promoted": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_changeservicesectionpromoted_postchangeservicesectionpromoted__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeServiceSectionPromotedRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangeServiceSectionPromotedRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/service-sections\/commands\/change-status": {
            "post": {
                "tags": [
                    "ServiceSection",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_changeservicesectionstatus_changeservicesectionstatus__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeServiceSectionStatusRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangeServiceSectionStatusRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/change-company-contact-details": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_changevendorcompanycontactdetails_postchangevendorcompanycontactdetails__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeVendorCompanyContactDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangeVendorCompanyContactDetailsRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/change-vendor-promoted": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_changevendorpromoted_postchangevendorpromoted__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeVendorPromotedRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangeVendorPromotedRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenities\/commands\/create": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_createamenity_postcreateamenity__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAmenityRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenity-bookings-on-behalf\/commands\/create": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_createamenitybookingonbehalf_postcreateamenitybookingonbehalf__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAmenityBookingRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/service-sections\/commands\/create-amenity-section": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "summary": "Create amenity section.",
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_createamenitysection_postcreateamenitysection__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAmenitySectionRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAmenitySectionRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/services\/commands\/create": {
            "post": {
                "tags": [
                    "Vendors",
                    "Services",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_createservice_postcreateservice__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateServiceRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateServiceRequestBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenities\/commands\/remove": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "summary": "Remove amenity.",
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_removeamenity_postremoveamenity__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveAmenityRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/services\/commands\/remove": {
            "post": {
                "tags": [
                    "Vendors",
                    "Services",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_removeservice_postremoveservice__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveServiceRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/RemoveServiceRequestEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/service-sections\/commands\/remove": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "summary": "Remove amenity section.",
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_removeservicesection_postremoveservicesection__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveServiceSectionRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenities\/commands\/update": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "summary": "Update amenity.",
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_updateamenity_postupdateamenity__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateAmenityRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenities\/commands\/update-payment-details": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "summary": "Update amenity payment details.",
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_updateamenitypaymentdetails_postupdateamenitypaymentdetails__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateAmenityPaymentDetailsRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/service-sections\/commands\/update": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_commands_updateservicesection_postupdateservicesection__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateServiceSectionRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/by-id\/{vendorId}\/available-service-categories": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_getavailableservicecategories__invoke",
                "parameters": [
                    {
                        "name": "vendorId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available service categories were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAvailableServiceCategoryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/by-id\/{vendorId}\/service-categories": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_getservicecategories__invoke",
                "parameters": [
                    {
                        "name": "vendorId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service categories were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableServiceCategoryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/image-uploads\/by-id\/{imageUploadId}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_imageupload_getimageupload__invoke",
                "parameters": [
                    {
                        "name": "imageUploadId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image upload details were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableImageUploadEntry4"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/image-uploads\/commands\/start": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_imageupload_poststartimageupload__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/StartImageUploadRequestBody4"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/inventory\/by-id\/{inventoryId}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_inventory_getinventory__invoke",
                "parameters": [
                    {
                        "name": "inventoryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get inventory by id",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableInventoryEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/inventory\/commands\/update": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_inventory_postupdateinventory__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SerializableInventoryEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/by-id\/{vendorId}\/opening-hours": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_openinghours_getopeninghours__invoke",
                "parameters": [
                    {
                        "name": "vendorId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get Opening Hours of target Vendor",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableOpeningHoursCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/change-opening-hours": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_openinghours_postchangeopeninghours__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeOpeningHoursRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/create-opening-hours": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_openinghours_postcreateopeninghours__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateOpeningHoursRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/services\/list\/all": {
            "get": {
                "tags": [
                    "Vendors",
                    "Services"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_services_getservices__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>service_id (equal, in, not_equal, not_in)<\/li>\n<li>vendor_id (equal, in, not_equal, not_in)<\/li>\n<li>title (equal, contains, not_contains)<\/li>\n<li>language (equal)<\/li>\n<li>category (equal, contains, not_contains)<\/li>\n<li>action_button_type (equal, contains, not_contains)<\/li>\n<li>vendor_display_name (equal, contains, not_contains)<\/li>\n<li>is_exclusive (equal)<\/li>\n<li>created_at (equal, gt, gte, lt, lte)<\/li>\n<li>parent_owner_id (equal, in, not_equal, not_in)<\/li>\n<li>parent_owner_type (equal, in, not_equal, not_in)<\/li>\n<li>is_promoted (equal)<\/li>\n<li>is_send_user_id (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: title, category, action_button_type, vendor_display_name, is_exclusive, is_promoted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get services",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableServiceCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendor-categories\/list\/available\/by-owner-id\/{ownerId}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Retrieve all available vendor categories.",
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_vendorcategories_getavailablevendorcategories__invoke",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available vendor categories was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAvailableVendorCategoryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendor-categories\/list\/by-owner-id\/{ownerId}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Retrieve all vendor categories.",
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_vendorcategories_getvendorcategories__invoke",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vendor categories was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableVendorCategoryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/public-data\/list\/all": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_vendors_getallvendorspublicdata__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>category_id (equal, in, not_equal, not_in)<\/li>\n<li>name (equal, contains, not_equal, not_contains)<\/li>\n<li>status (equal, in, not_equal, not_in)<\/li>\n<li>parent_owner_id (equal, in, not_equal, not_in)<\/li>\n<li>parent_owner_type (equal, in, not_equal, not_in)<\/li>\n<li>is_promoted (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: level, parent_owner_id, parent_owner_type, is_promoted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vendors public data were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableVendorPublicDataEntryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/service-sections\/list\/all": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_vendors_getservicesections__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>vendor_id (equal, in, not_equal, not_in)<\/li>\n<li>parent_owner_id (equal, in, not_equal, not_in)<\/li>\n<li>parent_owner_type (equal, in, not_equal, not_in)<\/li>\n<li>service_category_id (equal, in, not_equal, not_in)<\/li>\n<li>type (equal, in, not_equal, not_in)<\/li>\n<li>status (equal, in, not_equal, not_in)<\/li>\n<li>title (equal, contains, not_contains)<\/li>\n<li>language (equal)<\/li>\n<li>is_promoted (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, type, status, parent_owner_id, parent_owner_type, is_promoted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service sections were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableServiceSectionCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/by-id\/{vendorId}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_vendors_getsinglevendor__invoke",
                "parameters": [
                    {
                        "name": "vendorId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vendor was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableVendor"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/public-data\/by-id\/{vendorId}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_vendors_getvendorpublicdata__invoke",
                "parameters": [
                    {
                        "name": "vendorId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vendor public data was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableVendorPublicDataEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/list\/all": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "get_spaceflow_modules_vendors_application_api_v1_vendors_getvendors__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>type (equal, in, not_equal, not_in)<\/li>\n<li>status (equal, in, not_equal, not_in)<\/li>\n<li>category_id (equal, in, not_equal, not_in)<\/li>\n<li>level (equal, in, not_equal, not_in)<\/li>\n<li>name (equal, contains, not_equal, not_contains)<\/li>\n<li>owner_id (equal, in, not_equal, not_in)<\/li>\n<li>created_at (equal, gt, gte, lt, lte)<\/li>\n<li>parent_owner_id (equal, in, not_equal, not_in)<\/li>\n<li>parent_owner_type (equal, in, not_equal, not_in)<\/li>\n<li>is_promoted (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, status, level, name, type, created_at, parent_owner_id, parent_owner_type, is_promoted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vendors were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableVendorCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/change-invividual-contact-details": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_vendors_postchangeindividualcontactdetails__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeVendorIndividualContactDetailsRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/change-category": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_vendors_postchangevendorcategory__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeVendorCategoryRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/change-company-contact-address": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_vendors_postchangevendorcompanycontactaddress__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeVendorCompanyContactAddressRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/change-individual-contact-address": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_vendors_postchangevendorindividualcontactaddress__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeVendorIndividualContactAddressRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/change-status": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_vendors_postchangevendorstatus__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeVendorStatusRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/amenity-bookings\/commands\/create": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_vendors_postcreateamenitybooking__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAmenityBookingRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/create-external-vendor": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_vendors_postcreateexternalvendor__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateExternalVendorRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/remove-opening-hours": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_vendors_postremoveopeninghours__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveOpeningHoursRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/vendors\/vendors\/commands\/update-profile": {
            "post": {
                "tags": [
                    "Vendors",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v1_vendors_postupdatevendorprofile__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateVendorProfileRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v2\/vendors\/services\/commands\/change": {
            "post": {
                "tags": [
                    "Vendors",
                    "Services",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v2_commands_changeservice_postchangeservice__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeServiceRequestEntry2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangeServiceRequestEntry2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v3\/vendors\/services\/commands\/change": {
            "post": {
                "tags": [
                    "Vendors",
                    "Services",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_vendors_application_api_v3_commands_changeservice_postchangeservice__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeServiceRequestEntry3"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ChangeServiceRequestEntry3"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/event-feedback\/processed-events\/list\/by-request-id\/{requestId}": {
            "get": {
                "tags": [
                    "Executed Events"
                ],
                "summary": "Get executed events by requestId.",
                "operationId": "get_spaceflow_modules_eventfeedback_application_getexecutedeventdata__invoke",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of executed events.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableStoredEventEntryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials-revocation-process\/commands\/start": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessCredentialRevocationProcess",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentialrevocationprocess_poststartinternalaccesscredentialrevokingprocess__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/StartInternalAccessCredentialRevokingProcessRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/by-id\/{id}": {
            "get": {
                "tags": [
                    "ACS",
                    "AccessCredentials"
                ],
                "summary": "Retrieve access credential by id.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_getaccesscredentialbyid__invoke",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access credential by id was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSingleAccessCredential"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/list\/changed-since\/by-external-system-id\/{externalSystemId}\/since-updated-at\/{changedSince}": {
            "get": {
                "tags": [
                    "ACS",
                    "AccessCredentials"
                ],
                "summary": "Get List of AccessCredentials by changed since.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_getaccesscredentialschangedsince__invoke",
                "parameters": [
                    {
                        "name": "externalSystemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "changedSince",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List of AccessCredentials by changed since",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAccessCredentialForChangedSinceCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/list\/changed-since-with-unassigned-user\/{externalSystemId}\/since-user-updated-at\/{userUpdatedAt}": {
            "get": {
                "tags": [
                    "ACS",
                    "AccessCredentials"
                ],
                "summary": "Get List of AccessCredentials.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_getaccesscredentialschangedsincewithunassignedusersince__invoke",
                "parameters": [
                    {
                        "name": "externalSystemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userUpdatedAt",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List of AccessCredentials",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAccessCredentialsChangedSinceWithUnassignedUserSinceCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/list\/all": {
            "get": {
                "tags": [
                    "ACS",
                    "AccessCredentials"
                ],
                "summary": "Get List of AccessCredentials.",
                "description": "Filter field descriptions:\n- user_id: Select only records with given ACS User identifier.\n- user_group__tenant_id: Select only credentials belonging to the UserGroup linked to a Tenant with given id.\n- user_group__external_system_id: Select only credentials belonging to the external system with given ID. In reality, this ID matches the UUID of the Space.\n- type: Filter by the type of AccessCredential. Possible values: physical_card|virtual_card\n- deactivated: Filter whether the AccessCredential is active or inactive.\n- spaceflow_user_id: Select AccessCredentials that belong to AcsUser linked to the Spaceflow User with given ID.\n- user_owner_id: Select AccessCredentials that belong to AcsUser in Space with given ID.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_getaccesscredentials__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>user_id (equal, isnull)<\/li>\n<li>user_group__tenant_id (equal)<\/li>\n<li>user_group__external_system_id (equal)<\/li>\n<li>type (equal)<\/li>\n<li>deactivated (equal)<\/li>\n<li>spaceflow_user_id (equal)<\/li>\n<li>user_owner_id (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: user_id, user_group__tenant_id, type, access_credential__value",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List of AccessCredentials",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAccessCredentialCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/commands\/activate": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessCredentials",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_postactivateaccesscredential__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ActivateAccessCredentialRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/commands\/assign-to-user": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessCredentials",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_postassignaccesscredentialtouser__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AssignAccessCredentialToUserRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-rules\/commands\/assign-external-access-credential-id": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessCredentials",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_postassignexternalaccesscredentialid__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AssignExternalAccessCredentialRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/commands\/change-validity-dates": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessCredentials",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_postchangeaccesscredentialdatevalidity__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeAccessCredentialDateValidityRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/commands\/change-license-plate": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessCredentials",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_postchangelicenseplateonaccesscredential__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeLicensePlateOnAccessCredentialRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/commands\/create-physical": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessCredentials",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_postcreateaccesscredential__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAccessCredentialRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/commands\/deactivate": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessCredentials",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_postdeactivateaccesscredential__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivateAccessCredentialRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/commands\/disable-parking": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessCredentials",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_postdisableparkingonaccesscredential__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PostDisableParkingOnAccessCredentialRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/commands\/enable-parking": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessCredentials",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_postenableparkingonaccesscredential__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PostEnableParkingOnAccessCredentialRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-credentials\/commands\/unassign-from-user": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessCredentials",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accesscredentials_postunassignaccesscredentialfromuser__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UnassignAccessCredentialFromUserRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-rules\/list\/all": {
            "get": {
                "tags": [
                    "ACS",
                    "AccessRules"
                ],
                "summary": "Get List of AccessRules.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_accessrules_getaccessrules__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>user_id (equal, isnull)<\/li>\n<li>user_group__tenant_id (equal, isnull)<\/li>\n<li>deactivated (equal)<\/li>\n<li>external_system_id (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: user_id, user_group__tenant_id, deactivated",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List of AccessRules",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableAccessRuleCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-rules\/commands\/import": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessRules",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accessrules_postimportaccessrule__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ImportAccessRuleRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-rules\/commands\/link-access-rule-to-user-group": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessRules",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accessrules_postlinkaccessruletousergroup__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/LinkAccessRuleToUserGroupRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/access-rules\/commands\/unlink-access-rule-from-user-group": {
            "post": {
                "tags": [
                    "ACS",
                    "AccessRules",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_accessrules_postunlinkaccessrulefromusergroup__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PostUnlinkAccessRuleFromUserGroupRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/hid-notification\/commands\/process": {
            "post": {
                "tags": [
                    "ACS",
                    "Callback",
                    "HID",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_hidnotification_hidprocessnotification__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {}
                    }
                },
                "responses": {
                    "204": {
                        "description": "Request is acknowledged and is being processed."
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/space-settings\/{spaceId}\/admin": {
            "get": {
                "tags": [
                    "ACS",
                    "Space settings",
                    "Admin"
                ],
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_spacesettings_getadminspacesettings__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get space acs settings for admin",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableSpaceSettings2"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/space-settings\/{spaceId}\/end-user": {
            "get": {
                "tags": [
                    "ACS",
                    "Space settings",
                    "End user"
                ],
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_spacesettings_getenduserspacesettings__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get space acs settings for end users",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableEndUserSpaceSettings"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/space-settings\/commands\/activate-access-control-system": {
            "post": {
                "tags": [
                    "ACS",
                    "Space settings",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_spacesettings_postactivatespaceaccesscontrolsystem__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ActivateSpaceAccessControlSystemRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/space-settings\/commands\/change-space-acs-settings": {
            "post": {
                "tags": [
                    "ACS",
                    "Space settings",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_spacesettings_postchangespaceaccesscontrolsettings__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeSpaceSettingsRequestEntry2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/space-settings\/commands\/deactivate-access-control-system": {
            "post": {
                "tags": [
                    "ACS",
                    "Space settings",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_spacesettings_postdeactivatespaceaccesscontrolsystem__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivateSpaceAccessControlSystemRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/user-groups\/list\/all": {
            "get": {
                "tags": [
                    "ACS",
                    "UserGroups"
                ],
                "summary": "Retrieve all userGroups.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_usergroups_getusergroups__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal)<\/li>\n<li>name (equal)<\/li>\n<li>owner_id (equal)<\/li>\n<li>tenant_id (equal, isnull)<\/li>\n<li>external_user_group_id (equal)<\/li>\n<li>external_system_id (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, name, space_owner_id, tenant_id, external_user_group_id, external_system_id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of userGroups was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableUserGroupCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/user-groups\/commands\/change-credential-limit": {
            "post": {
                "tags": [
                    "ACS",
                    "UserGroups",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_usergroups_postchangecredentiallimitforusergroup__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeCredentialLimitForUserGroupRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/user-groups\/commands\/import": {
            "post": {
                "tags": [
                    "ACS",
                    "UserGroups",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_usergroups_postimportusergroup__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ImportUserGroupRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/user-groups\/commands\/link-tenant": {
            "post": {
                "tags": [
                    "ACS",
                    "UserGroups",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_usergroups_postlinkusergrouptotenant__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/LinkUserGroupToTenantRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/user-groups\/statistics\/list\/all": {
            "get": {
                "tags": [
                    "ACS",
                    "UserGroups"
                ],
                "summary": "Get List of UserGroup Statistics.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_usergroups_statistics_getusergroupstatistics__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>space_owner_id (equal)<\/li>\n<li>user_group__tenant_id (equal, isnull)<\/li>\n<li>deactivated (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: space_owner_id, user_group__tenant_id, deactivated",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List of UserGroup Statistics",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCardUsageReportCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/by-id\/{id}": {
            "get": {
                "tags": [
                    "ACS",
                    "Users"
                ],
                "summary": "Retrieve user by id.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_users_getuserbyid__invoke",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User by id was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/by-spaceflow-user-id\/{spaceflowUserId}": {
            "get": {
                "tags": [
                    "ACS",
                    "Users"
                ],
                "summary": "Retrieve user by spaceflowUserId.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_users_getuserbyspaceflowuserid__invoke",
                "parameters": [
                    {
                        "name": "spaceflowUserId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User by id was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/api\/v1\/acs\/users\/by-space-and-spaceflow-user-id\/{spaceId}\/{spaceflowUserId}": {
            "get": {
                "tags": [
                    "ACS",
                    "Users"
                ],
                "summary": "Retrieve user in particular Space by his spaceflowUserId.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_users_getuserinspacebyspaceflowuserid__invoke",
                "parameters": [
                    {
                        "name": "spaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "spaceflowUserId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User by id was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/user\/{userId}\/user-status-and-validity-dates": {
            "get": {
                "tags": [
                    "ACS",
                    "Users"
                ],
                "summary": "Retrieve user status and validity dates.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_users_getuserstatusandvaliditydate__invoke",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User status and validity dates was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableUserStatusAndValidityDate"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/list\/changed-since\/by-external-system-id\/{externalSystemId}\/since-updated-at\/{changedSince}": {
            "get": {
                "tags": [
                    "ACS",
                    "Users"
                ],
                "summary": "Retrieve users by externalSystemId and changedSince.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_users_getuserschangedsince__invoke",
                "parameters": [
                    {
                        "name": "externalSystemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "changedSince",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User by id was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableUsersChangedSinceCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/list\/all": {
            "get": {
                "tags": [
                    "ACS",
                    "Users"
                ],
                "summary": "Get List of Users.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_users_getusers__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal)<\/li>\n<li>user_group__tenant_id (equal)<\/li>\n<li>user_group__external_system_id (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, user_group__tenant_id, user_group__external_system_id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List of Users",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableUserCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/commands\/activate": {
            "post": {
                "tags": [
                    "ACS",
                    "Users",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_users_postactivateuser__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ActivateUserRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/commands\/user\/{acsId}\/assign-external-user-id": {
            "post": {
                "tags": [
                    "ACS",
                    "Users",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_users_postassignexternaluserid__invoke",
                "parameters": [
                    {
                        "name": "acsId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AssignExternalUserIdRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User by id was successfully assigned",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableEntryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/commands\/change-access-rules": {
            "post": {
                "tags": [
                    "ACS",
                    "Users",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_users_postchangeuseraccessrules__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeUserAccessRulesRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/commands\/change-date-validity": {
            "post": {
                "tags": [
                    "ACS",
                    "Users",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_users_postchangeuserdatevalidity__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeUserDateValidityRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/commands\/change-personal-information": {
            "post": {
                "tags": [
                    "ACS",
                    "Users",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_users_postchangeuserpersonalinformation__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeUserPersonalInformationRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/commands\/create-user": {
            "post": {
                "tags": [
                    "ACS",
                    "Users",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_users_postcreateuser__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateUserRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/commands\/deactivate": {
            "post": {
                "tags": [
                    "ACS",
                    "Users",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_users_postdeactivateuser__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeactivateUserRequestBody2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/commands\/link-spaceflow": {
            "post": {
                "tags": [
                    "ACS",
                    "Users",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_users_postlinkusertosfuser__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/LinkUserToSFUserRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/users\/commands\/unlink-spaceflow": {
            "post": {
                "tags": [
                    "ACS",
                    "Users",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_users_postunlinkuserfromsfuser__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UnlinkUserFromSFUserRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/virtual-card-activation\/by-id\/{processId}": {
            "get": {
                "tags": [
                    "ACS",
                    "VirtualCardActivationProcess"
                ],
                "summary": "Get Single VirtualCardActivationProcess.",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_virtualcardactivationprocess_getvirtualcardactivationprocess__invoke",
                "parameters": [
                    {
                        "name": "processId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Single VirtualCardActivationProcess",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/VirtualCardActivationProcessEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/virtual-card-activation\/commands\/start": {
            "post": {
                "tags": [
                    "ACS",
                    "VirtualCardActivationProcess",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_virtualcardactivationprocess_poststartvirtualcardactivationprocess__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/StartVirtualCardActivationProcessRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/vouchers\/{voucherId}": {
            "get": {
                "tags": [
                    "ACS",
                    "Vouchers"
                ],
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_vouchers_getvoucher__invoke",
                "parameters": [
                    {
                        "name": "voucherId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get single Voucher by Id",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableVoucher"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/vouchers\/list\/all": {
            "get": {
                "tags": [
                    "ACS",
                    "Vouchers"
                ],
                "summary": "Get List of Vouchers.",
                "description": "Filter field descriptions:\n- user_id: Select only vouchers assigned to the ACS User with given identifier.\n- user_group__tenant_id: Select only vouchers that belogn to AcsUser that belongs to UserGroup linked to a Tenant with given ID.\n- spaceflow_user_id: Select Vouchers that belong to AcsUser linked to the Spaceflow User with given ID.\n- user_owner_id: Select Vouchers that belong to AcsUser in Space with given ID.\n- status: Filter by the status of Voucher. Possible values: pending|claimed|deactivated",
                "operationId": "get_spaceflow_modules_accesscontrolsystem_application_api_v1_vouchers_getvouchers__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>user_group__tenant_id (equal)<\/li>\n<li>user_id (equal)<\/li>\n<li>spaceflow_user_id (equal)<\/li>\n<li>user_owner_id (equal)<\/li>\n<li>status (equal)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: user_id, status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get List of Vouchers",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableVoucherCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/vouchers\/commands\/create-voucher": {
            "post": {
                "tags": [
                    "ACS",
                    "Vouchers",
                    "Commands"
                ],
                "summary": "Create a new Voucher.",
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_vouchers_postcreatevoucher__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateVoucherRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/acs\/vouchers\/commands\/revoke-voucher": {
            "post": {
                "tags": [
                    "ACS",
                    "Vouchers",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_accesscontrolsystem_application_api_v1_vouchers_postrevokevirtualcardvoucher__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RevokeVirtualCardVoucherRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/scim\/{entityId}\/Groups\/{groupId}": {
            "get": {
                "tags": [
                    "Scim"
                ],
                "summary": "Get group info.",
                "operationId": "get_spaceflow_modules_scimmodule_application_api_v1_groups_getgroup__invoke",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group info was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Scim"
                ],
                "summary": "Delete group.",
                "operationId": "delete_spaceflow_modules_scimmodule_application_api_v1_groups_deletegroup__invoke",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Group was successfully deleted",
                        "content": {
                            "application\/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Scim"
                ],
                "summary": "Update group.",
                "operationId": "patch_spaceflow_modules_scimmodule_application_api_v1_groups_patchgroup__invoke",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Group was successfully updated"
                    }
                }
            }
        },
        "\/api\/v1\/scim\/{entityId}\/Groups": {
            "get": {
                "tags": [
                    "Scim"
                ],
                "summary": "Get groups info.",
                "operationId": "get_spaceflow_modules_scimmodule_application_api_v1_groups_getgroups__invoke",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group info was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Scim"
                ],
                "summary": "Create group.",
                "operationId": "post_spaceflow_modules_scimmodule_application_api_v1_groups_postcreategroup__invoke",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Group was successfully created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableEntryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/scim\/{entityId}\/Users\/{userId}": {
            "get": {
                "tags": [
                    "Scim"
                ],
                "summary": "Get user info.",
                "operationId": "get_spaceflow_modules_scimmodule_application_api_v1_users_getuser__invoke",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User info was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user.",
                "operationId": "delete_spaceflow_modules_scimmodule_application_api_v1_users_deleteuser__invoke",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User was successfully deleted",
                        "content": {
                            "application\/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Scim"
                ],
                "summary": "Update user.",
                "operationId": "patch_spaceflow_modules_scimmodule_application_api_v1_users_patchuser__invoke",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User was successfully updated",
                        "content": {
                            "application\/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/scim\/{entityId}\/Users": {
            "get": {
                "tags": [
                    "Scim"
                ],
                "summary": "Get users info.",
                "operationId": "get_spaceflow_modules_scimmodule_application_api_v1_users_getusers__invoke",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users info was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Scim"
                ],
                "summary": "Create user.",
                "operationId": "post_spaceflow_modules_scimmodule_application_api_v1_users_postcreateuser__invoke",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User was successfully created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableEntryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/scim\/{entityId}\/set-user-roles": {
            "post": {
                "tags": [
                    "Scim"
                ],
                "summary": "Sets SF user role.",
                "operationId": "post_spaceflow_modules_scimmodule_application_api_v1_users_postsetuserroles__invoke",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "path",
                        "description": "i.e. CREDIT_SUISSE",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SetUserRolesRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Roles were successfully set",
                        "content": {
                            "application\/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/create-authentication-for-amenities": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_commands_postcreateauthenticationforamenities_postcreateauthenticationforamenities__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAuthenticationForSpaceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID and token for Cumul.io authentication is created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAuthenticationTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/create-authentication-for-booking": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_commands_postcreateauthenticationforbookings_postcreateauthenticationforbookings__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAuthenticationForSpaceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID and token for Cumul.io authentication is created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAuthenticationTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/create-authentication-for-chat": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_commands_postcreateauthenticationforchat_postcreateauthenticationforchat__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAuthenticationForSpaceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID and token for Cumul.io authentication is created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAuthenticationTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/create-authentication-for-newsfeed": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_commands_postcreateauthenticationfornewsfeed_postcreateauthenticationfornewsfeed__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAuthenticationForSpaceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID and token for Cumul.io authentication is created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAuthenticationTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/create-authentication-for-people": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_commands_postcreateauthenticationforpeople_postcreateauthenticationforpeople__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAuthenticationForSpaceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID and token for Cumul.io authentication is created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAuthenticationTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/create-authentication-for-portfolio": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_commands_postcreateauthenticationforportfoliodashboard_postcreateauthenticationforportfoliodashboard__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAuthenticationForPortfolioRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID and token for Cumul.io authentication is created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAuthenticationTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/create-authentication-for-space": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_commands_postcreateauthenticationforspacedashboard_postcreateauthenticationforspacedashboard__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAuthenticationForSpaceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID and token for Cumul.io authentication is created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAuthenticationTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/create-authentication-for-tenant": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_commands_postcreateauthenticationfortenant_postcreateauthenticationfortenant__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAuthenticationForSpaceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID and token for Cumul.io authentication is created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAuthenticationTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/create-authentication-for-tickets": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_commands_postcreateauthenticationfortickets_postcreateauthenticationfortickets__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAuthenticationForSpaceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID and token for Cumul.io authentication is created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAuthenticationTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/create-authentication-for-vendors": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_commands_postcreateauthenticationforvendors_postcreateauthenticationforvendors__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateAuthenticationForSpaceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID and token for Cumul.io authentication is created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAuthenticationTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/portfolio\/settings\/dashboards-visibility": {
            "post": {
                "tags": [
                    "Dashboard",
                    "Visibility"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_portfoliosettings_commands_changedashboardsvisibility_changedashboardsvisibility__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeDashboardsVisibilityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Dashboards visibility is changed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/commands\/portfolio\/settings\/specific-dashboard-visibility": {
            "post": {
                "tags": [
                    "Dashboard",
                    "Visibility"
                ],
                "operationId": "post_spaceflow_modules_dashboard_application_api_v1_portfoliosettings_commands_changespecificdashboardvisibility_changespecificdashboardvisibility__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeSpecificDashboardVisibilityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Dashboards visibility is changed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/dashboard\/portfolio\/{portfolioDashboardSettingsId}\/settings": {
            "get": {
                "tags": [
                    "Dashboards",
                    "PortfolioSettings"
                ],
                "operationId": "get_spaceflow_modules_dashboard_application_api_v1_portfoliosettings_getportfoliodashboardsettings__invoke",
                "parameters": [
                    {
                        "name": "portfolioDashboardSettingsId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID and token for Cumul.io authentication is created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PortfolioDashboardSettingsResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/webhooks\/commands\/change": {
            "post": {
                "tags": [
                    "Webhooks",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_webhooks_application_api_v1_commands_changewebhook_postchangewebhook__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ChangeWebhookRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/webhooks\/commands\/create-webhook": {
            "post": {
                "tags": [
                    "Webhooks",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_webhooks_application_api_v1_commands_createwebhook_postcreatewebhookcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateWebhookRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/webhooks\/commands\/remove": {
            "post": {
                "tags": [
                    "Webhooks",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_webhooks_application_api_v1_commands_removewebhook_postremovewebhook__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RemoveWebhookRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/webhooks\/webhooks\/by-id\/{webhookId}": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "operationId": "get_spaceflow_modules_webhooks_application_api_v1_webhooks_getwebhook__invoke",
                "parameters": [
                    {
                        "name": "webhookId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook was successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableWebhookEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/webhooks\/webhooks\/list\/all": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "operationId": "get_spaceflow_modules_webhooks_application_api_v1_webhooks_getwebhooks__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>id (equal, in, not_equal, not_in)<\/li>\n<li>status (equal, in, not_equal, not_in)<\/li>\n<li>name (equal, contains, not_equal, not_contains)<\/li>\n<li>secret (equal, contains, not_equal, not_contains)<\/li>\n<li>target_url (equal, contains, not_equal, not_contains)<\/li>\n<li>created_at (equal, gt, gte, lt, lte)<\/li>\n<li>space_id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: id, status, name, created_at, space_id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhooks were successfully obtained",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableWebhookCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/categories\/commands\/create": {
            "post": {
                "tags": [
                    "DocumentManagement",
                    "Categories",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_documentmanagement_application_api_v1_categories_commands_postcreatecategory__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateCategoryRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/categories\/commands\/delete": {
            "post": {
                "tags": [
                    "DocumentManagement",
                    "Categories",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_documentmanagement_application_api_v1_categories_commands_postdeletecategory__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeleteCategoryRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/categories\/commands\/update": {
            "post": {
                "tags": [
                    "DocumentManagement",
                    "Categories",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_documentmanagement_application_api_v1_categories_commands_postupdatecategory__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateCategoryRequestEntry3"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/categories\/list\/all": {
            "get": {
                "tags": [
                    "DocumentManagement",
                    "Categories"
                ],
                "operationId": "get_spaceflow_modules_documentmanagement_application_api_v1_categories_getcategories__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>name (equal, contains, not_equal, not_contains)<\/li>\n<li>space_id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category list was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCategoryEntryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/categories\/by-id\/{id}": {
            "get": {
                "tags": [
                    "DocumentManagement",
                    "Categories"
                ],
                "operationId": "get_spaceflow_modules_documentmanagement_application_api_v1_categories_getcategory__invoke",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableCategoryEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/documents\/commands\/create": {
            "post": {
                "tags": [
                    "DocumentManagement",
                    "Documents",
                    "Commands"
                ],
                "summary": "Create document.",
                "operationId": "post_spaceflow_modules_documentmanagement_application_api_v1_documents_commands_postcreatedocument__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateDocumentRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/documents\/commands\/delete": {
            "post": {
                "tags": [
                    "DocumentManagement",
                    "Documents",
                    "Commands"
                ],
                "summary": "Delete document.",
                "operationId": "post_spaceflow_modules_documentmanagement_application_api_v1_documents_commands_postdeletedocument__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DeleteDocumentRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/documents\/commands\/update": {
            "post": {
                "tags": [
                    "DocumentManagement",
                    "Documents",
                    "Commands"
                ],
                "summary": "Update document.",
                "operationId": "post_spaceflow_modules_documentmanagement_application_api_v1_documents_commands_postupdatedocument__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateDocumentRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/documents\/by-id\/{id}": {
            "get": {
                "tags": [
                    "DocumentManagement",
                    "Documents"
                ],
                "operationId": "get_spaceflow_modules_documentmanagement_application_api_v1_documents_getdocument__invoke",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableDocumentEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/documents\/list\/all": {
            "get": {
                "tags": [
                    "DocumentManagement",
                    "Documents"
                ],
                "summary": "Get list of documents for the user.",
                "operationId": "get_spaceflow_modules_documentmanagement_application_api_v1_documents_getdocuments__invoke",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip from the beginning. If it is not set, default value is 0.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of results to return at once. If it is not set, default value is 20.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters to apply to available fields. Following fields & operations are enabled: <ul>\n<li>space_id (equal, in, not_equal, not_in)<\/li>\n<li>category_id (equal, in, not_equal, not_in)<\/li>\n<\/ul>",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "field": {
                                "equal": "Tom",
                                "contains": "Jerry",
                                "in": "Cartoon$Series$Movie",
                                "not_equal": "Horror",
                                "not_contains": "Drama",
                                "not_in": "1",
                                "gte": "2",
                                "lte": "3",
                                "gt": "4",
                                "lt": "42",
                                "isnull": "1"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma separated list of fields which you want sort the result by. <br>The default order is ASCENDANT. If you want to sort DESCENDANT, prepend the field name with minus characted (-). E.g.: <em>-createdBy,firstname,lastname<\/em><br>Allowed fields for sorting are: created_at",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document list was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableDocumentEntryCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/file-uploads\/commands\/start": {
            "post": {
                "tags": [
                    "DocumentManagement",
                    "FileUploads",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_documentmanagement_application_api_v1_fileuploads_commands_poststartfileupload__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/StartFileUploadRequestEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request is acknowledged and is being processed.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CommandSerializableResponseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/file-uploads\/by-id\/{id}\/download-url": {
            "get": {
                "tags": [
                    "DocumentManagement",
                    "FileUploads"
                ],
                "operationId": "get_spaceflow_modules_documentmanagement_application_api_v1_fileuploads_getfiledownloadurl__invoke",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File download url was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableFileDownloadUrlEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/documents\/file-uploads\/by-id\/{id}\/upload-url": {
            "get": {
                "tags": [
                    "DocumentManagement",
                    "FileUploads"
                ],
                "operationId": "get_spaceflow_modules_documentmanagement_application_api_v1_fileuploads_getfileuploadurl__invoke",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File upload url was successfully obtained.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableFileUploadUrlEntry"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/chat\/commands\/image-upload": {
            "post": {
                "tags": [
                    "ChatModule",
                    "Commands"
                ],
                "operationId": "post_spaceflow_modules_chat_application_api_v1_imageupload_commands_postuploadimageforchatcommand__invoke",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UploadImageForChatRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pre-signed URL to upload the file data to.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableChatImageUploadEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains formal errors.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ViolationResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Request is conflicting with internal business rules.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessRuleViolatedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/v1\/chat\/user-chat-information\/by-id\/{personId}": {
            "get": {
                "tags": [
                    "Chat",
                    "People"
                ],
                "operationId": "get_spaceflow_modules_chat_application_api_v1_userchatinformation_getuserchatinformation__invoke",
                "parameters": [
                    {
                        "name": "personId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User chat information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SerializableUserChatInformationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to this resource \/ endpoint is forbidden.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested page not found.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error occured while processing the request.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GenericResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "SerializableTokenEntry": {
                "properties": {
                    "token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ViolationResponse": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "violations": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ViolationEntry"
                        }
                    }
                },
                "type": "object"
            },
            "BusinessRuleViolatedResponse": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "violated_business_rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/BusinessRuleViolatedEntry"
                        }
                    }
                },
                "type": "object"
            },
            "GenericResponse": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InternalErrorResponse": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "request_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreatePersonalDetailsRequestEntry": {
                "required": [
                    "permission_target_id",
                    "user_template",
                    "email",
                    "first_name",
                    "last_name",
                    "language"
                ],
                "properties": {
                    "permission_target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_template": {
                        "type": "string",
                        "enum": [
                            "superadmin",
                            "portfolio_manager",
                            "space_manager",
                            "tenant_manager",
                            "ticket_manager",
                            "acs_manager",
                            "vendor_manager",
                            "concierge",
                            "end_user"
                        ]
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    }
                },
                "type": "object"
            },
            "CommandSerializableResponseEntry": {
                "properties": {
                    "request_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "command_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "process_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "record_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "CreatePublicInvitationRequestEntry": {
                "required": [
                    "target_id"
                ],
                "properties": {
                    "target_id": {
                        "title": "Target of the invitation.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "CreateSessionProcessRequestEntry": {
                "required": [
                    "gateway_id",
                    "user_id"
                ],
                "properties": {
                    "gateway_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "GetInvitationParametersRequestEntry": {
                "required": [
                    "invitation_code"
                ],
                "properties": {
                    "invitation_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableInvitationParametersEntry": {
                "properties": {
                    "invitation_type": {
                        "type": "string",
                        "enum": [
                            "public",
                            "user_email",
                            "provisioned_email"
                        ]
                    },
                    "is_phone_number_required": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "JoinToSpaceRequestEntry": {
                "required": [
                    "invitation_code",
                    "user_personal_details",
                    "user_profile"
                ],
                "properties": {
                    "invitation_code": {
                        "type": "string"
                    },
                    "user_personal_details": {
                        "$ref": "#\/components\/schemas\/UserPersonalDetailsRequestEntry"
                    },
                    "user_profile": {
                        "$ref": "#\/components\/schemas\/UserProfileRequestEntry"
                    }
                },
                "type": "object"
            },
            "RemoveInvitationRequestEntry": {
                "required": [
                    "invitation_id"
                ],
                "properties": {
                    "invitation_id": {
                        "title": "Invitation ID.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "ResendInvitationEmailRequestEntry": {
                "required": [
                    "target_id",
                    "email"
                ],
                "properties": {
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 50
                    }
                },
                "type": "object"
            },
            "SerializablePublicInvitationCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePublicInvitationEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableSessionTokenEntry": {
                "properties": {
                    "session_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableSessionEntry": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "session_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableSpaceAccountEntryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableSpaceAccountEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableSpaceAccountEntryCollection2": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableSpaceAccountEntry2"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "AddAcsManagerRoleToUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AddConciergeRoleToUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AddEndUserRoleToUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AddPortfolioManagerRoleToUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AddSpaceManagerRoleToUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AddTenantManagerRoleToUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AddTicketManagerRoleToUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AddVendorManagerRoleToUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "DeactivateUserRequestBody": {
                "required": [
                    "user_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SetUserProfileVisibilityRequestBody": {
                "required": [
                    "user_id",
                    "is_public"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "is_public": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "RemoveAcsManagerRoleFromUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemoveConciergeRoleFromUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemoveEndUserRoleFromUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemovePortfolioManagerRoleFromUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemoveSpaceManagerRoleFromUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemoveTenantManagerRoleFromUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemoveTicketManagerRoleFromUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemoveVendorManagerRoleFromUserInTargetRequestBody": {
                "required": [
                    "user_id",
                    "target_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableCurrentPermissionCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableCurrentPermission"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableUserWithRoleCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableUserWithRole"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableAssigneeAllowedValueCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAssigneeAllowedValue"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableAvailableCategoryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAvailableCategory"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableCategoryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableCategory"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableCategoryTemplateCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableCategoryTemplate"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "ChangeManagersInNotificationSettingsRequestBody": {
                "required": [
                    "notification_settings_id",
                    "managers"
                ],
                "properties": {
                    "notification_settings_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    }
                },
                "type": "object"
            },
            "ChangeNotificationSettingsTypeRequestBody": {
                "required": [
                    "notification_settings_id",
                    "type",
                    "managers"
                ],
                "properties": {
                    "notification_settings_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "WHITELIST",
                            "BLACKLIST"
                        ]
                    },
                    "managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    }
                },
                "type": "object"
            },
            "CreateCategoryRequestBody": {
                "required": [
                    "workflow_id",
                    "name",
                    "ticket_number_series_id",
                    "category_owner_id"
                ],
                "properties": {
                    "workflow_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ticket_number_series_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "category_owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "CreateLabelRequestBody": {
                "required": [
                    "space_id",
                    "name"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateTicketRequestBody": {
                "required": [
                    "category_id",
                    "author_id",
                    "ticket_owner_id",
                    "ticket"
                ],
                "properties": {
                    "category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "ticket_owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "ticket": {
                        "$ref": "#\/components\/schemas\/TicketParameters"
                    }
                },
                "type": "object"
            },
            "CreateTicketNumberSeriesRequestBody": {
                "required": [
                    "owner_id",
                    "numbering_strategy"
                ],
                "properties": {
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "numbering_strategy": {
                        "type": "string",
                        "enum": [
                            "INCREMENTAL_SEQUENCE"
                        ]
                    }
                },
                "type": "object"
            },
            "DeactivateCategoryRequestBody": {
                "required": [
                    "category_id"
                ],
                "properties": {
                    "category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "DeleteLabelRequestBody": {
                "required": [
                    "label_id"
                ],
                "properties": {
                    "label_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SetTicketIsInExternalSystemRequestEntry": {
                "required": [
                    "ticket_id",
                    "is_in_external_system"
                ],
                "properties": {
                    "ticket_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "is_in_external_system": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "RemoveCategoryAutomaticAssigneeRequestBody": {
                "required": [
                    "category_id"
                ],
                "properties": {
                    "category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SetCategoryAutomaticAssigneeRequestBody": {
                "required": [
                    "category_id",
                    "automatic_assignee_id"
                ],
                "properties": {
                    "category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "automatic_assignee_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SetCategoryManagersRequestBody": {
                "required": [
                    "category_id",
                    "managers"
                ],
                "properties": {
                    "category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    }
                },
                "type": "object"
            },
            "StartActionOnTicketRequestBody": {
                "required": [
                    "workflow_process_id",
                    "action_code",
                    "action_parameters"
                ],
                "properties": {
                    "workflow_process_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "action_code": {
                        "type": "string"
                    },
                    "action_parameters": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "StartTicketInWorkflowProcessRequestBody": {
                "required": [
                    "category_id",
                    "author_id",
                    "ticket_owner_id"
                ],
                "properties": {
                    "category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "ticket_owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "UpdateCategoryRequestEntry": {
                "required": [
                    "category_id",
                    "name",
                    "active",
                    "managers"
                ],
                "properties": {
                    "category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "automatic_assignee_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableFileUploadEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "upload_url": {
                        "type": "string"
                    },
                    "download_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StartFileUploadRequestBody": {
                "required": [
                    "owner_id",
                    "name",
                    "extension",
                    "content_type",
                    "content_md5",
                    "content_length"
                ],
                "properties": {
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-zA-Z0-9_-]+"
                    },
                    "extension": {
                        "type": "string",
                        "enum": [
                            "jpg",
                            "jpeg",
                            "png",
                            "tif",
                            "tiff",
                            "txt",
                            "pdf",
                            "doc",
                            "docx",
                            "csv",
                            "xls",
                            "xlsx",
                            "ppt",
                            "pptx"
                        ]
                    },
                    "content_type": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-z]+\/.*",
                        "enum": [
                            "image\/jpeg",
                            "image\/png",
                            "image\/webp",
                            "image\/tiff",
                            "image\/x-tiff",
                            "text\/plain",
                            "application\/pdf",
                            "application\/doc",
                            "application\/ms-doc",
                            "application\/msword",
                            "application\/vnd.openxmlformats-officedocument.wordprocessingml.document",
                            "application\/excel",
                            "application\/vnd.ms-excel",
                            "application\/x-excel",
                            "application\/x-msexcel",
                            "application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                            "application\/mspowerpoint",
                            "application\/powerpoint",
                            "application\/vnd.ms-powerpoint",
                            "application\/x-mspowerpoint",
                            "application\/vnd.openxmlformats-officedocument.presentationml.presentation"
                        ]
                    },
                    "content_md5": {
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 32,
                        "pattern": "[0-9a-f]{32}"
                    },
                    "content_length": {
                        "type": "integer",
                        "maxLength": 25000000
                    }
                },
                "type": "object"
            },
            "SerializableLabelCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableLabel"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableNotificationSettings": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableManagers"
                        }
                    },
                    "settings_type": {
                        "type": "string",
                        "enum": [
                            "WHITELIST",
                            "BLACKLIST"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableTicketingStatusEntry": {
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "uploads_enabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableTicketNumberSeriesCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTicketNumberSeries"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableTicketAvailableActionCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTicketAvailableAction"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableCommentCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableComment"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableContactInformation": {
                "properties": {
                    "ticket_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_unit": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableSpaceUnitInformationEntry"
                            }
                        ]
                    },
                    "space": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableSpaceInformationEntry"
                            }
                        ]
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableSpaceEntrance"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableTicketCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTicket"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableEndUserTicketCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableEndUserTicket"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableTicketRatingCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTicketRating"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableTicketRepairCostCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTicketRepairCost"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableWorkflowCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableWorkflow"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "UpdateCategoryRequestEntry2": {
                "required": [
                    "category_id",
                    "name",
                    "active",
                    "managers",
                    "automatic_assignees"
                ],
                "properties": {
                    "category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "automatic_assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableTargetDescriptionListEntry": {
                "properties": {
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTargetDescriptionEntry"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableTargets": {
                "properties": {
                    "user_targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTarget"
                        }
                    }
                },
                "type": "object"
            },
            "CreateCustomMenuIconRequestEntry": {
                "required": [
                    "image_id",
                    "title_collection"
                ],
                "properties": {
                    "image_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title_collection": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    }
                },
                "type": "object"
            },
            "DeleteCustomMenuIconRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableCustomMenuIcon": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "title_collection": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    }
                },
                "type": "object"
            },
            "SerializableCustomMenuIconCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableCustomMenuIcon"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "StartImageUploadRequestBody": {
                "required": [
                    "name",
                    "extension",
                    "content_type",
                    "content_md5",
                    "content_length"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[ a-zA-Z0-9_-]+"
                    },
                    "extension": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-zA-Z0-9]+"
                    },
                    "content_type": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-z]+\/.*",
                        "enum": [
                            "image\/jpeg",
                            "image\/png",
                            "image\/webp",
                            "image\/svg+xml"
                        ]
                    },
                    "content_md5": {
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 32,
                        "pattern": "[0-9a-f]{32}"
                    },
                    "content_length": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableImageUploadEntry": {
                "required": [
                    "id",
                    "file_id",
                    "upload_url"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "file_id": {
                        "type": "string"
                    },
                    "upload_url": {
                        "type": "string"
                    },
                    "public_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ChangePortfolioInternalDetailsRequestEntry": {
                "required": [
                    "portfolio_id",
                    "internal_details"
                ],
                "properties": {
                    "portfolio_id": {
                        "type": "string"
                    },
                    "internal_details": {
                        "$ref": "#\/components\/schemas\/PortfolioInternalDetailsRequestEntry"
                    }
                },
                "type": "object"
            },
            "CreatePortfolioRequestEntry": {
                "required": [
                    "details",
                    "internal_details"
                ],
                "properties": {
                    "details": {
                        "$ref": "#\/components\/schemas\/PortfolioDetailsRequestEntry"
                    },
                    "address": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/AddressRequestEntry"
                            }
                        ]
                    },
                    "internal_details": {
                        "$ref": "#\/components\/schemas\/PortfolioInternalDetailsRequestEntry"
                    }
                },
                "type": "object"
            },
            "ActivateCustomIconRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ActivateDocumentManagementSystemRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ActivatePortfolioCustomWhiteLabelRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ActivateSmartParcelsRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ActivateVisitorManagementSystemRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AddPortfolioCustomBrandingRequestEntry": {
                "required": [
                    "portfolio_id",
                    "custom_branding"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_branding": {
                        "$ref": "#\/components\/schemas\/PortfolioCustomBrandingRequestEntry"
                    }
                },
                "type": "object"
            },
            "ChangePortfolioAddressRequestEntry": {
                "required": [
                    "portfolio_id",
                    "details"
                ],
                "properties": {
                    "portfolio_id": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#\/components\/schemas\/AddressRequestEntry"
                    }
                },
                "type": "object"
            },
            "ChangePortfolioCustomBrandingRequestEntry": {
                "required": [
                    "portfolio_id",
                    "custom_branding_id",
                    "custom_branding"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_branding_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_branding": {
                        "$ref": "#\/components\/schemas\/PortfolioCustomBrandingRequestEntry"
                    }
                },
                "type": "object"
            },
            "ChangePortfolioCustomWhiteLabelRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_white_label": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CustomWhiteLabelRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "ChangePortfolioDetailsRequestEntry": {
                "required": [
                    "portfolio_id",
                    "details"
                ],
                "properties": {
                    "portfolio_id": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#\/components\/schemas\/PortfolioDetailsRequestEntry"
                    }
                },
                "type": "object"
            },
            "DeactivateCustomIconRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "DeactivateDocumentManagementSystemRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "DeactivatePortfolioCustomWhiteLabelRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "DeactivateSmartParcelsRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "DeactivateVisitorManagementSystemRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemovePortfolioCustomBrandingRequestEntry": {
                "required": [
                    "portfolio_id",
                    "custom_branding_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_branding_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializablePortfolioCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePortfolio"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializablePortfolioDetails": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "address": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableSpaceAddress"
                            }
                        ]
                    },
                    "company_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "company_registration_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "custom_white_label": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableCustomWhiteLabel"
                            }
                        ]
                    },
                    "custom_branding": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableCustomBranding"
                        }
                    }
                },
                "type": "object"
            },
            "SerializablePortfolioInternalDetails": {
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "LIVE",
                            "ON_HOLD",
                            "DEMO",
                            "DATA_SETUP",
                            "TERMINATED",
                            "PRE_LAUNCH"
                        ]
                    },
                    "community_manager_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "business_development_manager_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializablePortfolioSettings": {
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_white_label_on": {
                        "type": "boolean"
                    },
                    "custom_icon_on": {
                        "type": "boolean"
                    },
                    "document_management_system_on": {
                        "type": "boolean"
                    },
                    "visitor_management_system_on": {
                        "type": "boolean"
                    },
                    "smart_parcels_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChangeSpaceAppDetailsRequestEntry": {
                "required": [
                    "space_id",
                    "app_details"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "app_details": {
                        "$ref": "#\/components\/schemas\/AppDetailsRequestEntry"
                    }
                },
                "type": "object"
            },
            "ChangeSpaceAreaRequestEntry": {
                "required": [
                    "space_id",
                    "space_area"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_area": {
                        "$ref": "#\/components\/schemas\/SpaceAreaRequestEntry"
                    }
                },
                "type": "object"
            },
            "ChangeSpaceDetailsRequestEntry": {
                "required": [
                    "space_id",
                    "details"
                ],
                "properties": {
                    "space_id": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#\/components\/schemas\/SpaceDetailsRequestEntry"
                    }
                },
                "type": "object"
            },
            "SpaceEntranceRequestEntry": {
                "required": [
                    "space_id",
                    "entrance_id",
                    "is_main",
                    "address"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "entrance_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/AddressRequestEntry2"
                    }
                },
                "type": "object"
            },
            "ChangeSpaceSettingsRequestEntry": {
                "required": [
                    "space_id",
                    "settings"
                ],
                "properties": {
                    "space_id": {
                        "type": "string"
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/SpaceSettingsForChangeRequestEntry"
                    }
                },
                "type": "object"
            },
            "ActivateSpaceSmartParcelsRequestEntry": {
                "required": [
                    "space_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ActivateVisitorManagementSystemRequestEntry2": {
                "required": [
                    "space_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AddImportantContactRequestEntry": {
                "required": [
                    "space_id",
                    "important_contact_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "important_contact_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AddLevelDetailsRequestEntry": {
                "required": [
                    "level_id",
                    "title",
                    "description"
                ],
                "properties": {
                    "level_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    }
                },
                "type": "object"
            },
            "AddPortfolioImportantContactRequestEntry": {
                "required": [
                    "portfolio_id",
                    "important_contact_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "important_contact_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "CancelCalendarEventRequestEntry": {
                "required": [
                    "calendar_event_id"
                ],
                "properties": {
                    "calendar_event_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ChangeLevelDetailsRequestEntry": {
                "required": [
                    "level_id",
                    "title",
                    "description"
                ],
                "properties": {
                    "level_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    }
                },
                "type": "object"
            },
            "ChangeSpaceGroupsRequestEntry": {
                "required": [
                    "space_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "group1": {
                        "type": "string",
                        "nullable": true
                    },
                    "group2": {
                        "type": "string",
                        "nullable": true
                    },
                    "group3": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ChangeSpaceInternalDetailsRequestEntry": {
                "required": [
                    "space_id",
                    "internal_details"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "internal_details": {
                        "$ref": "#\/components\/schemas\/SpaceInternalDetailsRequestEntry"
                    }
                },
                "type": "object"
            },
            "ChangeSpaceTimeZoneRequestEntry": {
                "required": [
                    "space_id",
                    "time_zone"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "time_zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChangeSpaceUnitDetailsRequestEntry": {
                "required": [
                    "space_unit_id",
                    "details"
                ],
                "properties": {
                    "space_unit_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "details": {
                        "$ref": "#\/components\/schemas\/SpaceUnitDetailsRequestEntry"
                    }
                },
                "type": "object"
            },
            "ChangeWelcomeScreenRequestEntry": {
                "required": [
                    "space_id",
                    "welcome_screen"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "welcome_screen": {
                        "$ref": "#\/components\/schemas\/WelcomeScreenRequestEntry"
                    }
                },
                "type": "object"
            },
            "CreateCalendarEventRequestEntry": {
                "required": [
                    "space_id",
                    "title",
                    "description",
                    "interval"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "interval": {
                        "$ref": "#\/components\/schemas\/SerializableDateTimeIntervalEntry"
                    }
                },
                "type": "object"
            },
            "AddCustomMenuItemRequestEntry": {
                "required": [
                    "custom_menu_id",
                    "item"
                ],
                "properties": {
                    "custom_menu_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "item": {
                        "$ref": "#\/components\/schemas\/CustomMenuItemRequestEntry"
                    }
                },
                "type": "object"
            },
            "CreateLevelRequestEntry": {
                "required": [
                    "space_id",
                    "entrance_id",
                    "order"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "entrance_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "order": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CreateSpaceRequestEntry": {
                "required": [
                    "portfolio_id",
                    "space_details",
                    "app_details",
                    "entrances",
                    "space_area",
                    "internal_details",
                    "settings",
                    "labels"
                ],
                "properties": {
                    "portfolio_id": {
                        "type": "string"
                    },
                    "space_details": {
                        "$ref": "#\/components\/schemas\/SpaceDetailsRequestEntry"
                    },
                    "app_details": {
                        "$ref": "#\/components\/schemas\/AppDetailsRequestEntry"
                    },
                    "entrances": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/EntranceRequestEntry"
                        }
                    },
                    "space_area": {
                        "$ref": "#\/components\/schemas\/SpaceAreaRequestEntry"
                    },
                    "internal_details": {
                        "$ref": "#\/components\/schemas\/SpaceInternalDetailsRequestEntry"
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/CreateSpaceSettingsRequestEntry"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "group1": {
                        "type": "string",
                        "nullable": true
                    },
                    "group2": {
                        "type": "string",
                        "nullable": true
                    },
                    "group3": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CreateSpaceEntranceRequestEntry": {
                "required": [
                    "space_id",
                    "is_main",
                    "address"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/AddressRequestEntry2"
                    }
                },
                "type": "object"
            },
            "CreateSpaceUnitRequestEntry": {
                "required": [
                    "entrance_id",
                    "level_id",
                    "details"
                ],
                "properties": {
                    "entrance_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "level_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "details": {
                        "$ref": "#\/components\/schemas\/SpaceUnitDetailsRequestEntry"
                    }
                },
                "type": "object"
            },
            "CreateWelcomeScreenRequestEntry": {
                "required": [
                    "space_id",
                    "welcome_screen"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "welcome_screen": {
                        "$ref": "#\/components\/schemas\/WelcomeScreenRequestEntry"
                    }
                },
                "type": "object"
            },
            "DeactivateSpaceSmartParcelsRequestEntry": {
                "required": [
                    "space_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "DeactivateVisitorManagementSystemRequestEntry2": {
                "required": [
                    "space_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "DeleteLevelRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "DeleteSpaceEntranceRequestEntry": {
                "required": [
                    "space_id",
                    "entrance_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "entrance_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SpaceUnitIdRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "DeleteWelcomeScreenRequestEntry": {
                "required": [
                    "space_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemoveCustomMenuItemRequestEntry": {
                "required": [
                    "custom_menu_id",
                    "custom_menu_item_id"
                ],
                "properties": {
                    "custom_menu_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_menu_item_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemoveImportantContactRequestEntry": {
                "required": [
                    "space_id",
                    "important_contact_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "important_contact_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemovePortfolioImportantContactRequestEntry": {
                "required": [
                    "portfolio_id",
                    "important_contact_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "important_contact_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SetSpaceBrandingRequestEntry": {
                "required": [
                    "space_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_branding_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SetSpaceLabelsRequestEntry": {
                "required": [
                    "space_id",
                    "labels"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "UpdateCalendarEventRequestEntry": {
                "required": [
                    "calendar_event_id",
                    "title",
                    "description",
                    "interval"
                ],
                "properties": {
                    "calendar_event_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "interval": {
                        "$ref": "#\/components\/schemas\/SerializableDateTimeIntervalEntry"
                    }
                },
                "type": "object"
            },
            "UpdateCustomMenuItemRequestEntry": {
                "required": [
                    "custom_menu_item_id",
                    "custom_menu_id",
                    "item"
                ],
                "properties": {
                    "custom_menu_item_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_menu_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "item": {
                        "$ref": "#\/components\/schemas\/CustomMenuItemRequestEntry"
                    }
                },
                "type": "object"
            },
            "UpdateLevelOrderRequestEntry": {
                "required": [
                    "id",
                    "order"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "order": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    }
                },
                "type": "object"
            },
            "SerializableCustomMenuItemCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableCustomMenuItem"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    },
                    "custom_menu_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableSpaceInternalDetailsCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableSpaceInternalDetails"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableSpaceUnitsCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableSpaceUnit"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableSpaceCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableSpace"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "CalendarEventEntryCollection": {
                "properties": {
                    "hits": {
                        "type": "integer"
                    },
                    "entries": {
                        "$ref": "#\/components\/schemas\/Collection"
                    }
                },
                "type": "object"
            },
            "SerializableImportantContactCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImportantContact"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableSpaceAppDetails": {
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "header": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableImage"
                            }
                        ]
                    },
                    "dark_logo": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableImage"
                            }
                        ]
                    },
                    "light_logo": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableImage"
                            }
                        ]
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableSpaceArea": {
                "required": [
                    "space_area_sqm",
                    "user_potential"
                ],
                "properties": {
                    "space_area_sqm": {
                        "type": "integer"
                    },
                    "user_potential": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableSpaceEntranceCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableSpaceEntrance2"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableSpaceInternalDetails": {
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "PRE_LAUNCH",
                            "LIVE",
                            "ON_HOLD",
                            "TERMINATED",
                            "DEMO",
                            "DATA_SETUP"
                        ]
                    },
                    "community_manager_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "business_development_manager_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableSpaceLevelCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableSpaceLevel"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableSpaceSettings": {
                "required": [
                    "space_id",
                    "is_comments_on",
                    "is_payments_on",
                    "is_ticketing_system_on",
                    "is_visitor_management_system_on",
                    "is_user_messages_filtering_on",
                    "is_phone_number_required_on",
                    "is_user_engagement_button_on",
                    "is_visitors_allowed_to_use_app_as_end_users_on",
                    "is_ticketing_uploads_allowed",
                    "is_document_management_system_on",
                    "is_welcome_screen_on",
                    "is_smart_parcels_on"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "is_comments_on": {
                        "type": "boolean"
                    },
                    "is_payments_on": {
                        "type": "boolean"
                    },
                    "is_ticketing_system_on": {
                        "type": "boolean"
                    },
                    "is_visitor_management_system_on": {
                        "type": "boolean"
                    },
                    "is_user_messages_filtering_on": {
                        "type": "boolean"
                    },
                    "is_phone_number_required_on": {
                        "type": "boolean"
                    },
                    "is_user_engagement_button_on": {
                        "type": "boolean"
                    },
                    "is_visitors_allowed_to_use_app_as_end_users_on": {
                        "type": "boolean"
                    },
                    "is_ticketing_uploads_allowed": {
                        "type": "boolean"
                    },
                    "is_document_management_system_on": {
                        "type": "boolean"
                    },
                    "is_welcome_screen_on": {
                        "type": "boolean"
                    },
                    "is_smart_parcels_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableSpaceUnit": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "entrance_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "level_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "serializable_image": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImage"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableSpaceWelcomeScreen": {
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "image": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableImage"
                            }
                        ]
                    },
                    "title_collection": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description_collection": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    }
                },
                "type": "object"
            },
            "TenantSpaceUnitsRequestEntry": {
                "required": [
                    "units",
                    "tenant_id"
                ],
                "properties": {
                    "units": {
                        "$ref": "#\/components\/schemas\/SpaceUnitsRequestEntryCollection"
                    },
                    "tenant_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ChangeCompanyRepresentativeDetailsRequestEntry": {
                "required": [
                    "tenant_id",
                    "representative_details"
                ],
                "properties": {
                    "tenant_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "representative_details": {
                        "$ref": "#\/components\/schemas\/CompanyRepresentativeDetailsRequestEntry"
                    }
                },
                "type": "object"
            },
            "ChangeCompanyTenantPublicProfileRequestEntry": {
                "required": [
                    "tenant_id",
                    "public_profile"
                ],
                "properties": {
                    "tenant_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "public_profile": {
                        "$ref": "#\/components\/schemas\/TenantPublicProfileRequestEntry"
                    }
                },
                "type": "object"
            },
            "IndividualTenantAddressRequestEntry": {
                "required": [
                    "tenant_id",
                    "tenant_address"
                ],
                "properties": {
                    "tenant_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "tenant_address": {
                        "$ref": "#\/components\/schemas\/AddressRequestEntry2"
                    }
                },
                "type": "object"
            },
            "IndividualTenantInfoDetailsRequestEntry": {
                "required": [
                    "tenant_id",
                    "info"
                ],
                "properties": {
                    "tenant_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "info": {
                        "$ref": "#\/components\/schemas\/TenantInfoDetailsRequestEntry"
                    }
                },
                "type": "object"
            },
            "ChangeTenantCompanyAddressRequestEntry": {
                "required": [
                    "tenant_id",
                    "address"
                ],
                "properties": {
                    "tenant_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/AddressRequestEntry2"
                    }
                },
                "type": "object"
            },
            "ChangeTenantCompanyInfoDetailsRequestEntry": {
                "required": [
                    "tenant_id",
                    "tenant_details"
                ],
                "properties": {
                    "tenant_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "tenant_details": {
                        "$ref": "#\/components\/schemas\/CompanyInfoDetailsRequestEntry"
                    }
                },
                "type": "object"
            },
            "TenantLeaseInformationRequestEntry": {
                "required": [
                    "tenant_id"
                ],
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "lease_information": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/LeaseInformationRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "ChangeTenantSettingsRequestEntry": {
                "required": [
                    "tenant_id",
                    "status"
                ],
                "properties": {
                    "tenant_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/TenantSettingsRequestEntry"
                    }
                },
                "type": "object"
            },
            "TenantStatusRequestEntry": {
                "required": [
                    "tenant_id",
                    "status"
                ],
                "properties": {
                    "tenant_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "HIDDEN"
                        ]
                    }
                },
                "type": "object"
            },
            "CreateTenantWithDefaultAuthenticationMethodProcessRequestEntry": {
                "required": [
                    "tenant"
                ],
                "properties": {
                    "tenant": {
                        "$ref": "#\/components\/schemas\/CreateTenantRequestEntry"
                    }
                },
                "type": "object"
            },
            "TurnOffCompanyTenantPublicProfileRequestEntry": {
                "required": [
                    "tenant_id"
                ],
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TurnOnCompanyTenantPublicProfileRequestEntry": {
                "required": [
                    "tenant_id"
                ],
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableTenantShortExtractCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTenantShortExtract"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableTenantDetails": {
                "required": [
                    "tenant_type"
                ],
                "properties": {
                    "tenant_type": {
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "COMPANY"
                        ]
                    },
                    "tenant_status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "HIDDEN"
                        ]
                    },
                    "individual_tenant_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableIndividualTenantDetails"
                            }
                        ]
                    },
                    "company_tenant_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableCompanyTenantDetails"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableTenantDetailsV1": {
                "required": [
                    "tenant_type"
                ],
                "properties": {
                    "tenant_type": {
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "COMPANY"
                        ]
                    },
                    "tenant_status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "HIDDEN"
                        ]
                    },
                    "individual_tenant_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableIndividualTenantDetailsV1"
                            }
                        ]
                    },
                    "company_tenant_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableCompanyTenantDetailsV1"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableTenantLeaseInformation": {
                "properties": {
                    "start_date": {
                        "type": "string",
                        "nullable": true
                    },
                    "end_date": {
                        "type": "string",
                        "nullable": true
                    },
                    "rate": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLeaseMoney"
                            }
                        ]
                    },
                    "tenant_payment_frequency_value": {
                        "type": "string",
                        "enum": [
                            "MONTHLY",
                            "QUARTERLY",
                            "BI_ANNUALLY",
                            "ANNUALLY",
                            "INDEFINITE",
                            null
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableTenantSettings": {
                "properties": {
                    "is_comments_on": {
                        "type": "boolean"
                    },
                    "is_payments_on": {
                        "type": "boolean"
                    },
                    "is_ticketing_system_on": {
                        "type": "boolean"
                    },
                    "number_of_allowed_people": {
                        "type": "integer"
                    },
                    "is_ticketing_uploads_allowed": {
                        "type": "boolean"
                    },
                    "is_user_engagement_button_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableTenantsCountInTenant": {
                "properties": {
                    "total_invited_users": {
                        "type": "integer"
                    },
                    "max_allowed_users_in_tenant": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableTenantWithLeaseAndManagersCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTenantWithLeaseAndManagers"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "V2ChangePortfolioCustomWhiteLabelRequestEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_white_label": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/V2CustomWhiteLabelRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "V2CreateSpaceRequestEntry": {
                "required": [
                    "portfolio_id",
                    "space_details",
                    "app_details",
                    "entrances",
                    "space_area",
                    "internal_details",
                    "settings",
                    "labels",
                    "time_zone"
                ],
                "properties": {
                    "portfolio_id": {
                        "type": "string"
                    },
                    "space_details": {
                        "$ref": "#\/components\/schemas\/SpaceDetailsRequestEntry"
                    },
                    "app_details": {
                        "$ref": "#\/components\/schemas\/AppDetailsRequestEntry"
                    },
                    "entrances": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/EntranceRequestEntry"
                        }
                    },
                    "space_area": {
                        "$ref": "#\/components\/schemas\/SpaceAreaRequestEntry"
                    },
                    "internal_details": {
                        "$ref": "#\/components\/schemas\/SpaceInternalDetailsRequestEntry"
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/CreateSpaceSettingsRequestEntry"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "group1": {
                        "type": "string",
                        "nullable": true
                    },
                    "group2": {
                        "type": "string",
                        "nullable": true
                    },
                    "group3": {
                        "type": "string",
                        "nullable": true
                    },
                    "time_zone": {
                        "type": "string",
                        "enum": [
                            "Africa\/Abidjan",
                            "Africa\/Accra",
                            "Africa\/Addis_Ababa",
                            "Africa\/Algiers",
                            "Africa\/Asmara",
                            "Africa\/Bamako",
                            "Africa\/Bangui",
                            "Africa\/Banjul",
                            "Africa\/Bissau",
                            "Africa\/Blantyre",
                            "Africa\/Brazzaville",
                            "Africa\/Bujumbura",
                            "Africa\/Cairo",
                            "Africa\/Casablanca",
                            "Africa\/Ceuta",
                            "Africa\/Conakry",
                            "Africa\/Dakar",
                            "Africa\/Dar_es_Salaam",
                            "Africa\/Djibouti",
                            "Africa\/Douala",
                            "Africa\/El_Aaiun",
                            "Africa\/Freetown",
                            "Africa\/Gaborone",
                            "Africa\/Harare",
                            "Africa\/Johannesburg",
                            "Africa\/Juba",
                            "Africa\/Kampala",
                            "Africa\/Khartoum",
                            "Africa\/Kigali",
                            "Africa\/Kinshasa",
                            "Africa\/Lagos",
                            "Africa\/Libreville",
                            "Africa\/Lome",
                            "Africa\/Luanda",
                            "Africa\/Lubumbashi",
                            "Africa\/Lusaka",
                            "Africa\/Malabo",
                            "Africa\/Maputo",
                            "Africa\/Maseru",
                            "Africa\/Mbabane",
                            "Africa\/Mogadishu",
                            "Africa\/Monrovia",
                            "Africa\/Nairobi",
                            "Africa\/Ndjamena",
                            "Africa\/Niamey",
                            "Africa\/Nouakchott",
                            "Africa\/Ouagadougou",
                            "Africa\/Porto-Novo",
                            "Africa\/Sao_Tome",
                            "Africa\/Tripoli",
                            "Africa\/Tunis",
                            "Africa\/Windhoek",
                            "America\/Adak",
                            "America\/Anchorage",
                            "America\/Anguilla",
                            "America\/Antigua",
                            "America\/Araguaina",
                            "America\/Argentina\/Buenos_Aires",
                            "America\/Argentina\/Catamarca",
                            "America\/Argentina\/Cordoba",
                            "America\/Argentina\/Jujuy",
                            "America\/Argentina\/La_Rioja",
                            "America\/Argentina\/Mendoza",
                            "America\/Argentina\/Rio_Gallegos",
                            "America\/Argentina\/Salta",
                            "America\/Argentina\/San_Juan",
                            "America\/Argentina\/San_Luis",
                            "America\/Argentina\/Tucuman",
                            "America\/Argentina\/Ushuaia",
                            "America\/Aruba",
                            "America\/Asuncion",
                            "America\/Atikokan",
                            "America\/Bahia",
                            "America\/Bahia_Banderas",
                            "America\/Barbados",
                            "America\/Belem",
                            "America\/Belize",
                            "America\/Blanc-Sablon",
                            "America\/Boa_Vista",
                            "America\/Bogota",
                            "America\/Boise",
                            "America\/Cambridge_Bay",
                            "America\/Campo_Grande",
                            "America\/Cancun",
                            "America\/Caracas",
                            "America\/Cayenne",
                            "America\/Cayman",
                            "America\/Chicago",
                            "America\/Chihuahua",
                            "America\/Ciudad_Juarez",
                            "America\/Costa_Rica",
                            "America\/Creston",
                            "America\/Cuiaba",
                            "America\/Curacao",
                            "America\/Danmarkshavn",
                            "America\/Dawson",
                            "America\/Dawson_Creek",
                            "America\/Denver",
                            "America\/Detroit",
                            "America\/Dominica",
                            "America\/Edmonton",
                            "America\/Eirunepe",
                            "America\/El_Salvador",
                            "America\/Fort_Nelson",
                            "America\/Fortaleza",
                            "America\/Glace_Bay",
                            "America\/Goose_Bay",
                            "America\/Grand_Turk",
                            "America\/Grenada",
                            "America\/Guadeloupe",
                            "America\/Guatemala",
                            "America\/Guayaquil",
                            "America\/Guyana",
                            "America\/Halifax",
                            "America\/Havana",
                            "America\/Hermosillo",
                            "America\/Indiana\/Indianapolis",
                            "America\/Indiana\/Knox",
                            "America\/Indiana\/Marengo",
                            "America\/Indiana\/Petersburg",
                            "America\/Indiana\/Tell_City",
                            "America\/Indiana\/Vevay",
                            "America\/Indiana\/Vincennes",
                            "America\/Indiana\/Winamac",
                            "America\/Inuvik",
                            "America\/Iqaluit",
                            "America\/Jamaica",
                            "America\/Juneau",
                            "America\/Kentucky\/Louisville",
                            "America\/Kentucky\/Monticello",
                            "America\/Kralendijk",
                            "America\/La_Paz",
                            "America\/Lima",
                            "America\/Los_Angeles",
                            "America\/Lower_Princes",
                            "America\/Maceio",
                            "America\/Managua",
                            "America\/Manaus",
                            "America\/Marigot",
                            "America\/Martinique",
                            "America\/Matamoros",
                            "America\/Mazatlan",
                            "America\/Menominee",
                            "America\/Merida",
                            "America\/Metlakatla",
                            "America\/Mexico_City",
                            "America\/Miquelon",
                            "America\/Moncton",
                            "America\/Monterrey",
                            "America\/Montevideo",
                            "America\/Montserrat",
                            "America\/Nassau",
                            "America\/New_York",
                            "America\/Nome",
                            "America\/Noronha",
                            "America\/North_Dakota\/Beulah",
                            "America\/North_Dakota\/Center",
                            "America\/North_Dakota\/New_Salem",
                            "America\/Nuuk",
                            "America\/Ojinaga",
                            "America\/Panama",
                            "America\/Paramaribo",
                            "America\/Phoenix",
                            "America\/Port-au-Prince",
                            "America\/Port_of_Spain",
                            "America\/Porto_Velho",
                            "America\/Puerto_Rico",
                            "America\/Punta_Arenas",
                            "America\/Rankin_Inlet",
                            "America\/Recife",
                            "America\/Regina",
                            "America\/Resolute",
                            "America\/Rio_Branco",
                            "America\/Santarem",
                            "America\/Santiago",
                            "America\/Santo_Domingo",
                            "America\/Sao_Paulo",
                            "America\/Scoresbysund",
                            "America\/Sitka",
                            "America\/St_Barthelemy",
                            "America\/St_Johns",
                            "America\/St_Kitts",
                            "America\/St_Lucia",
                            "America\/St_Thomas",
                            "America\/St_Vincent",
                            "America\/Swift_Current",
                            "America\/Tegucigalpa",
                            "America\/Thule",
                            "America\/Tijuana",
                            "America\/Toronto",
                            "America\/Tortola",
                            "America\/Vancouver",
                            "America\/Whitehorse",
                            "America\/Winnipeg",
                            "America\/Yakutat",
                            "Antarctica\/Casey",
                            "Antarctica\/Davis",
                            "Antarctica\/DumontDUrville",
                            "Antarctica\/Macquarie",
                            "Antarctica\/Mawson",
                            "Antarctica\/McMurdo",
                            "Antarctica\/Palmer",
                            "Antarctica\/Rothera",
                            "Antarctica\/Syowa",
                            "Antarctica\/Troll",
                            "Antarctica\/Vostok",
                            "Arctic\/Longyearbyen",
                            "Asia\/Aden",
                            "Asia\/Almaty",
                            "Asia\/Amman",
                            "Asia\/Anadyr",
                            "Asia\/Aqtau",
                            "Asia\/Aqtobe",
                            "Asia\/Ashgabat",
                            "Asia\/Atyrau",
                            "Asia\/Baghdad",
                            "Asia\/Bahrain",
                            "Asia\/Baku",
                            "Asia\/Bangkok",
                            "Asia\/Barnaul",
                            "Asia\/Beirut",
                            "Asia\/Bishkek",
                            "Asia\/Brunei",
                            "Asia\/Chita",
                            "Asia\/Choibalsan",
                            "Asia\/Colombo",
                            "Asia\/Damascus",
                            "Asia\/Dhaka",
                            "Asia\/Dili",
                            "Asia\/Dubai",
                            "Asia\/Dushanbe",
                            "Asia\/Famagusta",
                            "Asia\/Gaza",
                            "Asia\/Hebron",
                            "Asia\/Ho_Chi_Minh",
                            "Asia\/Hong_Kong",
                            "Asia\/Hovd",
                            "Asia\/Irkutsk",
                            "Asia\/Jakarta",
                            "Asia\/Jayapura",
                            "Asia\/Jerusalem",
                            "Asia\/Kabul",
                            "Asia\/Kamchatka",
                            "Asia\/Karachi",
                            "Asia\/Kathmandu",
                            "Asia\/Khandyga",
                            "Asia\/Kolkata",
                            "Asia\/Krasnoyarsk",
                            "Asia\/Kuala_Lumpur",
                            "Asia\/Kuching",
                            "Asia\/Kuwait",
                            "Asia\/Macau",
                            "Asia\/Magadan",
                            "Asia\/Makassar",
                            "Asia\/Manila",
                            "Asia\/Muscat",
                            "Asia\/Nicosia",
                            "Asia\/Novokuznetsk",
                            "Asia\/Novosibirsk",
                            "Asia\/Omsk",
                            "Asia\/Oral",
                            "Asia\/Phnom_Penh",
                            "Asia\/Pontianak",
                            "Asia\/Pyongyang",
                            "Asia\/Qatar",
                            "Asia\/Qostanay",
                            "Asia\/Qyzylorda",
                            "Asia\/Riyadh",
                            "Asia\/Sakhalin",
                            "Asia\/Samarkand",
                            "Asia\/Seoul",
                            "Asia\/Shanghai",
                            "Asia\/Singapore",
                            "Asia\/Srednekolymsk",
                            "Asia\/Taipei",
                            "Asia\/Tashkent",
                            "Asia\/Tbilisi",
                            "Asia\/Tehran",
                            "Asia\/Thimphu",
                            "Asia\/Tokyo",
                            "Asia\/Tomsk",
                            "Asia\/Ulaanbaatar",
                            "Asia\/Urumqi",
                            "Asia\/Ust-Nera",
                            "Asia\/Vientiane",
                            "Asia\/Vladivostok",
                            "Asia\/Yakutsk",
                            "Asia\/Yangon",
                            "Asia\/Yekaterinburg",
                            "Asia\/Yerevan",
                            "Atlantic\/Azores",
                            "Atlantic\/Bermuda",
                            "Atlantic\/Canary",
                            "Atlantic\/Cape_Verde",
                            "Atlantic\/Faroe",
                            "Atlantic\/Madeira",
                            "Atlantic\/Reykjavik",
                            "Atlantic\/South_Georgia",
                            "Atlantic\/St_Helena",
                            "Atlantic\/Stanley",
                            "Australia\/Adelaide",
                            "Australia\/Brisbane",
                            "Australia\/Broken_Hill",
                            "Australia\/Darwin",
                            "Australia\/Eucla",
                            "Australia\/Hobart",
                            "Australia\/Lindeman",
                            "Australia\/Lord_Howe",
                            "Australia\/Melbourne",
                            "Australia\/Perth",
                            "Australia\/Sydney",
                            "Europe\/Amsterdam",
                            "Europe\/Andorra",
                            "Europe\/Astrakhan",
                            "Europe\/Athens",
                            "Europe\/Belgrade",
                            "Europe\/Berlin",
                            "Europe\/Bratislava",
                            "Europe\/Brussels",
                            "Europe\/Bucharest",
                            "Europe\/Budapest",
                            "Europe\/Busingen",
                            "Europe\/Chisinau",
                            "Europe\/Copenhagen",
                            "Europe\/Dublin",
                            "Europe\/Gibraltar",
                            "Europe\/Guernsey",
                            "Europe\/Helsinki",
                            "Europe\/Isle_of_Man",
                            "Europe\/Istanbul",
                            "Europe\/Jersey",
                            "Europe\/Kaliningrad",
                            "Europe\/Kirov",
                            "Europe\/Kyiv",
                            "Europe\/Lisbon",
                            "Europe\/Ljubljana",
                            "Europe\/London",
                            "Europe\/Luxembourg",
                            "Europe\/Madrid",
                            "Europe\/Malta",
                            "Europe\/Mariehamn",
                            "Europe\/Minsk",
                            "Europe\/Monaco",
                            "Europe\/Moscow",
                            "Europe\/Oslo",
                            "Europe\/Paris",
                            "Europe\/Podgorica",
                            "Europe\/Prague",
                            "Europe\/Riga",
                            "Europe\/Rome",
                            "Europe\/Samara",
                            "Europe\/San_Marino",
                            "Europe\/Sarajevo",
                            "Europe\/Saratov",
                            "Europe\/Simferopol",
                            "Europe\/Skopje",
                            "Europe\/Sofia",
                            "Europe\/Stockholm",
                            "Europe\/Tallinn",
                            "Europe\/Tirane",
                            "Europe\/Ulyanovsk",
                            "Europe\/Vaduz",
                            "Europe\/Vatican",
                            "Europe\/Vienna",
                            "Europe\/Vilnius",
                            "Europe\/Volgograd",
                            "Europe\/Warsaw",
                            "Europe\/Zagreb",
                            "Europe\/Zurich",
                            "Indian\/Antananarivo",
                            "Indian\/Chagos",
                            "Indian\/Christmas",
                            "Indian\/Cocos",
                            "Indian\/Comoro",
                            "Indian\/Kerguelen",
                            "Indian\/Mahe",
                            "Indian\/Maldives",
                            "Indian\/Mauritius",
                            "Indian\/Mayotte",
                            "Indian\/Reunion",
                            "Pacific\/Apia",
                            "Pacific\/Auckland",
                            "Pacific\/Bougainville",
                            "Pacific\/Chatham",
                            "Pacific\/Chuuk",
                            "Pacific\/Easter",
                            "Pacific\/Efate",
                            "Pacific\/Fakaofo",
                            "Pacific\/Fiji",
                            "Pacific\/Funafuti",
                            "Pacific\/Galapagos",
                            "Pacific\/Gambier",
                            "Pacific\/Guadalcanal",
                            "Pacific\/Guam",
                            "Pacific\/Honolulu",
                            "Pacific\/Kanton",
                            "Pacific\/Kiritimati",
                            "Pacific\/Kosrae",
                            "Pacific\/Kwajalein",
                            "Pacific\/Majuro",
                            "Pacific\/Marquesas",
                            "Pacific\/Midway",
                            "Pacific\/Nauru",
                            "Pacific\/Niue",
                            "Pacific\/Norfolk",
                            "Pacific\/Noumea",
                            "Pacific\/Pago_Pago",
                            "Pacific\/Palau",
                            "Pacific\/Pitcairn",
                            "Pacific\/Pohnpei",
                            "Pacific\/Port_Moresby",
                            "Pacific\/Rarotonga",
                            "Pacific\/Saipan",
                            "Pacific\/Tahiti",
                            "Pacific\/Tarawa",
                            "Pacific\/Tongatapu",
                            "Pacific\/Wake",
                            "Pacific\/Wallis",
                            "UTC"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableTenantDetailsV2": {
                "required": [
                    "tenant_type"
                ],
                "properties": {
                    "tenant_type": {
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "COMPANY"
                        ]
                    },
                    "tenant_status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "HIDDEN"
                        ]
                    },
                    "individual_tenant_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableIndividualTenantDetailsV2"
                            }
                        ]
                    },
                    "company_tenant_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableCompanyTenantDetailsV2"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "ChangePortfolioCustomWhiteLabelRequestEntry2": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_white_label": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CustomWhiteLabelRequestEntry2"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "ChangePortfolioCustomWhiteLabelRequestEntry3": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "custom_white_label": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CustomWhiteLabelRequestEntry3"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "RemoveDeviceTokenEntry": {
                "required": [
                    "device_token"
                ],
                "properties": {
                    "device_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SendPushNotificationEntry": {
                "required": [
                    "user_id",
                    "notification"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "notification": {
                        "$ref": "#\/components\/schemas\/PushNotificationEntry"
                    }
                },
                "type": "object"
            },
            "SetUserNotificationSettingEntry": {
                "required": [
                    "user_id",
                    "notification_type_id",
                    "is_turned_on"
                ],
                "properties": {
                    "user_id": {
                        "title": "User id for whom we change the setting.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "notification_type_id": {
                        "title": "Notification type id.",
                        "description": "Available values:\n- 4dfc3812-03e2-47a1-89cf-4492f2ea8a16 - notifications for booking confirmations",
                        "type": "string",
                        "enum": [
                            "4dfc3812-03e2-47a1-89cf-4492f2ea8a16",
                            "31806e6d-2409-4bec-8f1e-0e8c0bfe88c9"
                        ],
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/enum"
                            }
                        ]
                    },
                    "is_turned_on": {
                        "title": "Value of the notification enabled (true) \/ disabled (false).",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableDeviceTokenRequestEntry": {
                "required": [
                    "device_token"
                ],
                "properties": {
                    "device_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializablePostChatPushNotificationRequestEntry": {
                "required": [
                    "conversation_id",
                    "sender_id",
                    "participant_ids",
                    "message_data"
                ],
                "properties": {
                    "conversation_id": {
                        "type": "string"
                    },
                    "sender_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "participant_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "message_data": {
                        "$ref": "#\/components\/schemas\/MessageData"
                    }
                },
                "type": "object"
            },
            "SerializableEntryResponse": {
                "properties": {
                    "serializable_entry": {
                        "$ref": "#\/components\/schemas\/SerializableEntry"
                    }
                },
                "type": "object"
            },
            "SerializableUserNotificationSettingsEntryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableUserNotificationSettingsEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "AccessViaCodeTokenRequest": {
                "required": [
                    "token"
                ],
                "properties": {
                    "token": {
                        "title": "Token from the google.",
                        "description": "This is NOT a JWT token from google. This is a field \"code\" from Google OAuth process.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccessViaCodeTokenResponse": {
                "properties": {
                    "authentication_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccessViaJwtTokenRequest": {
                "required": [
                    "token"
                ],
                "properties": {
                    "token": {
                        "title": "JWT Token obtained directly from google.",
                        "description": "https:\/\/developers.google.com\/identity\/sign-in\/ios\/backend-auth.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccessViaJwtTokenResponse": {
                "properties": {
                    "authentication_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeProcessResponse": {
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/DescribeProcessResponseEntry"
                        }
                    }
                },
                "type": "object"
            },
            "StartGoogleOAuthAuthenticationProcessResponse": {
                "properties": {
                    "redirect_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccessViaCodeTokenRequest2": {
                "required": [
                    "authorization_code"
                ],
                "properties": {
                    "authorization_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccessViaCodeTokenResponse2": {
                "properties": {
                    "authentication_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccessViaJwtTokenRequest2": {
                "required": [
                    "access_token"
                ],
                "properties": {
                    "access_token": {
                        "title": "Access token obtained directly from Facebook.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccessViaJwtTokenResponse2": {
                "properties": {
                    "authentication_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StartFacebookOAuthAuthenticationProcessResponse": {
                "properties": {
                    "redirect_uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccessViaCodeTokenRequest3": {
                "required": [
                    "authorization_code"
                ],
                "properties": {
                    "authorization_code": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AccessViaCodeTokenResponse3": {
                "properties": {
                    "authentication_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StartAppleOAuthAuthenticationProcessResponse": {
                "properties": {
                    "redirect_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PostSamlStartResponseEntry": {
                "properties": {
                    "redirect_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StartImageUploadRequestBody2": {
                "required": [
                    "name",
                    "extension",
                    "content_type",
                    "content_md5",
                    "content_length"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[ a-zA-Z0-9_-]+"
                    },
                    "extension": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-zA-Z0-9]+"
                    },
                    "content_type": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-z]+\/.*",
                        "enum": [
                            "image\/jpeg",
                            "image\/png",
                            "image\/webp"
                        ]
                    },
                    "content_md5": {
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 32,
                        "pattern": "[0-9a-f]{32}"
                    },
                    "content_length": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableImageUploadEntry2": {
                "required": [
                    "id",
                    "file_id",
                    "upload_url"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "file_id": {
                        "type": "string"
                    },
                    "upload_url": {
                        "type": "string"
                    },
                    "public_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ChangeOwnAvatarRequestEntry": {
                "required": [
                    "image_id"
                ],
                "properties": {
                    "image_id": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "type": "object"
            },
            "ChangePersonalInformationRequestEntry": {
                "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "hobbies"
                ],
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "about_section": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "hobbies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hobby_description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PersonPortfolioExternalDetailsEntry": {
                "required": [
                    "person_id",
                    "portfolio_external_details"
                ],
                "properties": {
                    "person_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "portfolio_external_details": {
                        "$ref": "#\/components\/schemas\/PortfolioExternalDetailsEntry"
                    }
                },
                "type": "object"
            },
            "UpdatePhoneNumberRequestEntry": {
                "properties": {
                    "phone_number": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializablePersonCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePerson"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableTranslatedHobbyCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTranslatedHobby"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializablePerson": {
                "required": [
                    "id",
                    "user_id",
                    "first_name",
                    "last_name",
                    "contact_email",
                    "person_status_enum",
                    "person_language_enum",
                    "timezone",
                    "hobbies"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "person_status_enum": {
                        "type": "string",
                        "enum": [
                            "INVITED",
                            "ACTIVE",
                            "DEACTIVATED"
                        ]
                    },
                    "person_language_enum": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    },
                    "invitation_sent": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "joined_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "deactivated_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "about_section": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_of_birth": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "hobbies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hobby_description": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_public_profile": {
                        "type": "boolean"
                    },
                    "tenant_addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "SerializablePersonPortfolioExternalDetailsCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePersonPortfolioExternalDetails"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableAllowedActions": {
                "required": [
                    "can_create_comment",
                    "can_create_announcement_post",
                    "can_create_community_post",
                    "can_create_event_post",
                    "can_create_poll_post"
                ],
                "properties": {
                    "can_create_comment": {
                        "type": "boolean"
                    },
                    "can_create_announcement_post": {
                        "type": "boolean"
                    },
                    "can_create_community_post": {
                        "type": "boolean"
                    },
                    "can_create_event_post": {
                        "type": "boolean"
                    },
                    "can_create_poll_post": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AddSubscriptionRequestEntry": {
                "required": [
                    "channel_id"
                ],
                "properties": {
                    "channel_id": {
                        "title": "Channel Id.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "RemoveSubscriptionRequestEntry": {
                "required": [
                    "channel_id"
                ],
                "properties": {
                    "channel_id": {
                        "title": "Channel Id.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableUserChannelSubscriptionCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableUserChannelSubscriptionEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "CreateChannelRequestEntry": {
                "required": [
                    "target_id",
                    "image_id",
                    "title_collection",
                    "description_collection"
                ],
                "properties": {
                    "target_id": {
                        "title": "ID of Space (or other HierarchySubject) to which the new Channel belongs.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "image_id": {
                        "title": "ID of image for this channel. Use \/api\/v1\/newsfeed\/commands\/start-image-upload to upload this image first.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "title_collection": {
                        "title": "Translations of \"title\" of the Channel.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                            }
                        ]
                    },
                    "description_collection": {
                        "title": "Translations of \"description\" of the Channel.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "DeleteChannelRequestEntry": {
                "required": [
                    "channel_id"
                ],
                "properties": {
                    "channel_id": {
                        "title": "ID of Channel which should be deleted.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SetChannelAsMandatoryRequestEntry": {
                "required": [
                    "channel_id"
                ],
                "properties": {
                    "channel_id": {
                        "title": "ID of Channel to mark as mandatory.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "UnsetChannelFromMandatoryRequestEntry": {
                "required": [
                    "channel_id"
                ],
                "properties": {
                    "channel_id": {
                        "title": "ID of Channel to remove the mandatory status from.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "UpdateChannelRequestEntry": {
                "required": [
                    "channel_id",
                    "image_id",
                    "title_collection",
                    "description_collection"
                ],
                "properties": {
                    "channel_id": {
                        "title": "ID of Channel to update.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "image_id": {
                        "title": "ID of image for this channel. Use \/api\/v1\/newsfeed\/commands\/start-image-upload to upload this image first.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "title_collection": {
                        "title": "Translations of \"title\" of the Channel.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                            }
                        ]
                    },
                    "description_collection": {
                        "title": "Translations of \"description\" of the Channel.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableChannelCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableChannel"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "DeleteConversationRequestEntry": {
                "required": [
                    "conversation_id"
                ],
                "properties": {
                    "conversation_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateConversationRequestEntry": {
                "required": [
                    "post_id"
                ],
                "properties": {
                    "post_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    },
                    "images": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/ImageRequestEntryCollection"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableConversationCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableConversation"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableEventDetail": {
                "required": [
                    "event_id",
                    "owner_id",
                    "event_settings"
                ],
                "properties": {
                    "event_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "hierarchy_parent_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "event_settings": {
                        "$ref": "#\/components\/schemas\/SerializableEventSettings"
                    }
                },
                "type": "object"
            },
            "SerializableEventParticipantCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableEventParticipant"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableEventSettings": {
                "required": [
                    "event_location",
                    "start_at",
                    "end_at",
                    "is_capacity_visible"
                ],
                "properties": {
                    "event_location": {
                        "$ref": "#\/components\/schemas\/SerializableEventLocation"
                    },
                    "start_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "end_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "price": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableMoney"
                            }
                        ]
                    },
                    "is_capacity_visible": {
                        "type": "boolean"
                    },
                    "capacity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "repeat_options": {
                        "type": "string",
                        "enum": [
                            "EVERY_DAY",
                            "EVERY_WEEK",
                            "EVERY_TWO_WEEK",
                            "EVERY_MONTH",
                            "EVERY_YEAR",
                            null
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableEventForParticipantCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableEventForParticipant"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "ChangeEventSettingsRequestBody": {
                "required": [
                    "event_id",
                    "event_settings"
                ],
                "properties": {
                    "event_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "event_settings": {
                        "$ref": "#\/components\/schemas\/EventSettingsRequestBody"
                    }
                },
                "type": "object"
            },
            "JoinEventRequestBody": {
                "required": [
                    "event_id",
                    "user_id"
                ],
                "properties": {
                    "event_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "UnJoinEventRequestBody": {
                "required": [
                    "user_id",
                    "event_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "event_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "StartImageUploadRequestBody3": {
                "required": [
                    "name",
                    "extension",
                    "content_type",
                    "content_md5",
                    "content_length"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[ a-zA-Z0-9_-]+"
                    },
                    "extension": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-zA-Z0-9]+"
                    },
                    "content_type": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-z]+\/.*",
                        "enum": [
                            "image\/jpeg",
                            "image\/png",
                            "image\/webp"
                        ]
                    },
                    "content_md5": {
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 32,
                        "pattern": "[0-9a-f]{32}"
                    },
                    "content_length": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableImageUploadEntry3": {
                "required": [
                    "id",
                    "file_id",
                    "upload_url"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "file_id": {
                        "type": "string"
                    },
                    "upload_url": {
                        "type": "string"
                    },
                    "public_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AddLikeSubjectRequestEntry": {
                "required": [
                    "subject_id",
                    "type"
                ],
                "properties": {
                    "subject_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "POST",
                            "CONVERSATION"
                        ]
                    }
                },
                "type": "object"
            },
            "UnlikeSubjectRequestEntry": {
                "required": [
                    "subject_id",
                    "type"
                ],
                "properties": {
                    "subject_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "POST",
                            "CONVERSATION"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableLikedSubject": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "likes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableLike"
                        }
                    }
                },
                "type": "object"
            },
            "ChangeNotificationSettingsRequestEntry": {
                "required": [
                    "id",
                    "unsubscribed_managers"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "unsubscribed_managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableNotificationSettings2": {
                "required": [
                    "id",
                    "managers"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableManagers2"
                        }
                    }
                },
                "type": "object"
            },
            "AddPollAnswerRequestEntry": {
                "required": [
                    "poll_id",
                    "answer"
                ],
                "properties": {
                    "poll_id": {
                        "type": "string"
                    },
                    "answer": {
                        "$ref": "#\/components\/schemas\/PollAnswerRequestEntry"
                    }
                },
                "type": "object"
            },
            "AddUserAnswerToPollRequestEntry": {
                "required": [
                    "poll_id",
                    "answer"
                ],
                "properties": {
                    "poll_id": {
                        "type": "string"
                    },
                    "answer": {
                        "$ref": "#\/components\/schemas\/PollAnswerRequestEntry"
                    }
                },
                "type": "object"
            },
            "ChangePollSettingsRequestEntry": {
                "required": [
                    "poll_id",
                    "end_at",
                    "is_result_public_on",
                    "is_multiple_answers_on",
                    "is_users_answers_on",
                    "target"
                ],
                "properties": {
                    "poll_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "end_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "is_result_public_on": {
                        "type": "boolean"
                    },
                    "is_multiple_answers_on": {
                        "type": "boolean"
                    },
                    "is_users_answers_on": {
                        "type": "boolean"
                    },
                    "target": {
                        "$ref": "#\/components\/schemas\/PollTargetRequestEntry"
                    }
                },
                "type": "object"
            },
            "RemovePollAnswerRequestEntry": {
                "required": [
                    "poll_id",
                    "poll_answer_id"
                ],
                "properties": {
                    "poll_id": {
                        "type": "string"
                    },
                    "poll_answer_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VoteForPollAnswersRequestEntry": {
                "required": [
                    "poll_id",
                    "poll_answer_ids",
                    "user_id"
                ],
                "properties": {
                    "poll_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "poll_answer_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializablePoll": {
                "required": [
                    "poll_id",
                    "author_id",
                    "data",
                    "settings"
                ],
                "properties": {
                    "poll_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "hierarchy_parent_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/SerializablePollData"
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/SerializablePollSettings"
                    }
                },
                "type": "object"
            },
            "SerializablePollSettings": {
                "required": [
                    "target_id",
                    "end_at",
                    "is_result_public_on",
                    "is_multiple_answers_on",
                    "is_users_answers_on"
                ],
                "properties": {
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "end_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "is_result_public_on": {
                        "type": "boolean"
                    },
                    "is_multiple_answers_on": {
                        "type": "boolean"
                    },
                    "is_users_answers_on": {
                        "type": "boolean"
                    },
                    "roles": {
                        "$ref": "#\/components\/schemas\/SerializableRoleTypeCollection"
                    }
                },
                "type": "object"
            },
            "SerializablePollVotes": {
                "required": [
                    "poll_id",
                    "author_id",
                    "author"
                ],
                "properties": {
                    "poll_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author": {
                        "$ref": "#\/components\/schemas\/SerializableAuthor"
                    },
                    "answers": {
                        "$ref": "#\/components\/schemas\/SerializableAnswersCollection"
                    }
                },
                "type": "object"
            },
            "ChangePostDataRequestEntry": {
                "required": [
                    "post_id",
                    "data"
                ],
                "properties": {
                    "post_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PostDataRequestEntry"
                    }
                },
                "type": "object"
            },
            "ChangePostStateRequestEntry": {
                "required": [
                    "post_id",
                    "state"
                ],
                "properties": {
                    "post_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "PUBLISHED",
                            "SCHEDULED",
                            "DRAFT",
                            "REMOVED"
                        ]
                    }
                },
                "type": "object"
            },
            "ChangePostTargetRequestEntry": {
                "required": [
                    "post_id",
                    "target"
                ],
                "properties": {
                    "post_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target": {
                        "$ref": "#\/components\/schemas\/PostTargetRequestEntry"
                    }
                },
                "type": "object"
            },
            "CreatePostRequestEntry": {
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "COMMUNITY",
                            "ANNOUNCEMENT",
                            "EVENT",
                            "POLL"
                        ]
                    },
                    "announcement_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreateAnnouncementParametersRequestEntry"
                            }
                        ]
                    },
                    "community_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreateCommunityPostParametersRequestEntry"
                            }
                        ]
                    },
                    "poll_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/StartCreatePollPostProcessParametersRequestEntry"
                            }
                        ]
                    },
                    "event_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/StartCreateEventPostProcessParametersRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "PinPostRequestEntry": {
                "required": [
                    "post_id",
                    "pin_settings"
                ],
                "properties": {
                    "post_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "pin_settings": {
                        "$ref": "#\/components\/schemas\/PostPinSettingsRequestEntry"
                    }
                },
                "type": "object"
            },
            "UnPinPostRequestEntry": {
                "required": [
                    "post_id"
                ],
                "properties": {
                    "post_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializablePostInSpaceCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePostInSpaceDetails"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializablePostDetails": {
                "required": [
                    "id",
                    "type",
                    "total_conversations",
                    "total_likes"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "COMMUNITY",
                            "ANNOUNCEMENT",
                            "EVENT",
                            "POLL"
                        ]
                    },
                    "event_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "poll_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "general_post_data_entry": {
                        "$ref": "#\/components\/schemas\/SerializableGeneralPostDataEntry"
                    },
                    "total_conversations": {
                        "type": "integer"
                    },
                    "total_likes": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializablePostsCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePostDetails"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "ChangeReportedContentStatusRequestEntry": {
                "required": [
                    "id",
                    "status"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "NEW",
                            "REVIEWED",
                            "REMOVED"
                        ]
                    }
                },
                "type": "object"
            },
            "ReportContentRequestEntry": {
                "required": [
                    "post_id",
                    "category"
                ],
                "properties": {
                    "post_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "OFFENSIVE",
                            "VIOLENT_OR_PROHIBITED",
                            "SEXUALLY_INAPPROPRIATE",
                            "ABUSIVE_COMMENTS"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableReportedContentCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableReportedContent"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableReportedContentCategories": {
                "required": [
                    "categories"
                ],
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableReportedContentCategory"
                        }
                    }
                },
                "type": "object"
            },
            "CreateTagRequestEntry": {
                "required": [
                    "space_id",
                    "title_collection"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title_collection": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    }
                },
                "type": "object"
            },
            "DeleteTagRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "UpdateTagRequestEntry": {
                "required": [
                    "id",
                    "title_collection"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title_collection": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    }
                },
                "type": "object"
            },
            "SerializableTag": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title_collection": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    }
                },
                "type": "object"
            },
            "SerializableTagCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTag"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SetUserNewsfeedChannelPushNotificationsSettingEntry": {
                "required": [
                    "channel_id",
                    "is_turned_on"
                ],
                "properties": {
                    "channel_id": {
                        "title": "Channel Id.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "is_turned_on": {
                        "title": "Value of the notification enabled (true) \/ disabled (false).",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableEventDetail2": {
                "required": [
                    "event_id",
                    "owner_id",
                    "event_settings"
                ],
                "properties": {
                    "event_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "event_settings": {
                        "$ref": "#\/components\/schemas\/SerializableEventSettings2"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableLikeCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableLike2"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "ChangePollSettingsRequestEntry2": {
                "required": [
                    "poll_id",
                    "end_at",
                    "is_result_public_on",
                    "is_multiple_answers_on",
                    "is_users_answers_on",
                    "targets"
                ],
                "properties": {
                    "poll_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "end_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "is_result_public_on": {
                        "type": "boolean"
                    },
                    "is_multiple_answers_on": {
                        "type": "boolean"
                    },
                    "is_users_answers_on": {
                        "type": "boolean"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "SerializablePoll2": {
                "required": [
                    "poll_id",
                    "author_id",
                    "data",
                    "settings"
                ],
                "properties": {
                    "poll_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/SerializablePollData2"
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/SerializablePollSettings2"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ChangePostTargetRequestEntry2": {
                "required": [
                    "post_id",
                    "target"
                ],
                "properties": {
                    "post_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "CreatePostCommandBody": {
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "COMMUNITY",
                            "ANNOUNCEMENT",
                            "EVENT",
                            "POLL"
                        ]
                    },
                    "announcement_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreateAnnouncementParametersRequestEntry2"
                            }
                        ]
                    },
                    "community_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreateCommunityPostParametersRequestEntry2"
                            }
                        ]
                    },
                    "poll_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/StartCreatePollPostProcessParametersRequestEntry2"
                            }
                        ]
                    },
                    "event_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/StartCreateEventPostProcessParametersRequestEntry2"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializablePostDetails2": {
                "required": [
                    "id",
                    "type",
                    "total_conversations",
                    "total_likes"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "COMMUNITY",
                            "ANNOUNCEMENT",
                            "EVENT",
                            "POLL"
                        ]
                    },
                    "event_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "poll_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "general_post_data_entry": {
                        "$ref": "#\/components\/schemas\/SerializableGeneralPostDataEntry2"
                    },
                    "total_conversations": {
                        "type": "integer"
                    },
                    "total_likes": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CreatePostInChannelCommandBody": {
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "COMMUNITY",
                            "ANNOUNCEMENT",
                            "EVENT",
                            "POLL"
                        ]
                    },
                    "announcement_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreateAnnouncementParametersRequestEntry3"
                            }
                        ]
                    },
                    "community_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreateCommunityPostParametersRequestEntry3"
                            }
                        ]
                    },
                    "poll_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreatePollPostProcessParametersRequestEntry"
                            }
                        ]
                    },
                    "event_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreateEventPostProcessParametersRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "CreatePostInTargetsCommandBody": {
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "COMMUNITY",
                            "ANNOUNCEMENT",
                            "EVENT",
                            "POLL"
                        ]
                    },
                    "announcement_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreateAnnouncementParametersRequestEntry4"
                            }
                        ]
                    },
                    "community_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreateCommunityPostParametersRequestEntry4"
                            }
                        ]
                    },
                    "poll_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreatePollPostProcessParametersRequestEntry2"
                            }
                        ]
                    },
                    "event_post_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CreateEventPostProcessParametersRequestEntry2"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "ChangePasswordRequestEntry": {
                "required": [
                    "email",
                    "old_password",
                    "new_password"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "old_password": {
                        "type": "string"
                    },
                    "new_password": {
                        "type": "string",
                        "maxLength": 120,
                        "minLength": 10
                    }
                },
                "type": "object"
            },
            "SerializableSuccessResponseEntry": {
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableAuthenticationTokenResponseEntry": {
                "properties": {
                    "token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ConfirmRegistrationRequestEntry": {
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableGenerateTotpCodeSuccessResponseEntry": {
                "properties": {
                    "qr_payload": {
                        "type": "string"
                    },
                    "payload_params": {
                        "$ref": "#\/components\/schemas\/SerializableGenerateTotpCodeSuccessPayloadParamsEntry"
                    }
                },
                "type": "object"
            },
            "SerializableGenerateTotpCodeFailedResponseEntry": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "error_code": {
                        "type": "string",
                        "enum": [
                            "totp_not_available",
                            "totp_already_enabled",
                            "totp_mismatch",
                            "recovery_code_mismatch"
                        ]
                    }
                },
                "type": "object"
            },
            "LoginRequestEntry": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "totp_code": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableLoginFailedResponseEntry": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "login_failure_code": {
                        "type": "string",
                        "enum": [
                            "invalid_authentication_values",
                            "account_not_confirmed",
                            "login_attempts_exceeded",
                            "totp_verification_failed"
                        ]
                    }
                },
                "type": "object"
            },
            "RecoverFromTotpRequestEntry": {
                "required": [
                    "email",
                    "recovery_code"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "recovery_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableTotpRecoverResponseEntry": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableTotpRecoverFailedResponseEntry": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "error_code": {
                        "type": "string",
                        "enum": [
                            "totp_not_available",
                            "totp_already_enabled",
                            "totp_mismatch",
                            "recovery_code_mismatch"
                        ]
                    }
                },
                "type": "object"
            },
            "RegenerateConfirmationCodeRequestEntry": {
                "required": [
                    "email",
                    "language"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    },
                    "invitation_code": {
                        "type": "string",
                        "nullable": true
                    },
                    "app_group_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableRegenerateConfirmationCodeResponseEntry": {
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegisterRequestEntry": {
                "required": [
                    "email",
                    "password",
                    "language"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 120,
                        "minLength": 10
                    },
                    "first_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    },
                    "invitation_code": {
                        "type": "string",
                        "nullable": true
                    },
                    "app_group_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RemoveTotpRequestEntry": {
                "required": [
                    "totp_code"
                ],
                "properties": {
                    "totp_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableTotpRemovalResponseEntry": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableTotpRemovalFailedResponseEntry": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "error_code": {
                        "type": "string",
                        "enum": [
                            "totp_not_available",
                            "totp_already_enabled",
                            "totp_mismatch",
                            "recovery_code_mismatch"
                        ]
                    }
                },
                "type": "object"
            },
            "RequestPasswordResetRequestEntry": {
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "app_group_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ResetPasswordRequestEntry": {
                "required": [
                    "email",
                    "code",
                    "new_password"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "code": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "new_password": {
                        "type": "string",
                        "maxLength": 120,
                        "minLength": 10
                    }
                },
                "type": "object"
            },
            "ValidateTotpCodeRequestEntry": {
                "required": [
                    "totp_code"
                ],
                "properties": {
                    "totp_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableTotpValidationResponseEntry": {
                "properties": {
                    "recovery_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableTotpValidationFailedResponseEntry": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "error_code": {
                        "type": "string",
                        "enum": [
                            "totp_not_available",
                            "totp_already_enabled",
                            "totp_mismatch",
                            "recovery_code_mismatch"
                        ]
                    }
                },
                "type": "object"
            },
            "ConfirmRegistrationRequestEntry2": {
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableConfirmRegistrationSucceededResponseEntry": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "authentication_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableConfirmRegistrationFailedResponseEntry": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string",
                        "enum": [
                            "USER_DEACTIVATED",
                            "USER_NOT_UNCONFIRMED",
                            "CODE_NOT_FOUND",
                            "CODE_EXPIRED"
                        ]
                    }
                },
                "type": "object"
            },
            "RegisterRequestEntry2": {
                "required": [
                    "email",
                    "password",
                    "language"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 120,
                        "minLength": 10
                    },
                    "first_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    },
                    "invitation_code": {
                        "type": "string",
                        "nullable": true
                    },
                    "app_group_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableRegistrationSuccessResponseEntry": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "confirmation_required": {
                        "title": "If true then the user needs to perform the email confirmation step.",
                        "description": "Otherwise false: the user was automatically confirmed.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableRegistrationFailureResponseEntry": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateConfigurationRequestBody": {
                "required": [
                    "building_id",
                    "configuration"
                ],
                "properties": {
                    "building_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "configuration": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ConfigurationEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "app_setup_occurred": {
                        "type": "boolean"
                    },
                    "configuration": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "CheckInEmailRequestBody": {
                "required": [
                    "building_id",
                    "email"
                ],
                "properties": {
                    "building_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CheckInManuallyRequestBody": {
                "required": [
                    "building_id",
                    "email",
                    "first_name",
                    "last_name"
                ],
                "properties": {
                    "building_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "host_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CheckInQrRequestBody": {
                "required": [
                    "visit_id",
                    "building_id"
                ],
                "properties": {
                    "visit_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "building_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableHostVisitorsEntryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableHostVisitorsEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableVisit": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "email": {
                        "type": "string"
                    },
                    "host_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "building_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "end_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "verified_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "check_in_time": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "check_out_time": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "status": {
                        "type": "string"
                    },
                    "section_status": {
                        "type": "string"
                    },
                    "visitor_comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "concierge_comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "access_card": {
                        "type": "string",
                        "nullable": true
                    },
                    "company_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "host_first_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "host_last_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "CreateVisitRequestBody": {
                "required": [
                    "building_id",
                    "host_id",
                    "visits"
                ],
                "properties": {
                    "building_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "host_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "company_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "visits": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/VisitRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "CreateVisitResponseEntry": {
                "properties": {
                    "request_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "command_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "process_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "record_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableBuildingVisitCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableVisitor"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "UpdateVisitRequestBody": {
                "required": [
                    "building_id",
                    "email",
                    "first_name",
                    "last_name",
                    "status"
                ],
                "properties": {
                    "building_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "company_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "host_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "start_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "end_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "verified_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "check_in_time": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "check_out_time": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "status": {
                        "type": "string"
                    },
                    "visitor_comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "concierge_comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "access_card": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableAmenityEntryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAmenityEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableAmenityBookingAdmin": {
                "required": [
                    "id",
                    "booking_vendor",
                    "customer",
                    "amenity",
                    "reservation_details",
                    "booking_status",
                    "cancellable_by_customer"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "booking_vendor": {
                        "$ref": "#\/components\/schemas\/SerializableBookingVendor"
                    },
                    "customer": {
                        "$ref": "#\/components\/schemas\/SerializablePerson2"
                    },
                    "booked_by_user": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializablePerson2"
                            }
                        ]
                    },
                    "amenity": {
                        "$ref": "#\/components\/schemas\/SerializableAmenityEntry"
                    },
                    "reservation_details": {
                        "$ref": "#\/components\/schemas\/SerializableReservationDetailsAdminEntry"
                    },
                    "booking_status": {
                        "type": "string",
                        "enum": [
                            "DRAFT",
                            "SUBMITTED",
                            "CANCELLED"
                        ]
                    },
                    "cancellable_by_customer": {
                        "type": "boolean"
                    },
                    "submitted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableAmenityBooking": {
                "required": [
                    "id",
                    "booking_vendor",
                    "customer",
                    "amenity",
                    "reservation_details",
                    "booking_status",
                    "cancellable_by_customer"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "booking_vendor": {
                        "$ref": "#\/components\/schemas\/SerializableBookingVendor"
                    },
                    "customer": {
                        "$ref": "#\/components\/schemas\/SerializablePerson2"
                    },
                    "booked_by_user": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializablePerson2"
                            }
                        ]
                    },
                    "amenity": {
                        "$ref": "#\/components\/schemas\/SerializableAmenityEntry"
                    },
                    "reservation_details": {
                        "$ref": "#\/components\/schemas\/SerializableReservationDetailsEntry"
                    },
                    "booking_status": {
                        "type": "string",
                        "enum": [
                            "DRAFT",
                            "SUBMITTED",
                            "CANCELLED"
                        ]
                    },
                    "cancellable_by_customer": {
                        "type": "boolean"
                    },
                    "submitted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableAmenityBookingAdminCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAmenityBookingAdmin"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableAmenityBookingCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAmenityBooking"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableCalendarReservationsEntry": {
                "required": [
                    "settings",
                    "available_times"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/SerializableCalendarReservationsSettingsEntry"
                    },
                    "available_times": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableDateTimeIntervalEntry2"
                        }
                    }
                },
                "type": "object"
            },
            "UpdateCalendarReservationsRequestEntry": {
                "required": [
                    "id",
                    "settings"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/SerializableCalendarReservationsSettingsEntry2"
                    }
                },
                "type": "object"
            },
            "CancelAmenityBookingRequestEntry": {
                "required": [
                    "amenity_booking_id"
                ],
                "properties": {
                    "amenity_booking_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ChangeAmenityPromotedRequestEntry": {
                "required": [
                    "amenity_id",
                    "is_promoted"
                ],
                "properties": {
                    "amenity_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "is_promoted": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChangeAmenityStatusRequestEntry": {
                "required": [
                    "amenity_id",
                    "amenity_status"
                ],
                "properties": {
                    "amenity_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "amenity_status": {
                        "type": "string",
                        "enum": [
                            "live",
                            "suspended"
                        ]
                    }
                },
                "type": "object"
            },
            "ChangePrivateNoteForAmenityBookingRequestEntry": {
                "required": [
                    "amenity_booking_id"
                ],
                "properties": {
                    "amenity_booking_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "private_note": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ChangeServiceRequestEntry": {
                "required": [
                    "id",
                    "title",
                    "description",
                    "images",
                    "category",
                    "audience",
                    "action_button",
                    "exclusive"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "WELLNESS",
                            "HEALTH_CARE",
                            "UTILITIES",
                            "FOOD_AND_DRINKS",
                            "SPORT_AND_FITNESS",
                            "CLEANING",
                            "PARKING",
                            "FREE_TIME",
                            "HOT_DESKS",
                            "MEETING_ROOMS",
                            "SHOPPING",
                            "EMPLOYEE_BENEFITS",
                            "THINGS_TO_DO"
                        ]
                    },
                    "audience": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "action_button": {
                        "$ref": "#\/components\/schemas\/ActionButtonRequestEntry"
                    },
                    "exclusive": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChangeServicePromotedRequestEntry": {
                "required": [
                    "service_id",
                    "is_promoted"
                ],
                "properties": {
                    "service_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "is_promoted": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChangeServiceSectionOfAmenityRequestEntry": {
                "required": [
                    "amenity_id",
                    "service_section_id"
                ],
                "properties": {
                    "amenity_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "service_section_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ChangeServiceSectionPromotedRequestEntry": {
                "required": [
                    "service_section_id",
                    "is_promoted"
                ],
                "properties": {
                    "service_section_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "is_promoted": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChangeServiceSectionStatusRequestEntry": {
                "required": [
                    "service_section_id",
                    "status"
                ],
                "properties": {
                    "service_section_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "live",
                            "suspended"
                        ]
                    }
                },
                "type": "object"
            },
            "ChangeVendorCompanyContactDetailsRequestEntry": {
                "required": [
                    "vendor_id",
                    "company_contact_details"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "company_contact_details": {
                        "$ref": "#\/components\/schemas\/SerializableCompanyDetailsEntry"
                    }
                },
                "type": "object"
            },
            "ChangeVendorPromotedRequestEntry": {
                "required": [
                    "vendor_id",
                    "is_promoted"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "is_promoted": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "CreateAmenityRequestEntry": {
                "required": [
                    "vendor_id",
                    "service_section_id",
                    "title",
                    "description",
                    "images",
                    "after_booking_message",
                    "booking_processor"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "service_section_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "opening_hours_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "after_booking_message": {
                        "type": "string"
                    },
                    "maximum_capacity": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "nullable": true
                    },
                    "availability": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/AvailabilityRequestEntry"
                            }
                        ]
                    },
                    "booking_processor": {
                        "$ref": "#\/components\/schemas\/SerializableBookingProcessorEntry"
                    },
                    "amenity_payment_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/AmenityPaymentDetailsRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "CreateAmenityBookingRequestBody": {
                "required": [
                    "customer_id",
                    "amenity_id",
                    "reservation_details"
                ],
                "properties": {
                    "customer_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "amenity_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "reservation_details": {
                        "$ref": "#\/components\/schemas\/SerializableReservationDetailsEntry"
                    }
                },
                "type": "object"
            },
            "CreateAmenitySectionRequestEntry": {
                "required": [
                    "vendor_id",
                    "targeting",
                    "title",
                    "description",
                    "images",
                    "service_category_id",
                    "internal_note",
                    "amenities"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "targeting": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "service_category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "internal_note": {
                        "type": "string"
                    },
                    "amenities": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AmenityRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "CreateServiceRequestBody": {
                "required": [
                    "vendor_id",
                    "title",
                    "description",
                    "images",
                    "category",
                    "audience",
                    "action_button",
                    "exclusive",
                    "is_send_user_id"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "WELLNESS",
                            "HEALTH_CARE",
                            "UTILITIES",
                            "FOOD_AND_DRINKS",
                            "SPORT_AND_FITNESS",
                            "CLEANING",
                            "PARKING",
                            "FREE_TIME",
                            "HOT_DESKS",
                            "MEETING_ROOMS",
                            "SHOPPING",
                            "EMPLOYEE_BENEFITS",
                            "THINGS_TO_DO"
                        ]
                    },
                    "audience": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "action_button": {
                        "$ref": "#\/components\/schemas\/ActionButtonRequestEntry"
                    },
                    "exclusive": {
                        "type": "boolean"
                    },
                    "is_send_user_id": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "RemoveAmenityRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "cancellation_message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RemoveServiceRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RemoveServiceSectionRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "cancellation_message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateAmenityRequestEntry": {
                "required": [
                    "id",
                    "title",
                    "description",
                    "images",
                    "after_booking_message",
                    "booking_processor"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "opening_hours_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "after_booking_message": {
                        "type": "string"
                    },
                    "maximum_capacity": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "nullable": true
                    },
                    "booking_processor": {
                        "$ref": "#\/components\/schemas\/SerializableBookingProcessorEntry"
                    }
                },
                "type": "object"
            },
            "UpdateAmenityPaymentDetailsRequestEntry": {
                "required": [
                    "amenity_id"
                ],
                "properties": {
                    "amenity_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "amenity_payment_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/AmenityPaymentDetailsRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "UpdateServiceSectionRequestEntry": {
                "required": [
                    "id",
                    "targeting",
                    "title",
                    "description",
                    "images",
                    "service_category_id",
                    "internal_note"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "targeting": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "service_category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "internal_note": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableAvailableServiceCategoryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAvailableServiceCategory"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableServiceCategoryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableServiceCategory"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableImageUploadEntry4": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "upload_url": {
                        "type": "string"
                    },
                    "public_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StartImageUploadRequestBody4": {
                "required": [
                    "owner_id",
                    "name",
                    "content_type",
                    "content_md5",
                    "content_length"
                ],
                "properties": {
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[ a-zA-Z0-9_-]+"
                    },
                    "extension": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-zA-Z0-9]+",
                        "nullable": true
                    },
                    "content_type": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-z]+\/.*",
                        "enum": [
                            "image\/jpeg",
                            "image\/png",
                            "image\/webp"
                        ]
                    },
                    "content_md5": {
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 32,
                        "pattern": "[0-9a-f]{32}"
                    },
                    "content_length": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableInventoryEntry": {
                "required": [
                    "id",
                    "available_item_count"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "available_item_count": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "type": "object"
            },
            "SerializableOpeningHoursCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableOpeningHoursEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "ChangeOpeningHoursRequestBody": {
                "required": [
                    "opening_hours_id",
                    "name",
                    "schedule"
                ],
                "properties": {
                    "opening_hours_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "schedule": {
                        "$ref": "#\/components\/schemas\/SerializableScheduleEntry"
                    }
                },
                "type": "object"
            },
            "CreateOpeningHoursRequestBody": {
                "required": [
                    "vendor_id",
                    "name",
                    "schedule"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "schedule": {
                        "$ref": "#\/components\/schemas\/SerializableScheduleEntry"
                    }
                },
                "type": "object"
            },
            "SerializableServiceCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableService"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableAvailableVendorCategoryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAvailableVendorCategory"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableVendorCategoryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableVendorCategory"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableVendorPublicDataEntryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableVendorPublicDataEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableServiceSectionCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableServiceSection"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableVendor": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "EXTERNAL",
                            "PORTFOLIO",
                            "SPACE",
                            "TENANT"
                        ]
                    },
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "level": {
                        "type": "string"
                    },
                    "category": {
                        "$ref": "#\/components\/schemas\/SerializableVendorCategory"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "SUSPENDED",
                            null
                        ],
                        "nullable": true
                    },
                    "vendor_profile": {
                        "$ref": "#\/components\/schemas\/SerializableVendorProfile"
                    },
                    "individual_contact": {
                        "$ref": "#\/components\/schemas\/SerializableIndividualContactEntry"
                    },
                    "company_contact": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableCompanyContactEntry"
                            }
                        ]
                    },
                    "is_promoted": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableVendorPublicDataEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "SUSPENDED",
                            null
                        ],
                        "nullable": true
                    },
                    "vendor_profile": {
                        "$ref": "#\/components\/schemas\/SerializableVendorProfile"
                    },
                    "category": {
                        "$ref": "#\/components\/schemas\/SerializableVendorCategory"
                    }
                },
                "type": "object"
            },
            "SerializableVendorCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableVendor"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "ChangeVendorIndividualContactDetailsRequestBody": {
                "required": [
                    "vendor_id",
                    "details"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "details": {
                        "$ref": "#\/components\/schemas\/SerializableIndividualDetailsEntry"
                    }
                },
                "type": "object"
            },
            "ChangeVendorCategoryRequestBody": {
                "required": [
                    "vendor_id",
                    "vendor_category_id"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "vendor_category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ChangeVendorCompanyContactAddressRequestBody": {
                "required": [
                    "vendor_id",
                    "address"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableAddressEntry"
                    }
                },
                "type": "object"
            },
            "ChangeVendorIndividualContactAddressRequestBody": {
                "required": [
                    "vendor_id",
                    "address"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableAddressEntry"
                    }
                },
                "type": "object"
            },
            "ChangeVendorStatusRequestBody": {
                "required": [
                    "vendor_id",
                    "vendor_status"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "vendor_status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "SUSPENDED"
                        ]
                    }
                },
                "type": "object"
            },
            "CreateExternalVendorRequestBody": {
                "required": [
                    "owner_id",
                    "category_id",
                    "vendor_profile",
                    "individual_contact"
                ],
                "properties": {
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "SUSPENDED",
                            null
                        ],
                        "nullable": true
                    },
                    "vendor_profile": {
                        "$ref": "#\/components\/schemas\/VendorProfileRequestBody"
                    },
                    "individual_contact": {
                        "$ref": "#\/components\/schemas\/SerializableIndividualContactEntry"
                    },
                    "company_contact": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableCompanyContactEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "RemoveOpeningHoursRequestBody": {
                "required": [
                    "opening_hours_id"
                ],
                "properties": {
                    "opening_hours_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "UpdateVendorProfileRequestEntry": {
                "required": [
                    "vendor_id",
                    "vendor_profile"
                ],
                "properties": {
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "vendor_profile": {
                        "$ref": "#\/components\/schemas\/VendorProfileRequestBody"
                    }
                },
                "type": "object"
            },
            "ChangeServiceRequestEntry2": {
                "required": [
                    "id",
                    "title",
                    "description",
                    "images",
                    "category",
                    "audience",
                    "action_button",
                    "exclusive",
                    "is_send_user_id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "WELLNESS",
                            "HEALTH_CARE",
                            "UTILITIES",
                            "FOOD_AND_DRINKS",
                            "SPORT_AND_FITNESS",
                            "CLEANING",
                            "PARKING",
                            "FREE_TIME",
                            "HOT_DESKS",
                            "MEETING_ROOMS",
                            "SHOPPING",
                            "EMPLOYEE_BENEFITS",
                            "THINGS_TO_DO"
                        ]
                    },
                    "audience": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "action_button": {
                        "$ref": "#\/components\/schemas\/ActionButtonRequestEntry"
                    },
                    "exclusive": {
                        "type": "boolean"
                    },
                    "is_send_user_id": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChangeServiceRequestEntry3": {
                "required": [
                    "id",
                    "vendor_id",
                    "title",
                    "description",
                    "images",
                    "category",
                    "audience",
                    "action_button",
                    "exclusive",
                    "is_send_user_id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "WELLNESS",
                            "HEALTH_CARE",
                            "UTILITIES",
                            "FOOD_AND_DRINKS",
                            "SPORT_AND_FITNESS",
                            "CLEANING",
                            "PARKING",
                            "FREE_TIME",
                            "HOT_DESKS",
                            "MEETING_ROOMS",
                            "SHOPPING",
                            "EMPLOYEE_BENEFITS",
                            "THINGS_TO_DO"
                        ]
                    },
                    "audience": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "action_button": {
                        "$ref": "#\/components\/schemas\/ActionButtonRequestEntry"
                    },
                    "exclusive": {
                        "type": "boolean"
                    },
                    "is_send_user_id": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableStoredEventEntryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableStoredEventEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "StartInternalAccessCredentialRevokingProcessRequestBody": {
                "required": [
                    "access_credential_id"
                ],
                "properties": {
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableSingleAccessCredential": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_group_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "external_access_credential_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "physical_card",
                            "virtual_card"
                        ]
                    },
                    "value": {
                        "type": "string"
                    },
                    "commencement_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "expiry_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "deactivated": {
                        "type": "boolean"
                    },
                    "deactivated_reason": {
                        "type": "string",
                        "enum": [
                            "inactive",
                            "stolen",
                            "lost",
                            "expired",
                            "revoked",
                            "duplicated",
                            null
                        ],
                        "nullable": true
                    },
                    "parking_flag": {
                        "type": "boolean"
                    },
                    "license_plate": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableAccessCredentialForChangedSinceCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAccessCredentialForChangedSince"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableAccessCredentialsChangedSinceWithUnassignedUserSinceCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAccessCredentialsChangedSinceWithUnassignedUserSince"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableAccessCredentialCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableSingleAccessCredential"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "ActivateAccessCredentialRequestBody": {
                "required": [
                    "access_credential_id"
                ],
                "properties": {
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AssignAccessCredentialToUserRequestBody": {
                "required": [
                    "user_id",
                    "access_credential_id",
                    "date_validity"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "date_validity": {
                        "$ref": "#\/components\/schemas\/DateValidity"
                    }
                },
                "type": "object"
            },
            "AssignExternalAccessCredentialRequestBody": {
                "required": [
                    "access_credential_id",
                    "external_access_credential_id"
                ],
                "properties": {
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "external_access_credential_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChangeAccessCredentialDateValidityRequestBody": {
                "required": [
                    "access_credential_id",
                    "access_credential_validity"
                ],
                "properties": {
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "access_credential_validity": {
                        "$ref": "#\/components\/schemas\/DateValidity"
                    }
                },
                "type": "object"
            },
            "ChangeLicensePlateOnAccessCredentialRequestBody": {
                "required": [
                    "access_credential_id"
                ],
                "properties": {
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "license_plate": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CreateAccessCredentialRequestBody": {
                "required": [
                    "user_group_id",
                    "card_number",
                    "date_validity"
                ],
                "properties": {
                    "user_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "user_group_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "card_number": {
                        "type": "string"
                    },
                    "date_validity": {
                        "$ref": "#\/components\/schemas\/DateValidity"
                    }
                },
                "type": "object"
            },
            "DeactivateAccessCredentialRequestBody": {
                "required": [
                    "access_credential_id",
                    "reason"
                ],
                "properties": {
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "reason": {
                        "type": "string",
                        "enum": [
                            "inactive",
                            "stolen",
                            "lost",
                            "expired",
                            "revoked",
                            "duplicated"
                        ]
                    }
                },
                "type": "object"
            },
            "PostDisableParkingOnAccessCredentialRequestBody": {
                "required": [
                    "access_credential_id"
                ],
                "properties": {
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "PostEnableParkingOnAccessCredentialRequestBody": {
                "required": [
                    "access_credential_id"
                ],
                "properties": {
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "UnassignAccessCredentialFromUserRequestBody": {
                "required": [
                    "access_credential_id"
                ],
                "properties": {
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableAccessRuleCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAccessRule"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "ImportAccessRuleRequestBody": {
                "required": [
                    "external_system_id",
                    "external_system_access_rule_id",
                    "spaceflow_owner_id",
                    "name"
                ],
                "properties": {
                    "external_system_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "external_system_access_rule_id": {
                        "type": "string"
                    },
                    "spaceflow_owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LinkAccessRuleToUserGroupRequestBody": {
                "required": [
                    "access_rule_id",
                    "user_group_id"
                ],
                "properties": {
                    "access_rule_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_group_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "PostUnlinkAccessRuleFromUserGroupRequestBody": {
                "required": [
                    "access_rule_id",
                    "user_group_id"
                ],
                "properties": {
                    "access_rule_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_group_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableSpaceSettings2": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "is_turned_on": {
                        "type": "boolean"
                    },
                    "integration_settings": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableIntegrationSettings"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableEndUserSpaceSettings": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "is_turned_on": {
                        "type": "boolean"
                    },
                    "integration_settings": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableEndUserIntegrationSettings"
                        }
                    }
                },
                "type": "object"
            },
            "ActivateSpaceAccessControlSystemRequestEntry": {
                "required": [
                    "space_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ChangeSpaceSettingsRequestEntry2": {
                "required": [
                    "space_id",
                    "card_reader",
                    "is_turned_on"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "card_reader": {
                        "type": "string",
                        "enum": [
                            "HID",
                            "Salto",
                            "NSP",
                            "Accessy"
                        ]
                    },
                    "is_turned_on": {
                        "type": "boolean"
                    },
                    "hid_parameters": {
                        "title": "This value is mandatory if the card_reader = 'HID'!",
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/HIDParametersRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "DeactivateSpaceAccessControlSystemRequestEntry": {
                "required": [
                    "space_id"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableUserGroupCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableUserGroup"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "ChangeCredentialLimitForUserGroupRequestBody": {
                "required": [
                    "user_group_id",
                    "limits"
                ],
                "properties": {
                    "user_group_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "limits": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CredentialLimitRequestField"
                        }
                    }
                },
                "type": "object"
            },
            "ImportUserGroupRequestBody": {
                "required": [
                    "spaceflow_owner_id",
                    "name",
                    "external_user_group_id",
                    "external_system_id"
                ],
                "properties": {
                    "spaceflow_owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "external_user_group_id": {
                        "type": "string"
                    },
                    "external_system_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "LinkUserGroupToTenantRequestBody": {
                "required": [
                    "user_group_id",
                    "tenant_id"
                ],
                "properties": {
                    "user_group_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "tenant_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableCardUsageReportCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableCardUsageReportEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableUser": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_group": {
                        "$ref": "#\/components\/schemas\/SerializableUserGroupForUser"
                    },
                    "spaceflow_user_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "external_user_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "commencement_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "expiry_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "left_company"
                        ]
                    },
                    "deactivated": {
                        "type": "boolean"
                    },
                    "marked_for_export": {
                        "type": "boolean"
                    },
                    "access_credentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAccessCredentialForUser"
                        }
                    },
                    "access_rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAccessRuleForUser"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableUserStatusAndValidityDate": {
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "left_company"
                        ]
                    },
                    "commencement_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "expiry_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableUsersChangedSinceCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableUsersChangedSince"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableUserCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableUser"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "ActivateUserRequestBody": {
                "required": [
                    "user_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "AssignExternalUserIdRequestBody": {
                "required": [
                    "external_user_id"
                ],
                "properties": {
                    "external_user_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChangeUserAccessRulesRequestBody": {
                "required": [
                    "user_id",
                    "access_rules"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "access_rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    }
                },
                "type": "object"
            },
            "ChangeUserDateValidityRequestBody": {
                "required": [
                    "user_id",
                    "date_validity"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "date_validity": {
                        "$ref": "#\/components\/schemas\/DateValidity"
                    }
                },
                "type": "object"
            },
            "ChangeUserPersonalInformationRequestBody": {
                "required": [
                    "user_id",
                    "personal_information"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "personal_information": {
                        "$ref": "#\/components\/schemas\/UserPersonalInformation"
                    }
                },
                "type": "object"
            },
            "CreateUserRequestBody": {
                "required": [
                    "owner_id",
                    "user_group_id",
                    "personal_information",
                    "date_validity"
                ],
                "properties": {
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_group_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "spaceflow_user_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "personal_information": {
                        "$ref": "#\/components\/schemas\/UserPersonalInformation"
                    },
                    "date_validity": {
                        "$ref": "#\/components\/schemas\/DateValidity"
                    }
                },
                "type": "object"
            },
            "DeactivateUserRequestBody2": {
                "required": [
                    "user_id",
                    "reason"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "reason": {
                        "type": "string",
                        "enum": [
                            "inactive",
                            "left_company"
                        ]
                    }
                },
                "type": "object"
            },
            "LinkUserToSFUserRequestBody": {
                "required": [
                    "user_id",
                    "spaceflow_user_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "spaceflow_user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "UnlinkUserFromSFUserRequestBody": {
                "required": [
                    "user_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "VirtualCardActivationProcessEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/UuidInterface"
                    },
                    "user_id": {
                        "$ref": "#\/components\/schemas\/UuidInterface"
                    },
                    "invitation_code": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "StartVirtualCardActivationProcessRequestBody": {
                "required": [
                    "voucher_id"
                ],
                "properties": {
                    "voucher_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableVoucher": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "claimed",
                            "deactivated"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableVoucherCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableVoucher"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "CreateVoucherRequestBody": {
                "required": [
                    "user_id"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "RevokeVirtualCardVoucherRequestBody": {
                "required": [
                    "voucher_id"
                ],
                "properties": {
                    "voucher_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SetUserRolesRequestEntry": {
                "required": [
                    "user_id",
                    "user_roles"
                ],
                "properties": {
                    "user_id": {
                        "description": "Azure AD user email",
                        "type": "string"
                    },
                    "user_roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserRolesRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "CreateAuthenticationForSpaceRequest": {
                "required": [
                    "timezone",
                    "space_id"
                ],
                "properties": {
                    "timezone": {
                        "type": "string"
                    },
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "CreateAuthenticationTokenResponse": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateAuthenticationForPortfolioRequest": {
                "required": [
                    "timezone",
                    "portfolio_id"
                ],
                "properties": {
                    "timezone": {
                        "type": "string"
                    },
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ChangeDashboardsVisibilityRequest": {
                "required": [
                    "portfolio_id",
                    "are_dashboards_visible"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "are_dashboards_visible": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChangeSpecificDashboardVisibilityRequest": {
                "required": [
                    "portfolio_id",
                    "dashboard",
                    "is_visible"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "dashboard": {
                        "type": "string",
                        "enum": [
                            "AMENITIES",
                            "BOOKING",
                            "CHAT",
                            "NEWSFEED",
                            "PORTFOLIO",
                            "PEOPLE",
                            "SPACE",
                            "TENANT",
                            "TICKETS",
                            "VENDORS"
                        ]
                    },
                    "is_visible": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "PortfolioDashboardSettingsResponse": {
                "required": [
                    "portfolio_dashboard_settings_id",
                    "are_dashboards_visible",
                    "is_amenities_dashboard_visible",
                    "is_booking_dashboard_visible",
                    "is_chat_dashboard_visible",
                    "is_newsfeed_dashboard_visible",
                    "is_portfolio_dashboard_visible",
                    "is_people_dashboard_visible",
                    "is_space_dashboard_visible",
                    "is_tenant_dashboard_visible",
                    "is_tickets_dashboard_visible",
                    "is_vendors_dashboard_visible"
                ],
                "properties": {
                    "portfolio_dashboard_settings_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "are_dashboards_visible": {
                        "type": "boolean"
                    },
                    "is_amenities_dashboard_visible": {
                        "type": "boolean"
                    },
                    "is_booking_dashboard_visible": {
                        "type": "boolean"
                    },
                    "is_chat_dashboard_visible": {
                        "type": "boolean"
                    },
                    "is_newsfeed_dashboard_visible": {
                        "type": "boolean"
                    },
                    "is_portfolio_dashboard_visible": {
                        "type": "boolean"
                    },
                    "is_people_dashboard_visible": {
                        "type": "boolean"
                    },
                    "is_space_dashboard_visible": {
                        "type": "boolean"
                    },
                    "is_tenant_dashboard_visible": {
                        "type": "boolean"
                    },
                    "is_tickets_dashboard_visible": {
                        "type": "boolean"
                    },
                    "is_vendors_dashboard_visible": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChangeWebhookRequestBody": {
                "required": [
                    "webhook_id",
                    "types",
                    "status",
                    "target_url",
                    "name",
                    "secret"
                ],
                "properties": {
                    "webhook_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "TICKETING__TICKET_CREATED",
                                "TICKETING__TICKET_CANCELED",
                                "TICKETING__COMMENT_TO_TICKET_ADDED",
                                "TICKETING__TICKET_RATED",
                                "VENDORS__AMENITY_BOOKING_SUBMITTED",
                                "VENDORS__SUBMITTED_AMENITY_BOOKING_CANCELED",
                                "VENDORS__AMENITY_BOOKING_SUBMITTED_DATE_CHANGED",
                                "PEOPLE__PERSON_PERSONAL_INFORMATION_CHANGED",
                                "PEOPLE__USER_ACTIVATED",
                                "PEOPLE__USER_DEACTIVATED",
                                "SECURITY_MANAGEMENT__ROLE_ADDED_TO_USER",
                                "SECURITY_MANAGEMENT__ROLE_REMOVED_FROM_USER"
                            ]
                        },
                        "minItems": 1
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "DEACTIVATED"
                        ]
                    },
                    "target_url": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateWebhookRequestEntry": {
                "required": [
                    "space_id",
                    "types",
                    "status",
                    "target_url",
                    "name",
                    "secret"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "TICKETING__TICKET_CREATED",
                                "TICKETING__TICKET_CANCELED",
                                "TICKETING__COMMENT_TO_TICKET_ADDED",
                                "TICKETING__TICKET_RATED",
                                "VENDORS__AMENITY_BOOKING_SUBMITTED",
                                "VENDORS__SUBMITTED_AMENITY_BOOKING_CANCELED",
                                "VENDORS__AMENITY_BOOKING_SUBMITTED_DATE_CHANGED",
                                "PEOPLE__PERSON_PERSONAL_INFORMATION_CHANGED",
                                "PEOPLE__USER_ACTIVATED",
                                "PEOPLE__USER_DEACTIVATED",
                                "SECURITY_MANAGEMENT__ROLE_ADDED_TO_USER",
                                "SECURITY_MANAGEMENT__ROLE_REMOVED_FROM_USER"
                            ]
                        },
                        "minItems": 1
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "DEACTIVATED"
                        ]
                    },
                    "target_url": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RemoveWebhookRequestBody": {
                "required": [
                    "webhook_id"
                ],
                "properties": {
                    "webhook_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableWebhookEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "TICKETING__TICKET_CREATED",
                                "TICKETING__TICKET_CANCELED",
                                "TICKETING__COMMENT_TO_TICKET_ADDED",
                                "TICKETING__TICKET_RATED",
                                "VENDORS__AMENITY_BOOKING_SUBMITTED",
                                "VENDORS__SUBMITTED_AMENITY_BOOKING_CANCELED",
                                "VENDORS__AMENITY_BOOKING_SUBMITTED_DATE_CHANGED",
                                "PEOPLE__PERSON_PERSONAL_INFORMATION_CHANGED",
                                "PEOPLE__USER_ACTIVATED",
                                "PEOPLE__USER_DEACTIVATED",
                                "SECURITY_MANAGEMENT__ROLE_ADDED_TO_USER",
                                "SECURITY_MANAGEMENT__ROLE_REMOVED_FROM_USER"
                            ]
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "DEACTIVATED"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "target_url": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableWebhookCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableWebhookEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "CreateCategoryRequestEntry": {
                "required": [
                    "space_id",
                    "name"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    }
                },
                "type": "object"
            },
            "DeleteCategoryRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "UpdateCategoryRequestEntry3": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    }
                },
                "type": "object"
            },
            "SerializableCategoryEntryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableCategoryEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableCategoryEntry": {
                "properties": {
                    "id": {
                        "title": "Category id.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "name": {
                        "title": "Category name.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateDocumentRequestEntry": {
                "required": [
                    "space_id",
                    "tenant_ids",
                    "file_upload_id",
                    "category_id",
                    "title"
                ],
                "properties": {
                    "space_id": {
                        "title": "Space id related to the document.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "tenant_ids": {
                        "title": "The list of tenant ids who has access to the document.",
                        "description": "To provide the access to all tenants from the space use target_space_id and you can leave here empty array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "file_upload_id": {
                        "title": "Id of the document file.",
                        "description": "record_id of the file that was uploaded by \/api\/v1\/documents\/file-uploads\/commands\/start.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "category_id": {
                        "title": "Id of the category.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "title": {
                        "title": "Title of the document.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                            }
                        ]
                    },
                    "description": {
                        "title": "Description of the document.",
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                            }
                        ]
                    },
                    "target_space_id": {
                        "title": "Space target for the document.",
                        "description": "Fill it with document space id if you need to add access to the document for all users related to the space.",
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "DeleteDocumentRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "title": "Document id.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "UpdateDocumentRequestEntry": {
                "required": [
                    "id",
                    "tenant_ids",
                    "file_upload_id",
                    "title"
                ],
                "properties": {
                    "id": {
                        "title": "Document id.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "tenant_ids": {
                        "title": "The list of tenant ids who has access to the document.",
                        "description": "To provide the access to all tenants from the space use target_space_id and you can leave here empty array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "file_upload_id": {
                        "title": "Id of the document file.",
                        "description": "record_id of the file that was uploaded by \/api\/v1\/documents\/file-uploads\/commands\/start.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "category_id": {
                        "title": "Id of the category.",
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "title": {
                        "title": "Title of the document.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                            }
                        ]
                    },
                    "description": {
                        "title": "Description of the document.",
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                            }
                        ]
                    },
                    "target_space_id": {
                        "title": "Space target for the document.",
                        "description": "Fill it with document space id if you need to add access to the document for all users related to the space.",
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableDocumentEntry": {
                "properties": {
                    "id": {
                        "title": "Document id.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "space_id": {
                        "title": "Space id.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "tenants": {
                        "title": "Contains information about tenants who have access to the document.",
                        "description": "In case document is available for all users from the space target_space_id will be filled in",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTenantEntry"
                        }
                    },
                    "author": {
                        "title": "Author of the document.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableAuthorEntry"
                            }
                        ]
                    },
                    "file": {
                        "title": "Information about the document file.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableDocumentFileEntry"
                            }
                        ]
                    },
                    "category": {
                        "title": "Information about the category of the document.",
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableCategoryEntry"
                            }
                        ]
                    },
                    "title": {
                        "title": "Title of the document.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                            }
                        ]
                    },
                    "description": {
                        "title": "Description of the document.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                            }
                        ]
                    },
                    "target_space_id": {
                        "title": "Target space id.",
                        "description": "If contains document space id all users of the space has access to the document",
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "created_at": {
                        "title": "Time when the document was created.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableDocumentEntryCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableDocumentEntry"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "StartFileUploadRequestEntry": {
                "required": [
                    "space_id",
                    "name",
                    "extension",
                    "content_type",
                    "content_md5",
                    "content_length"
                ],
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-zA-Z0-9_-]+"
                    },
                    "extension": {
                        "type": "string",
                        "enum": [
                            "jpg",
                            "jpeg",
                            "png",
                            "tif",
                            "tiff",
                            "svg",
                            "gif",
                            "avi",
                            "mov",
                            "mp4",
                            "mpeg",
                            "zip",
                            "rar",
                            "txt",
                            "pdf",
                            "doc",
                            "docx",
                            "csv",
                            "xls",
                            "xlsx",
                            "ppt",
                            "pptx"
                        ]
                    },
                    "content_type": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-z]+\/.*",
                        "enum": [
                            "image\/jpeg",
                            "image\/png",
                            "image\/webp",
                            "image\/tiff",
                            "image\/x-tiff",
                            "image\/gif",
                            "image\/svg+xml",
                            "video\/x-msvideo",
                            "video\/mp4",
                            "video\/mpeg",
                            "video\/quicktime",
                            "text\/plain",
                            "application\/pdf",
                            "application\/doc",
                            "application\/ms-doc",
                            "application\/msword",
                            "application\/vnd.openxmlformats-officedocument.wordprocessingml.document",
                            "application\/excel",
                            "application\/vnd.ms-excel",
                            "application\/x-excel",
                            "application\/x-msexcel",
                            "application\/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                            "application\/mspowerpoint",
                            "application\/powerpoint",
                            "application\/vnd.ms-powerpoint",
                            "application\/x-mspowerpoint",
                            "application\/vnd.openxmlformats-officedocument.presentationml.presentation",
                            "application\/octet-stream",
                            "application\/zip",
                            "application\/x-zip-compressed",
                            "multipart\/x-zip",
                            "application\/x-rar-compressed",
                            "application\/vnd.rar"
                        ]
                    },
                    "content_md5": {
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 32,
                        "pattern": "[0-9a-f]{32}"
                    },
                    "content_length": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableFileDownloadUrlEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "download_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableFileUploadUrlEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "upload_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UploadImageForChatRequestBody": {
                "required": [
                    "name",
                    "extension",
                    "content_type",
                    "content_md5",
                    "content_length"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-zA-Z0-9_-]+"
                    },
                    "extension": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-zA-Z0-9]+"
                    },
                    "content_type": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "[a-z]+\/.*",
                        "enum": [
                            "image\/jpeg",
                            "image\/png",
                            "image\/webp"
                        ]
                    },
                    "content_md5": {
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 32,
                        "pattern": "[0-9a-f]{32}"
                    },
                    "content_length": {
                        "type": "integer",
                        "maximum": 52428800,
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "SerializableChatImageUploadEntry": {
                "properties": {
                    "file_id": {
                        "$ref": "#\/components\/schemas\/UuidInterface"
                    },
                    "public_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "upload_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableUserChatInformationResponse": {
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ViolationEntry": {
                "properties": {
                    "code": {
                        "title": "Unique code for this particular violation type.",
                        "type": "string"
                    },
                    "message": {
                        "title": "Compiled message. Ready to display to user - but most likely in incorrect language.",
                        "type": "string"
                    },
                    "path": {
                        "title": "Path to field which caused the violation.",
                        "type": "string"
                    },
                    "message_parameters": {
                        "title": "The parameters for message in case you will translate on frontend.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "message_template": {
                        "title": "The original template for the message. May be used as translation key.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BusinessRuleViolatedEntry": {
                "properties": {
                    "violation_rule_id": {
                        "title": "Uuid from the domain error catalog which describes the root cause in more detail.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "message": {
                        "title": "String in english describing the root cause in simple terms - possible to display to user?",
                        "type": "string"
                    },
                    "violator_id": {
                        "title": "Uuid in the command which caused the violation\n - Example:\n     Command contains a User ID. This user belongs to UserGroup. This UserGroup is linked to a Space. This Space\n     Does not have desired feature enabled. The violator_id in this case is the User ID - which was given in the request. Not the Space ID behind the curtains.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "uuid": {
                "type": "string",
                "format": "uuid"
            },
            "enum": {},
            "UserPersonalDetailsRequestEntry": {
                "required": [
                    "email",
                    "language"
                ],
                "properties": {
                    "first_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    }
                },
                "type": "object"
            },
            "UserProfileRequestEntry": {
                "required": [
                    "public_profile",
                    "about",
                    "timezone"
                ],
                "properties": {
                    "public_profile": {
                        "type": "boolean"
                    },
                    "about": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializablePublicInvitationEntry": {
                "properties": {
                    "invitation_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "invitation_code": {
                        "type": "string"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableSpaceAccountEntry": {
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "gateway_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "portfolio": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializablePortfolioEntry"
                            }
                        ]
                    },
                    "space": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableSpaceEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableSpaceAccountEntry2": {
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "gateway_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "portfolio": {
                        "$ref": "#\/components\/schemas\/SerializablePortfolioEntry2"
                    },
                    "space": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableSpaceEntry2"
                            }
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "INVITED",
                            "ACTIVE",
                            "DEACTIVATED"
                        ]
                    },
                    "email": {
                        "type": "string"
                    },
                    "roles_total": {
                        "type": "integer"
                    },
                    "roles_in_targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableRoleInTargetEntry"
                        }
                    },
                    "portfolio_and_space_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableCurrentPermission": {
                "properties": {
                    "permission_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableUserWithRole": {
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "details": {
                        "$ref": "#\/components\/schemas\/SerializableUserWithRoleDetails"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableUserRole"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableAssigneeAllowedValue": {
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableAvailableCategory": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableCategory": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "workflow_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "deactivated": {
                        "type": "boolean"
                    },
                    "category_managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                        }
                    },
                    "automatic_assignee": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                            }
                        ]
                    },
                    "automatic_assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableCategoryTemplate": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "workflow_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TicketParameters": {
                "required": [
                    "subject",
                    "description",
                    "attachment"
                ],
                "properties": {
                    "subject": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "attachment": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "assignee": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "priority": {
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            null
                        ],
                        "nullable": true
                    },
                    "due_date": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableLabel": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableManagers": {
                "properties": {
                    "manager_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subscribed": {
                        "type": "boolean"
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableTicketNumberSeries": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "numbering_strategy": {
                        "type": "string",
                        "enum": [
                            "INCREMENTAL_SEQUENCE"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableTicketAvailableAction": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "RECORD_TICKET_REPAIR_COST",
                            "UPDATE_TICKET_REPAIR_COST",
                            "DELETE_TICKET_REPAIR_COST",
                            "CHANGE_TICKET_DUE_DATE",
                            "UNSET_TICKET_DUE_DATE",
                            "REMOVE_TICKET_ASSIGNEE",
                            "REMOVE_TICKET_LABEL",
                            "SET_TICKET_ASSIGNEE",
                            "ADD_TICKET_COMMENT",
                            "ADD_TICKET_INTERNAL_COMMENT",
                            "ADD_TICKET_LABEL",
                            "ARCHIVE_TICKET",
                            "UNARCHIVE_TICKET",
                            "RATE_TICKET",
                            "SUBMIT_TICKET",
                            "CHANGE_TICKET_STATE",
                            "CHANGE_TICKET_PRIORITY",
                            "ADD_TICKET_WATCHER",
                            "REMOVE_TICKET_WATCHER",
                            "CHANGE_TICKET_CATEGORY",
                            "CHANGE_TICKET_TITLE",
                            "CHANGE_TICKET_DESCRIPTION",
                            "NOTIFY_ADMINS_ABOUT_REOPENED_TICKET",
                            "NOTIFY_REPORTER_ABOUT_TICKET_STATUS_CHANGE",
                            "NOTIFY_ADMINS_ABOUT_SUBMITTED_TICKET",
                            "NOTIFY_ADMINS_ABOUT_CANCELLED_TICKET",
                            "NOTIFY_ADMINS_ABOUT_TICKET_RATING",
                            "NOTIFY_REPORTER_ABOUT_TICKET_COMMENT",
                            "NOTIFY_REPORTER_ABOUT_TICKET_COMMENT_V2",
                            "NOTIFY_REPORTER_ABOUT_SUBMITTED_TICKET",
                            "NOTIFY_ADMINS_ABOUT_TICKET_COMMENT",
                            "NOTIFY_ASSIGNEE_ABOUT_TICKET_ASSIGNMENT",
                            "ADD_ONE_TICKET_ASSIGNEE",
                            "REMOVE_ONE_TICKET_ASSIGNEE"
                        ]
                    },
                    "input_parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableActionInputParameter"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableComment": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "ticket_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author": {
                        "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImageEntry"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAttachment"
                        }
                    },
                    "internal": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableSpaceUnitInformationEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableAddressEntry2"
                    },
                    "level_title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    }
                },
                "type": "object"
            },
            "SerializableSpaceInformationEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableSpaceEntrance": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableAddressEntry2"
                    },
                    "levels": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableLevel"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableTicket": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author": {
                        "$ref": "#\/components\/schemas\/SerializablePersonWithPhoneNumberEntry"
                    },
                    "priority": {
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2,
                            3
                        ]
                    },
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "number": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "state_code": {
                        "type": "string"
                    },
                    "watchers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                        }
                    },
                    "due_date": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "assignee": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                            }
                        ]
                    },
                    "assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                        }
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "submitted_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "workflow_process_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "workflow_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImageEntry"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAttachment"
                        }
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableLabel"
                        }
                    },
                    "category_managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                        }
                    },
                    "last_updated_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "is_in_external_system": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableEndUserTicket": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author": {
                        "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                    },
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "number": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "state_code": {
                        "type": "string"
                    },
                    "assignee": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                            }
                        ]
                    },
                    "assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                        }
                    },
                    "submitted_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "workflow_process_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImageEntry"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAttachment"
                        }
                    },
                    "last_updated_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "is_in_external_system": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableTicketRating": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "person": {
                        "$ref": "#\/components\/schemas\/SerializablePersonEntry"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableTicketRepairCost": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "ticket_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "$ref": "#\/components\/schemas\/SerializableMoney"
                    }
                },
                "type": "object"
            },
            "SerializableWorkflow": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableTargetDescriptionEntry": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "subject": {
                        "$ref": "#\/components\/schemas\/SerializableTargetSubjectEntry"
                    },
                    "role": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableTargetRoleEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableTarget": {
                "required": [
                    "target_id"
                ],
                "properties": {
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "role_type": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableLocalizedTextCollection": {
                "required": [
                    "translations"
                ],
                "properties": {
                    "translations": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableLocalizedTextEntry"
                        }
                    }
                },
                "type": "object"
            },
            "PortfolioInternalDetailsRequestEntry": {
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "LIVE",
                            "ON_HOLD",
                            "DEMO",
                            "DATA_SETUP",
                            "TERMINATED",
                            "PRE_LAUNCH"
                        ]
                    },
                    "community_manager_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "business_development_manager_id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PortfolioDetailsRequestEntry": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "company_name": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "company_registration_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AddressRequestEntry": {
                "required": [
                    "street",
                    "city",
                    "zip",
                    "country",
                    "is_company"
                ],
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string"
                    },
                    "is_company": {
                        "type": "boolean"
                    },
                    "company_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PortfolioCustomBrandingRequestEntry": {
                "required": [
                    "brand_name",
                    "icon_image",
                    "dark_mode_primary_color",
                    "light_mode_primary_color"
                ],
                "properties": {
                    "brand_name": {
                        "type": "string"
                    },
                    "icon_image": {
                        "$ref": "#\/components\/schemas\/ImageRequestEntry"
                    },
                    "dark_mode_primary_color": {
                        "type": "string"
                    },
                    "light_mode_primary_color": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CustomWhiteLabelRequestEntry": {
                "required": [
                    "label_name",
                    "image_upload_id",
                    "color_hash",
                    "apple_app_id",
                    "apple_store_id",
                    "google_app_id",
                    "app_group_name"
                ],
                "properties": {
                    "label_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "image_upload_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "color_hash": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "apple_app_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "apple_store_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "google_app_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "app_group_name": {
                        "type": "string",
                        "maxLength": 50
                    }
                },
                "type": "object"
            },
            "SerializablePortfolio": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "company_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "company_registration_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "LIVE",
                            "ON_HOLD",
                            "DEMO",
                            "DATA_SETUP",
                            "TERMINATED",
                            "PRE_LAUNCH"
                        ]
                    },
                    "address": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableSpaceAddress"
                            }
                        ]
                    },
                    "community_manager_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "business_development_manager_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableSpaceAddress": {
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_company": {
                        "type": "boolean"
                    },
                    "company_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableCustomWhiteLabel": {
                "required": [
                    "label_name",
                    "color_hash",
                    "apple_app_id",
                    "apple_store_id",
                    "google_app_id",
                    "app_group_name",
                    "sender_email",
                    "sender_name",
                    "reply_to"
                ],
                "properties": {
                    "label_name": {
                        "type": "string"
                    },
                    "image_upload_entry": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableImageUploadEntry"
                            }
                        ]
                    },
                    "color_hash": {
                        "type": "string"
                    },
                    "apple_app_id": {
                        "type": "string"
                    },
                    "apple_store_id": {
                        "type": "string"
                    },
                    "google_app_id": {
                        "type": "string"
                    },
                    "app_group_name": {
                        "type": "string"
                    },
                    "sender_email": {
                        "type": "string"
                    },
                    "sender_name": {
                        "type": "string"
                    },
                    "reply_to": {
                        "type": "string"
                    },
                    "footer_background_color": {
                        "type": "string",
                        "nullable": true
                    },
                    "footer_legal_address": {
                        "type": "string",
                        "nullable": true
                    },
                    "footer_custom_support_link": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableCustomBranding": {
                "required": [
                    "id",
                    "brand_name",
                    "dark_mode_primary_color",
                    "light_mode_primary_color"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "brand_name": {
                        "type": "string"
                    },
                    "brand_icon": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "dark_mode_primary_color": {
                        "type": "string"
                    },
                    "light_mode_primary_color": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SFDateTime": {
                "type": "string",
                "format": "date-time"
            },
            "AppDetailsRequestEntry": {
                "required": [
                    "name",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512
                    },
                    "header": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/ImageRequestEntry"
                            }
                        ]
                    },
                    "dark_logo": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/ImageRequestEntry"
                            }
                        ]
                    },
                    "light_logo": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/ImageRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SpaceAreaRequestEntry": {
                "required": [
                    "space_area_sqm",
                    "user_potential"
                ],
                "properties": {
                    "space_area_sqm": {
                        "type": "integer",
                        "maximum": 1000000000
                    },
                    "user_potential": {
                        "type": "integer",
                        "maximum": 1000000000
                    }
                },
                "type": "object"
            },
            "SpaceDetailsRequestEntry": {
                "required": [
                    "type",
                    "name"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "OFFICE",
                            "RESIDENCE",
                            "CO_WORKING",
                            "CO_LIVING",
                            "STUDENT_HOUSING",
                            "MULTIPURPOSE"
                        ]
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AddressRequestEntry2": {
                "required": [
                    "street",
                    "city",
                    "zip",
                    "country",
                    "is_company"
                ],
                "properties": {
                    "street": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "zip": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "state": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "is_company": {
                        "type": "boolean"
                    },
                    "company_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SpaceSettingsForChangeRequestEntry": {
                "properties": {
                    "is_comments_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_payments_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_ticketing_system_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_visitor_management_system_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_user_messages_filtering_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_phone_number_required_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_user_engagement_button_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_visitors_allowed_to_use_app_as_end_users_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_ticketing_uploads_allowed": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_document_management_system_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_welcome_screen_on": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SpaceInternalDetailsRequestEntry": {
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "PRE_LAUNCH",
                            "LIVE",
                            "ON_HOLD",
                            "TERMINATED",
                            "DEMO",
                            "DATA_SETUP"
                        ]
                    },
                    "community_manager_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "business_development_manager_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SpaceUnitDetailsRequestEntry": {
                "required": [
                    "name",
                    "order",
                    "description",
                    "images"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "order": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ImageRequestEntry2"
                        }
                    }
                },
                "type": "object"
            },
            "WelcomeScreenRequestEntry": {
                "required": [
                    "title_collection",
                    "description_collection"
                ],
                "properties": {
                    "image": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/ImageRequestEntry2"
                            }
                        ]
                    },
                    "title_collection": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description_collection": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    }
                },
                "type": "object"
            },
            "SerializableDateTimeIntervalEntry": {
                "required": [
                    "start",
                    "end"
                ],
                "properties": {
                    "start": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "end": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "CustomMenuItemRequestEntry": {
                "required": [
                    "title",
                    "order",
                    "custom_menu_icon_id",
                    "type",
                    "call_to_action"
                ],
                "properties": {
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "custom_menu_icon_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "open_external_url"
                        ]
                    },
                    "call_to_action": {
                        "$ref": "#\/components\/schemas\/CallToActionRequestEntry"
                    }
                },
                "type": "object"
            },
            "EntranceRequestEntry": {
                "required": [
                    "name",
                    "is_main",
                    "address",
                    "levels"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/AddressRequestEntry"
                    },
                    "levels": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/LevelDistributionRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "CreateSpaceSettingsRequestEntry": {
                "required": [
                    "is_comments_on",
                    "is_payments_on",
                    "is_ticketing_system_on",
                    "is_visitor_management_system_on",
                    "is_user_messages_filtering_on",
                    "is_phone_number_required_on",
                    "is_user_engagement_button_on",
                    "is_visitors_allowed_to_use_app_as_end_users_on",
                    "is_ticketing_uploads_allowed",
                    "is_document_management_system_on",
                    "is_smart_parcels_on"
                ],
                "properties": {
                    "is_comments_on": {
                        "type": "boolean"
                    },
                    "is_payments_on": {
                        "type": "boolean"
                    },
                    "is_ticketing_system_on": {
                        "type": "boolean"
                    },
                    "is_visitor_management_system_on": {
                        "type": "boolean"
                    },
                    "is_user_messages_filtering_on": {
                        "type": "boolean"
                    },
                    "is_phone_number_required_on": {
                        "type": "boolean"
                    },
                    "is_user_engagement_button_on": {
                        "type": "boolean"
                    },
                    "is_visitors_allowed_to_use_app_as_end_users_on": {
                        "type": "boolean"
                    },
                    "is_ticketing_uploads_allowed": {
                        "type": "boolean"
                    },
                    "is_document_management_system_on": {
                        "type": "boolean"
                    },
                    "is_smart_parcels_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableCustomMenuItem": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "icon": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableCustomMenuIconUrl"
                            }
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "open_external_url"
                        ]
                    },
                    "call_to_action": {
                        "$ref": "#\/components\/schemas\/SerializableCallToAction"
                    }
                },
                "type": "object"
            },
            "SerializableSpace": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "portfolio_id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "PRE_LAUNCH",
                            "LIVE",
                            "ON_HOLD",
                            "TERMINATED",
                            "DEMO",
                            "DATA_SETUP"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "OFFICE",
                            "RESIDENCE",
                            "CO_WORKING",
                            "CO_LIVING",
                            "STUDENT_HOUSING",
                            "MULTIPURPOSE"
                        ]
                    },
                    "community_manager_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "business_development_manager_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Collection": {
                "properties": {},
                "type": "object"
            },
            "SerializableImportantContact": {
                "properties": {
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "important_contact": {
                        "$ref": "#\/components\/schemas\/SerializablePersonEntry2"
                    }
                },
                "type": "object"
            },
            "SerializableImage": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "public_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableSpaceEntrance2": {
                "required": [
                    "is_main"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableSpaceAddress"
                    },
                    "levels": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableLevel2"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableSpaceLevel": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "entrance_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "floor_order": {
                        "type": "integer"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    }
                },
                "type": "object"
            },
            "SpaceUnitsRequestEntryCollection": {
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SpaceUnitRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "CompanyRepresentativeDetailsRequestEntry": {
                "required": [
                    "first_name",
                    "last_name"
                ],
                "properties": {
                    "first_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "identification_card_type": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/IdentificationCardTypeRequestEntry"
                            }
                        ]
                    },
                    "id_card_value": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "address": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/AddressRequestEntry"
                            }
                        ]
                    },
                    "internal_id_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TenantPublicProfileRequestEntry": {
                "required": [
                    "name",
                    "about_us",
                    "web_url"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "about_us": {
                        "type": "string",
                        "maxLength": 512
                    },
                    "web_url": {
                        "type": "string"
                    },
                    "logo": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/ImageRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "TenantInfoDetailsRequestEntry": {
                "required": [
                    "first_name",
                    "last_name"
                ],
                "properties": {
                    "first_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "identification_card_type": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/IdentificationCardTypeRequestEntry"
                            }
                        ]
                    },
                    "id_card_value": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "internal_id_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CompanyInfoDetailsRequestEntry": {
                "required": [
                    "company_name"
                ],
                "properties": {
                    "company_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "company_registration_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "LeaseInformationRequestEntry": {
                "required": [
                    "start_date"
                ],
                "properties": {
                    "start_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "end_date": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "frequency": {
                        "type": "string",
                        "enum": [
                            "MONTHLY",
                            "QUARTERLY",
                            "BI_ANNUALLY",
                            "ANNUALLY",
                            "INDEFINITE",
                            null
                        ],
                        "nullable": true
                    },
                    "rate": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableLeaseMoney"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "TenantSettingsRequestEntry": {
                "properties": {
                    "is_comments_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_payments_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_ticketing_system_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_ticketing_uploads_allowed": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "is_user_engagement_button_on": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "number_of_allowed_people": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CreateTenantRequestEntry": {
                "required": [
                    "space_unit_id_list",
                    "space_id",
                    "details",
                    "status",
                    "settings"
                ],
                "properties": {
                    "space_unit_id_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "space_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "details": {
                        "$ref": "#\/components\/schemas\/TenantDetailsRequestEntry"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "HIDDEN"
                        ]
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/CreateTenantSettingsRequestEntry"
                    },
                    "lease_information": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/LeaseInformationRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableTenantShortExtract": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_unit_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "space_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "view_name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "tenant_type_enum": {
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "COMPANY"
                        ]
                    },
                    "tenant_status_enum": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "HIDDEN"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableIndividualTenantDetails": {
                "required": [
                    "tenant_info_details",
                    "address"
                ],
                "properties": {
                    "tenant_info_details": {
                        "$ref": "#\/components\/schemas\/SerializableTenantInfoDetails"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableSpaceAddress"
                    }
                },
                "type": "object"
            },
            "SerializableCompanyTenantDetails": {
                "required": [
                    "company_info_details",
                    "address",
                    "company_representative_details"
                ],
                "properties": {
                    "company_info_details": {
                        "$ref": "#\/components\/schemas\/SerializableTenantCompanyInfoDetails"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableSpaceAddress"
                    },
                    "company_representative_details": {
                        "$ref": "#\/components\/schemas\/SerializableCompanyRepresentativeDetails"
                    },
                    "tenant_public_profile": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableTenantPublicProfile"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableIndividualTenantDetailsV1": {
                "required": [
                    "address"
                ],
                "properties": {
                    "tenant_info_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableTenantInfoDetails"
                            }
                        ]
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableSpaceAddress"
                    }
                },
                "type": "object"
            },
            "SerializableCompanyTenantDetailsV1": {
                "required": [
                    "company_info_details",
                    "address"
                ],
                "properties": {
                    "company_info_details": {
                        "$ref": "#\/components\/schemas\/SerializableTenantCompanyInfoDetails"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableSpaceAddress"
                    },
                    "company_representative_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableCompanyRepresentativeDetails"
                            }
                        ]
                    },
                    "tenant_public_profile": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableTenantPublicProfile"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableLeaseMoney": {
                "required": [
                    "amount",
                    "currency_code"
                ],
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "currency_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableTenantWithLeaseAndManagers": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_unit_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "space_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "view_name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "tenant_type_enum": {
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "COMPANY"
                        ]
                    },
                    "tenant_status_enum": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "HIDDEN"
                        ]
                    },
                    "lease_details": {
                        "$ref": "#\/components\/schemas\/SerializableBriefTenantLeaseDetails"
                    },
                    "tenant_managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTenantManager"
                        }
                    }
                },
                "type": "object"
            },
            "V2CustomWhiteLabelRequestEntry": {
                "required": [
                    "label_name",
                    "image_upload_id",
                    "color_hash",
                    "apple_app_id",
                    "apple_store_id",
                    "google_app_id",
                    "app_group_name",
                    "sender_email",
                    "sender_name"
                ],
                "properties": {
                    "label_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "image_upload_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "color_hash": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "apple_app_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "apple_store_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "google_app_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "app_group_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "sender_email": {
                        "type": "string"
                    },
                    "sender_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableIndividualTenantDetailsV2": {
                "required": [
                    "address"
                ],
                "properties": {
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableSpaceAddress"
                    }
                },
                "type": "object"
            },
            "SerializableCompanyTenantDetailsV2": {
                "required": [
                    "company_info_details",
                    "address"
                ],
                "properties": {
                    "company_info_details": {
                        "$ref": "#\/components\/schemas\/SerializableTenantCompanyInfoDetails"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableSpaceAddress"
                    },
                    "tenant_public_profile": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableTenantPublicProfile"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "CustomWhiteLabelRequestEntry2": {
                "required": [
                    "label_name",
                    "image_upload_id",
                    "color_hash",
                    "apple_app_id",
                    "apple_store_id",
                    "google_app_id",
                    "app_group_name",
                    "sender_email",
                    "sender_name",
                    "reply_to"
                ],
                "properties": {
                    "label_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "image_upload_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "color_hash": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "apple_app_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "apple_store_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "google_app_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "app_group_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "sender_email": {
                        "type": "string"
                    },
                    "sender_name": {
                        "type": "string"
                    },
                    "reply_to": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CustomWhiteLabelRequestEntry3": {
                "required": [
                    "label_name",
                    "image_upload_id",
                    "color_hash",
                    "apple_app_id",
                    "apple_store_id",
                    "google_app_id",
                    "app_group_name",
                    "sender_email",
                    "sender_name",
                    "reply_to",
                    "footer_background_color",
                    "footer_legal_address",
                    "footer_custom_support_link"
                ],
                "properties": {
                    "label_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "image_upload_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "color_hash": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "apple_app_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "apple_store_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "google_app_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "app_group_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "sender_email": {
                        "type": "string"
                    },
                    "sender_name": {
                        "type": "string"
                    },
                    "reply_to": {
                        "type": "string"
                    },
                    "footer_background_color": {
                        "type": "string"
                    },
                    "footer_legal_address": {
                        "type": "string"
                    },
                    "footer_custom_support_link": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PushNotificationEntry": {
                "required": [
                    "title",
                    "text",
                    "metadata"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/PushNotificationMetadataPairEntry"
                        }
                    }
                },
                "type": "object"
            },
            "MessageData": {
                "required": [
                    "type",
                    "text",
                    "image",
                    "image_size"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "image",
                            "text"
                        ]
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    },
                    "image": {
                        "type": "string",
                        "nullable": true
                    },
                    "image_size": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableEntry": {
                "type": "object"
            },
            "SerializableUserNotificationSettingsEntry": {
                "required": [
                    "notification_type_id",
                    "label",
                    "is_turned_on"
                ],
                "properties": {
                    "notification_type_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "label": {
                        "type": "string"
                    },
                    "is_turned_on": {
                        "type": "boolean"
                    },
                    "subscription_entity_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "DescribeProcessResponseEntry": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PortfolioExternalDetailsEntry": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "internal_id_number": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableTranslatedHobby": {
                "required": [
                    "key",
                    "value"
                ],
                "properties": {
                    "key": {
                        "title": "The actual value of the enum field. Use this value in subsequent requests \/ responses.",
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializablePersonPortfolioExternalDetails": {
                "required": [
                    "person_id",
                    "portfolio_external_details"
                ],
                "properties": {
                    "person_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "portfolio_external_details": {
                        "$ref": "#\/components\/schemas\/SerializablePortfolioExternalDetails"
                    }
                },
                "type": "object"
            },
            "SerializableUserChannelSubscriptionEntry": {
                "properties": {
                    "channel_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableChannel": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title_collection": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description_collection": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "image": {
                        "$ref": "#\/components\/schemas\/SerializableImage2"
                    },
                    "is_mandatory": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ImageRequestEntryCollection": {
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ImageRequestEntry3"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableConversation": {
                "required": [
                    "id",
                    "post_id",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "post_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableAuthor"
                            }
                        ]
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    },
                    "images": {
                        "$ref": "#\/components\/schemas\/SerializableImageListCollection"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableEventParticipant": {
                "required": [
                    "user_id",
                    "id",
                    "first_name",
                    "last_name"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "avatar_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableEventLocation": {
                "properties": {
                    "address": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableAddress"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableMoney": {
                "properties": {
                    "amount": {
                        "type": "integer",
                        "nullable": true
                    },
                    "currency_code": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableEventForParticipant": {
                "required": [
                    "event_id",
                    "post_id",
                    "start_at",
                    "end_at"
                ],
                "properties": {
                    "event_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "post_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "start_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "end_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "repeat_options": {
                        "type": "string",
                        "enum": [
                            "EVERY_DAY",
                            "EVERY_WEEK",
                            "EVERY_TWO_WEEK",
                            "EVERY_MONTH",
                            "EVERY_YEAR",
                            null
                        ],
                        "nullable": true
                    },
                    "price": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableMoney"
                            }
                        ]
                    },
                    "titles": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableLocalizedTextEntry"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImage3"
                        }
                    }
                },
                "type": "object"
            },
            "EventSettingsRequestBody": {
                "required": [
                    "start_date",
                    "end_date",
                    "is_capacity_visible"
                ],
                "properties": {
                    "event_location": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/EventLocationRequestBody"
                            }
                        ]
                    },
                    "repeat_option": {
                        "type": "string",
                        "enum": [
                            "EVERY_DAY",
                            "EVERY_WEEK",
                            "EVERY_TWO_WEEK",
                            "EVERY_MONTH",
                            "EVERY_YEAR",
                            null
                        ],
                        "nullable": true
                    },
                    "start_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "end_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "price": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/EventPriceRequestBody"
                            }
                        ]
                    },
                    "capacity": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "nullable": true
                    },
                    "is_capacity_visible": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableLike": {
                "required": [
                    "author_id",
                    "created_at"
                ],
                "properties": {
                    "author_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableManagers2": {
                "required": [
                    "user_id",
                    "name",
                    "is_subscribed"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "is_subscribed": {
                        "type": "boolean"
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PollAnswerRequestEntry": {
                "required": [
                    "localizations"
                ],
                "properties": {
                    "localizations": {
                        "$ref": "#\/components\/schemas\/PollAnswerLocalizationRequestEntryCollection"
                    }
                },
                "type": "object"
            },
            "PollTargetRequestEntry": {
                "required": [
                    "target_id",
                    "roles"
                ],
                "properties": {
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "superadmin",
                                "portfolio_manager",
                                "space_manager",
                                "tenant_manager",
                                "acs_manager",
                                "acs_integration",
                                "ticket_manager",
                                "vendor_manager",
                                "concierge",
                                "end_user"
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "SerializablePollData": {
                "required": [
                    "answers"
                ],
                "properties": {
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePollAnswer"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableRoleTypeCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/enum"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "SerializableAuthor": {
                "required": [
                    "id",
                    "first_name",
                    "last_name"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "avatar_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableAnswersCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAnswer"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "PostDataRequestEntry": {
                "required": [
                    "title",
                    "description",
                    "images",
                    "tags"
                ],
                "properties": {
                    "category_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/PostTitleRequestEntry"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/PostDescriptionRequestEntry"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ImageRequestEntry4"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TagRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "PostTargetRequestEntry": {
                "required": [
                    "roles"
                ],
                "properties": {
                    "target_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "superadmin",
                                "portfolio_manager",
                                "space_manager",
                                "tenant_manager",
                                "acs_manager",
                                "acs_integration",
                                "ticket_manager",
                                "vendor_manager",
                                "concierge",
                                "end_user"
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "CreateAnnouncementParametersRequestEntry": {
                "required": [
                    "data",
                    "announcement_settings"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry"
                    },
                    "announcement_settings": {
                        "$ref": "#\/components\/schemas\/AnnouncementSettingsRequestEntry"
                    }
                },
                "type": "object"
            },
            "CreateCommunityPostParametersRequestEntry": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry"
                    }
                },
                "type": "object"
            },
            "StartCreatePollPostProcessParametersRequestEntry": {
                "required": [
                    "data",
                    "poll_data",
                    "poll_settings"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry"
                    },
                    "poll_data": {
                        "$ref": "#\/components\/schemas\/PollDataRequestEntry"
                    },
                    "poll_settings": {
                        "$ref": "#\/components\/schemas\/PollSettingsRequestEntry"
                    }
                },
                "type": "object"
            },
            "StartCreateEventPostProcessParametersRequestEntry": {
                "required": [
                    "data",
                    "event_data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry"
                    },
                    "event_data": {
                        "$ref": "#\/components\/schemas\/CreateEventParametersRequestEntry"
                    }
                },
                "type": "object"
            },
            "PostPinSettingsRequestEntry": {
                "properties": {
                    "from": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "to": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializablePostInSpaceDetails": {
                "required": [
                    "id",
                    "type",
                    "total_conversations",
                    "total_likes"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "COMMUNITY",
                            "ANNOUNCEMENT",
                            "EVENT",
                            "POLL"
                        ]
                    },
                    "event_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "poll_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "general_post_data_entry": {
                        "$ref": "#\/components\/schemas\/SerializableGeneralPostInSpaceDataEntry"
                    },
                    "total_conversations": {
                        "type": "integer"
                    },
                    "total_likes": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableGeneralPostDataEntry": {
                "required": [
                    "state",
                    "post_data_entry",
                    "post_settings_entry",
                    "subject_likes",
                    "created_at"
                ],
                "properties": {
                    "author_entry": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableAuthor"
                            }
                        ]
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "PUBLISHED",
                            "SCHEDULED",
                            "DRAFT",
                            "REMOVED"
                        ]
                    },
                    "post_data_entry": {
                        "$ref": "#\/components\/schemas\/SerializablePostDataEntry"
                    },
                    "post_settings_entry": {
                        "$ref": "#\/components\/schemas\/SerializablePostSettingsEntry"
                    },
                    "subject_likes": {
                        "$ref": "#\/components\/schemas\/SerializableSubjectLikesEntry"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableReportedContent": {
                "required": [
                    "id",
                    "post_id",
                    "post_type",
                    "reported_by",
                    "category",
                    "status",
                    "reported_at"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "post_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "post_type": {
                        "type": "string",
                        "enum": [
                            "COMMUNITY",
                            "ANNOUNCEMENT",
                            "EVENT",
                            "POLL"
                        ]
                    },
                    "post_title": {
                        "$ref": "#\/components\/schemas\/SerializableTitleLocalizationCollection"
                    },
                    "reported_by": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "OFFENSIVE",
                            "VIOLENT_OR_PROHIBITED",
                            "SEXUALLY_INAPPROPRIATE",
                            "ABUSIVE_COMMENTS"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "NEW",
                            "REVIEWED",
                            "REMOVED"
                        ]
                    },
                    "reported_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableReportedContentCategory": {
                "required": [
                    "key",
                    "value"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableEventSettings2": {
                "required": [
                    "event_location",
                    "start_at",
                    "end_at",
                    "is_capacity_visible"
                ],
                "properties": {
                    "event_location": {
                        "$ref": "#\/components\/schemas\/SerializableEventLocation2"
                    },
                    "start_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "end_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "price": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableMoney"
                            }
                        ]
                    },
                    "is_capacity_visible": {
                        "type": "boolean"
                    },
                    "capacity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "repeat_options": {
                        "type": "string",
                        "enum": [
                            "EVERY_DAY",
                            "EVERY_WEEK",
                            "EVERY_TWO_WEEK",
                            "EVERY_MONTH",
                            "EVERY_YEAR",
                            null
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableLike2": {
                "required": [
                    "target_subject_id",
                    "user_id",
                    "first_name",
                    "last_name",
                    "is_public_profile"
                ],
                "properties": {
                    "target_subject_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_public_profile": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializablePollData2": {
                "required": [
                    "answers"
                ],
                "properties": {
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePollAnswer2"
                        }
                    }
                },
                "type": "object"
            },
            "SerializablePollSettings2": {
                "required": [
                    "end_at",
                    "is_result_public_on",
                    "is_multiple_answers_on",
                    "is_users_answers_on"
                ],
                "properties": {
                    "end_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "is_result_public_on": {
                        "type": "boolean"
                    },
                    "is_multiple_answers_on": {
                        "type": "boolean"
                    },
                    "is_users_answers_on": {
                        "type": "boolean"
                    },
                    "roles": {
                        "$ref": "#\/components\/schemas\/SerializableRoleTypeCollection2"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "CreateAnnouncementParametersRequestEntry2": {
                "required": [
                    "data",
                    "announcement_settings"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry2"
                    },
                    "announcement_settings": {
                        "$ref": "#\/components\/schemas\/AnnouncementSettingsRequestEntry2"
                    }
                },
                "type": "object"
            },
            "CreateCommunityPostParametersRequestEntry2": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry2"
                    }
                },
                "type": "object"
            },
            "StartCreatePollPostProcessParametersRequestEntry2": {
                "required": [
                    "data",
                    "poll_data",
                    "poll_settings"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry2"
                    },
                    "poll_data": {
                        "$ref": "#\/components\/schemas\/PollDataRequestEntry2"
                    },
                    "poll_settings": {
                        "$ref": "#\/components\/schemas\/PollSettingsRequestEntry2"
                    }
                },
                "type": "object"
            },
            "StartCreateEventPostProcessParametersRequestEntry2": {
                "required": [
                    "data",
                    "event_data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry2"
                    },
                    "event_data": {
                        "$ref": "#\/components\/schemas\/CreateEventParametersRequestEntry2"
                    }
                },
                "type": "object"
            },
            "SerializableGeneralPostDataEntry2": {
                "required": [
                    "state",
                    "post_data_entry",
                    "post_settings_entry",
                    "subject_likes",
                    "created_at"
                ],
                "properties": {
                    "author_entry": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableAuthor2"
                            }
                        ]
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "PUBLISHED",
                            "SCHEDULED",
                            "DRAFT",
                            "REMOVED"
                        ]
                    },
                    "post_data_entry": {
                        "$ref": "#\/components\/schemas\/SerializablePostDataEntry2"
                    },
                    "post_settings_entry": {
                        "$ref": "#\/components\/schemas\/SerializablePostSettingsEntry2"
                    },
                    "subject_likes": {
                        "$ref": "#\/components\/schemas\/SerializableSubjectLikesEntry2"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "CreateAnnouncementParametersRequestEntry3": {
                "required": [
                    "data",
                    "announcement_settings"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry3"
                    },
                    "announcement_settings": {
                        "$ref": "#\/components\/schemas\/AnnouncementSettingsRequestEntry3"
                    }
                },
                "type": "object"
            },
            "CreateCommunityPostParametersRequestEntry3": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry3"
                    }
                },
                "type": "object"
            },
            "CreatePollPostProcessParametersRequestEntry": {
                "required": [
                    "data",
                    "poll_data",
                    "poll_settings"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry3"
                    },
                    "poll_data": {
                        "$ref": "#\/components\/schemas\/PollDataRequestEntry3"
                    },
                    "poll_settings": {
                        "$ref": "#\/components\/schemas\/PollSettingsRequestEntry3"
                    }
                },
                "type": "object"
            },
            "CreateEventPostProcessParametersRequestEntry": {
                "required": [
                    "data",
                    "event_data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry3"
                    },
                    "event_data": {
                        "$ref": "#\/components\/schemas\/EventSettingsRequestBody2"
                    }
                },
                "type": "object"
            },
            "CreateAnnouncementParametersRequestEntry4": {
                "required": [
                    "data",
                    "announcement_settings"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry4"
                    },
                    "announcement_settings": {
                        "$ref": "#\/components\/schemas\/AnnouncementSettingsRequestEntry3"
                    }
                },
                "type": "object"
            },
            "CreateCommunityPostParametersRequestEntry4": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry4"
                    }
                },
                "type": "object"
            },
            "CreatePollPostProcessParametersRequestEntry2": {
                "required": [
                    "data",
                    "poll_data",
                    "poll_settings"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry4"
                    },
                    "poll_data": {
                        "$ref": "#\/components\/schemas\/PollDataRequestEntry3"
                    },
                    "poll_settings": {
                        "$ref": "#\/components\/schemas\/PollSettingsRequestEntry3"
                    }
                },
                "type": "object"
            },
            "CreateEventPostProcessParametersRequestEntry2": {
                "required": [
                    "data",
                    "event_data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/GeneralPostDataRequestEntry4"
                    },
                    "event_data": {
                        "$ref": "#\/components\/schemas\/EventSettingsRequestBody2"
                    }
                },
                "type": "object"
            },
            "SerializableGenerateTotpCodeSuccessPayloadParamsEntry": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableHostVisitorsEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "host_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "building_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "VisitRequestEntry": {
                "required": [
                    "first_name",
                    "last_name",
                    "email"
                ],
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "start_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "end_at": {
                        "type": "string",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "visitor_message": {
                        "type": "string",
                        "nullable": true
                    },
                    "concierge_message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableVisitor": {
                "required": [
                    "id",
                    "status",
                    "section_status",
                    "email",
                    "first_name"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "started_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "end_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "verified_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "status": {
                        "type": "string"
                    },
                    "section_status": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "host_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "host_first_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "host_last_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "company": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableAmenityEntry": {
                "required": [
                    "id",
                    "vendor_id",
                    "service_section_id",
                    "after_booking_message",
                    "status",
                    "is_promoted"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "service_section_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImageEntry2"
                        }
                    },
                    "opening_hours": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableOpeningHoursEntry"
                            }
                        ]
                    },
                    "after_booking_message": {
                        "type": "string"
                    },
                    "maximum_capacity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "availability_id": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableAvailabilityIdEntry"
                            }
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "live",
                            "suspended"
                        ]
                    },
                    "is_promoted": {
                        "type": "boolean"
                    },
                    "booking_processor": {
                        "$ref": "#\/components\/schemas\/SerializableBookingProcessorEntry"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "amenity_payment_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableAmenityPaymentDetailsEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableBookingVendor": {
                "required": [
                    "id",
                    "vendor_profile"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "vendor_status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "SUSPENDED",
                            null
                        ],
                        "nullable": true
                    },
                    "vendor_profile": {
                        "$ref": "#\/components\/schemas\/SerializableVendorProfile"
                    }
                },
                "type": "object"
            },
            "SerializablePerson2": {
                "required": [
                    "id",
                    "first_name",
                    "last_name"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableReservationDetailsAdminEntry": {
                "properties": {
                    "item_count": {
                        "type": "integer",
                        "nullable": true
                    },
                    "interval": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableDateTimeIntervalEntry2"
                            }
                        ]
                    },
                    "additional_services": {
                        "type": "string",
                        "nullable": true
                    },
                    "private_note": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableReservationDetailsEntry": {
                "properties": {
                    "item_count": {
                        "type": "integer",
                        "nullable": true
                    },
                    "interval": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableDateTimeIntervalEntry2"
                            }
                        ]
                    },
                    "additional_services": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableCalendarReservationsSettingsEntry": {
                "required": [
                    "calendar_type",
                    "booking_settings",
                    "reservation_unit_time_minutes",
                    "buffer_time_minutes",
                    "maximum_booking_period_minutes"
                ],
                "properties": {
                    "calendar_type": {
                        "type": "string",
                        "enum": [
                            "OPEN",
                            "CUSTOM"
                        ]
                    },
                    "booking_settings": {
                        "$ref": "#\/components\/schemas\/SerializableBookingSettingsEntry"
                    },
                    "reservation_unit_time_minutes": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "exclusiveMaximum": true,
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    "buffer_time_minutes": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "exclusiveMaximum": true,
                        "minimum": 0
                    },
                    "maximum_booking_period_minutes": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "exclusiveMaximum": true,
                        "minimum": 0,
                        "exclusiveMinimum": true
                    }
                },
                "type": "object"
            },
            "SerializableDateTimeIntervalEntry2": {
                "required": [
                    "start",
                    "end"
                ],
                "properties": {
                    "start": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "end": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableCalendarReservationsSettingsEntry2": {
                "required": [
                    "booking_settings",
                    "reservation_unit_time_minutes",
                    "buffer_time_minutes",
                    "maximum_booking_period_minutes"
                ],
                "properties": {
                    "booking_settings": {
                        "$ref": "#\/components\/schemas\/SerializableBookingSettingsEntry"
                    },
                    "reservation_unit_time_minutes": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    "buffer_time_minutes": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "maximum_booking_period_minutes": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    }
                },
                "type": "object"
            },
            "ActionButtonRequestEntry": {
                "properties": {
                    "promo_code": {
                        "type": "string",
                        "nullable": true
                    },
                    "link": {
                        "type": "string",
                        "nullable": true
                    },
                    "contact": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableCompanyDetailsEntry": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "registration_number": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AvailabilityRequestEntry": {
                "properties": {
                    "available_item_count": {
                        "type": "integer",
                        "nullable": true
                    },
                    "calendar_reservations_settings": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableCalendarReservationsSettingsEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableBookingProcessorEntry": {
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "spaceflow",
                            "external"
                        ]
                    },
                    "booking_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AmenityPaymentDetailsRequestEntry": {
                "required": [
                    "reservation_unit_time_minutes",
                    "price",
                    "currency_code",
                    "vat",
                    "terms_url"
                ],
                "properties": {
                    "reservation_unit_time_minutes": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    "price": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "currency_code": {
                        "type": "string"
                    },
                    "vat": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0
                    },
                    "terms_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AmenityRequestEntry": {
                "required": [
                    "title",
                    "description",
                    "images",
                    "after_booking_message",
                    "booking_processor"
                ],
                "properties": {
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    },
                    "opening_hours_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "after_booking_message": {
                        "type": "string"
                    },
                    "maximum_capacity": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "nullable": true
                    },
                    "availability": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/AvailabilityRequestEntry"
                            }
                        ]
                    },
                    "booking_processor": {
                        "$ref": "#\/components\/schemas\/SerializableBookingProcessorEntry"
                    },
                    "amenity_payment_details": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/AmenityPaymentDetailsRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableAvailableServiceCategory": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "filter_enabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableServiceCategory": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "filter_enabled": {
                        "type": "boolean"
                    },
                    "priority": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableOpeningHoursEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "is_main": {
                        "type": "boolean"
                    },
                    "schedule": {
                        "$ref": "#\/components\/schemas\/SerializableScheduleEntry"
                    }
                },
                "type": "object"
            },
            "SerializableScheduleEntry": {
                "required": [
                    "monday",
                    "tuesday",
                    "wednesday",
                    "thursday",
                    "friday",
                    "saturday",
                    "sunday"
                ],
                "properties": {
                    "monday": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTimeIntervalEntry"
                        }
                    },
                    "tuesday": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTimeIntervalEntry"
                        }
                    },
                    "wednesday": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTimeIntervalEntry"
                        }
                    },
                    "thursday": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTimeIntervalEntry"
                        }
                    },
                    "friday": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTimeIntervalEntry"
                        }
                    },
                    "saturday": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTimeIntervalEntry"
                        }
                    },
                    "sunday": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTimeIntervalEntry"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableService": {
                "required": [
                    "is_promoted",
                    "is_send_user_id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "vendor": {
                        "$ref": "#\/components\/schemas\/SerializableVendor2"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImageEntry2"
                        }
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "WELLNESS",
                            "HEALTH_CARE",
                            "UTILITIES",
                            "FOOD_AND_DRINKS",
                            "SPORT_AND_FITNESS",
                            "CLEANING",
                            "PARKING",
                            "FREE_TIME",
                            "HOT_DESKS",
                            "MEETING_ROOMS",
                            "SHOPPING",
                            "EMPLOYEE_BENEFITS",
                            "THINGS_TO_DO"
                        ]
                    },
                    "audience": {
                        "title": "List of audience (targets) assigned to a particular Service.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "action_button": {
                        "$ref": "#\/components\/schemas\/SerializableActionButton"
                    },
                    "exclusive": {
                        "type": "boolean"
                    },
                    "is_promoted": {
                        "type": "boolean"
                    },
                    "is_send_user_id": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableAvailableVendorCategory": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "title": "Name of the category translated using user localization from the user settings (not depend on language switcher in the app).",
                        "type": "string"
                    },
                    "filter_enabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableVendorCategory": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "filter_enabled": {
                        "type": "boolean"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "owner_priority": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableServiceSection": {
                "required": [
                    "type",
                    "targeting",
                    "title",
                    "description",
                    "service_category_id",
                    "internal_note",
                    "images",
                    "status"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "vendor_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "amenity"
                        ]
                    },
                    "targeting": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "service_category_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "internal_note": {
                        "type": "string"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImageEntry2"
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "live",
                            "suspended"
                        ]
                    },
                    "service_category_name": {
                        "type": "string"
                    },
                    "is_promoted": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableVendorProfile": {
                "properties": {
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    },
                    "logo": {
                        "$ref": "#\/components\/schemas\/SerializableImageEntry2"
                    },
                    "cover_photo": {
                        "$ref": "#\/components\/schemas\/SerializableImageEntry2"
                    }
                },
                "type": "object"
            },
            "SerializableIndividualContactEntry": {
                "required": [
                    "details",
                    "address"
                ],
                "properties": {
                    "details": {
                        "$ref": "#\/components\/schemas\/SerializableIndividualDetailsEntry"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableAddressEntry"
                    }
                },
                "type": "object"
            },
            "SerializableCompanyContactEntry": {
                "required": [
                    "details",
                    "address"
                ],
                "properties": {
                    "details": {
                        "$ref": "#\/components\/schemas\/SerializableCompanyDetailsEntry"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/SerializableAddressEntry"
                    }
                },
                "type": "object"
            },
            "SerializableIndividualDetailsEntry": {
                "required": [
                    "first_name",
                    "last_name"
                ],
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "identification_card": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableIdentificationCardEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableAddressEntry": {
                "required": [
                    "street",
                    "city",
                    "state",
                    "zip_code",
                    "country_code",
                    "coordinates"
                ],
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "coordinates": {
                        "$ref": "#\/components\/schemas\/SerializableCoordinatesEntry"
                    }
                },
                "type": "object"
            },
            "VendorProfileRequestBody": {
                "required": [
                    "display_name",
                    "description",
                    "email",
                    "website",
                    "logo",
                    "cover_photo"
                ],
                "properties": {
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    },
                    "logo": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "cover_photo": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableStoredEventEntry": {
                "required": [
                    "id",
                    "request_id",
                    "event_name",
                    "event_status"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "request_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "event_name": {
                        "type": "string"
                    },
                    "event_status": {
                        "type": "string",
                        "enum": [
                            "process_finish",
                            "error",
                            "normal",
                            "warning"
                        ]
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "error_message": {
                        "type": "string"
                    },
                    "aggregate_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableAccessCredentialForChangedSince": {
                "properties": {
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "card_number": {
                        "type": "string"
                    },
                    "commencement_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "expiry_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "reason_for_deactivation": {
                        "type": "string",
                        "enum": [
                            "inactive",
                            "stolen",
                            "lost",
                            "expired",
                            "revoked",
                            "duplicated",
                            null
                        ],
                        "nullable": true
                    },
                    "parking_flag": {
                        "type": "boolean"
                    },
                    "license_plate": {
                        "type": "string",
                        "nullable": true
                    },
                    "last_modification": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "external_user_id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableAccessCredentialsChangedSinceWithUnassignedUserSince": {
                "properties": {
                    "access_credential_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "external_user_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "card_number": {
                        "type": "string"
                    },
                    "commencement_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "expiry_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "reason_for_deactivation": {
                        "type": "string",
                        "enum": [
                            "inactive",
                            "stolen",
                            "lost",
                            "expired",
                            "revoked",
                            "duplicated",
                            null
                        ],
                        "nullable": true
                    },
                    "parking_flag": {
                        "type": "boolean"
                    },
                    "license_plate": {
                        "type": "string",
                        "nullable": true
                    },
                    "last_modification": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "DateValidity": {
                "required": [
                    "commencement_date",
                    "expiry_date"
                ],
                "properties": {
                    "commencement_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "SerializableAccessRule": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "external_access_rule_id": {
                        "type": "string"
                    },
                    "external_system_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "deactivated": {
                        "type": "boolean"
                    },
                    "user_group_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableIntegrationSettings": {
                "properties": {
                    "card_reader": {
                        "type": "string",
                        "enum": [
                            "HID",
                            "Salto",
                            "NSP",
                            "Accessy"
                        ]
                    },
                    "is_turned_on": {
                        "type": "boolean"
                    },
                    "hid_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableHIDParameters"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableEndUserIntegrationSettings": {
                "properties": {
                    "card_reader": {
                        "type": "string",
                        "enum": [
                            "HID",
                            "Salto",
                            "NSP",
                            "Accessy"
                        ]
                    },
                    "is_turned_on": {
                        "type": "boolean"
                    },
                    "hid_parameters": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableEndUserHIDParameters"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "HIDParametersRequestEntry": {
                "required": [
                    "key_set",
                    "is_connect_to_external_acs",
                    "lock_service_code",
                    "is_physical_cards_on",
                    "is_virtual_cards_on"
                ],
                "properties": {
                    "key_set": {
                        "type": "string"
                    },
                    "is_connect_to_external_acs": {
                        "type": "boolean"
                    },
                    "lock_service_code": {
                        "type": "integer"
                    },
                    "is_physical_cards_on": {
                        "type": "boolean"
                    },
                    "is_virtual_cards_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableUserGroup": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "space_owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "external_user_group_id": {
                        "type": "string"
                    },
                    "external_system_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "tenant_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "access_credential_limits": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAccessCredentialLimit"
                        }
                    },
                    "access_rule_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    }
                },
                "type": "object"
            },
            "CredentialLimitRequestField": {
                "required": [
                    "type",
                    "value_limit"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "physical_card",
                            "virtual_card"
                        ]
                    },
                    "value_limit": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableCardUsageReportEntry": {
                "properties": {
                    "tenant_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "space_owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "physical_card",
                            "virtual_card"
                        ]
                    },
                    "amount": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableUserGroupForUser": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "space_owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "tenant_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableAccessCredentialForUser": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "value": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "physical_card",
                            "virtual_card"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableAccessRuleForUser": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "deactivated": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableUsersChangedSince": {
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "external_user_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "reason_for_deactivation": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "left_company"
                        ]
                    },
                    "user_group_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "external_user_group_id": {
                        "type": "string"
                    },
                    "commencement_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "expiry_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "last_modification": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "access_rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAccessRuleForUserChangeSince"
                        }
                    }
                },
                "type": "object"
            },
            "UserPersonalInformation": {
                "required": [
                    "first_name",
                    "last_name"
                ],
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UuidInterface": {
                "type": "object"
            },
            "UserRolesRequestEntry": {
                "required": [
                    "name",
                    "scope"
                ],
                "properties": {
                    "name": {
                        "description": "Azure AD group name",
                        "type": "string"
                    },
                    "scope": {
                        "description": "List of UUID's of the portfolio\/space etc.",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableTenantEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableAuthorEntry": {
                "properties": {
                    "id": {
                        "title": "Author id.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "first_name": {
                        "title": "Author first name.",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Author last name.",
                        "type": "string"
                    },
                    "avatar_url": {
                        "title": "Author avatar url.",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableDocumentFileEntry": {
                "properties": {
                    "id": {
                        "title": "File id.",
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "name": {
                        "title": "File name.",
                        "type": "string"
                    },
                    "extension": {
                        "title": "File extension.",
                        "type": "string",
                        "enum": [
                            "jpg",
                            "jpeg",
                            "png",
                            "tif",
                            "tiff",
                            "svg",
                            "gif",
                            "avi",
                            "mov",
                            "mp4",
                            "mpeg",
                            "zip",
                            "rar",
                            "txt",
                            "pdf",
                            "doc",
                            "docx",
                            "csv",
                            "xls",
                            "xlsx",
                            "ppt",
                            "pptx"
                        ],
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/enum"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializablePortfolioEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableSpaceEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "light_logo_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "dark_logo_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "header_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "group1": {
                        "type": "string",
                        "nullable": true
                    },
                    "group2": {
                        "type": "string",
                        "nullable": true
                    },
                    "group3": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializablePortfolioEntry2": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableSpaceEntry2": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "light_logo_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "dark_logo_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "header_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "group1": {
                        "type": "string",
                        "nullable": true
                    },
                    "group2": {
                        "type": "string",
                        "nullable": true
                    },
                    "group3": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableRoleInTargetEntry": {
                "properties": {
                    "role_type": {
                        "type": "string",
                        "enum": [
                            "superadmin",
                            "portfolio_manager",
                            "space_manager",
                            "tenant_manager",
                            "acs_manager",
                            "acs_integration",
                            "ticket_manager",
                            "vendor_manager",
                            "concierge",
                            "end_user"
                        ]
                    },
                    "role_name": {
                        "type": "string"
                    },
                    "target_label": {
                        "type": "string"
                    },
                    "target_type": {
                        "type": "string",
                        "enum": [
                            "hierarchy",
                            "portfolio",
                            "space",
                            "space_unit",
                            "ticketing_category",
                            "tenant",
                            "vendor",
                            "entrance",
                            "level"
                        ]
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableUserWithRoleDetails": {
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "joined_at": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "INVITED",
                            "ACTIVE",
                            "DEACTIVATED"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableUserRole": {
                "properties": {
                    "role_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "target_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "role_type": {
                        "type": "string",
                        "enum": [
                            "superadmin",
                            "portfolio_manager",
                            "space_manager",
                            "tenant_manager",
                            "acs_manager",
                            "acs_integration",
                            "ticket_manager",
                            "vendor_manager",
                            "concierge",
                            "end_user"
                        ]
                    },
                    "role_name": {
                        "type": "string"
                    },
                    "target_label": {
                        "type": "string"
                    },
                    "owning_space": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableSpace2"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializablePersonEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "avatar_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableActionInputParameter": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "allowed_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAllowedValue"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableImageEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableAttachment": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "url": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "extension": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableAddressEntry2": {
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableLevel": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "space_units": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableSpaceUnit2"
                        }
                    }
                },
                "type": "object"
            },
            "SerializablePersonWithPhoneNumberEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableTargetSubjectEntry": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "hierarchy",
                            "portfolio",
                            "space",
                            "space_unit",
                            "ticketing_category",
                            "tenant",
                            "vendor",
                            "entrance",
                            "level"
                        ]
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableTargetRoleEntry": {
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableLocalizedTextEntry": {
                "required": [
                    "language",
                    "text"
                ],
                "properties": {
                    "language": {
                        "title": "Language.",
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ],
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/enum"
                            }
                        ]
                    },
                    "text": {
                        "title": "Text for the language.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ImageRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "ImageRequestEntry2": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "CallToActionRequestEntry": {
                "required": [
                    "external_url"
                ],
                "properties": {
                    "external_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LevelDistributionRequestEntry": {
                "required": [
                    "order",
                    "units"
                ],
                "properties": {
                    "order": {
                        "type": "integer"
                    },
                    "units": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SpaceUnitDistributionRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableCustomMenuIconUrl": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableCallToAction": {
                "properties": {
                    "external_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializablePersonEntry2": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatar_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableLevel2": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "space_units": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableSpaceUnit"
                        }
                    }
                },
                "type": "object"
            },
            "SpaceUnitRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "IdentificationCardTypeRequestEntry": {
                "required": [
                    "card_type"
                ],
                "properties": {
                    "card_type": {
                        "type": "string",
                        "enum": [
                            "NATIONAL_ID_CARD",
                            "PASSPORT"
                        ]
                    }
                },
                "type": "object"
            },
            "TenantDetailsRequestEntry": {
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "COMPANY"
                        ]
                    },
                    "individual": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/IndividualTenantDetailsRequestEntry"
                            }
                        ]
                    },
                    "company": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CompanyTenantDetailsRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "CreateTenantSettingsRequestEntry": {
                "required": [
                    "is_comments_on",
                    "is_payments_on",
                    "is_ticketing_system_on",
                    "number_of_allowed_people",
                    "is_ticketing_uploads_allowed",
                    "is_user_engagement_button_on"
                ],
                "properties": {
                    "is_comments_on": {
                        "type": "boolean"
                    },
                    "is_payments_on": {
                        "type": "boolean"
                    },
                    "is_ticketing_system_on": {
                        "type": "boolean"
                    },
                    "number_of_allowed_people": {
                        "type": "integer"
                    },
                    "is_ticketing_uploads_allowed": {
                        "type": "boolean"
                    },
                    "is_user_engagement_button_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableTenantInfoDetails": {
                "required": [
                    "first_name",
                    "last_name",
                    "identification_card_type"
                ],
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "identification_card_type": {
                        "type": "string",
                        "enum": [
                            "NATIONAL_ID_CARD",
                            "PASSPORT",
                            null
                        ],
                        "nullable": true
                    },
                    "id_card_value": {
                        "type": "string",
                        "nullable": true
                    },
                    "internal_id_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableTenantCompanyInfoDetails": {
                "required": [
                    "company_name"
                ],
                "properties": {
                    "company_name": {
                        "type": "string"
                    },
                    "company_registration_number": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableCompanyRepresentativeDetails": {
                "required": [
                    "first_name",
                    "last_name",
                    "identification_card_type",
                    "id_card_value",
                    "phone"
                ],
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "identification_card_type": {
                        "type": "string",
                        "enum": [
                            "NATIONAL_ID_CARD",
                            "PASSPORT",
                            null
                        ],
                        "nullable": true
                    },
                    "id_card_value": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableSpaceAddress"
                            }
                        ]
                    },
                    "internal_id_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableTenantPublicProfile": {
                "required": [
                    "name",
                    "about_us",
                    "web_url"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "about_us": {
                        "type": "string"
                    },
                    "web_url": {
                        "type": "string"
                    },
                    "image": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableImage"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableBriefTenantLeaseDetails": {
                "properties": {
                    "start_date": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "end_date": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableTenantManager": {
                "properties": {
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "details": {
                        "$ref": "#\/components\/schemas\/SerializableTenantManagerDetails"
                    }
                },
                "type": "object"
            },
            "PushNotificationMetadataPairEntry": {
                "required": [
                    "key",
                    "value"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializablePortfolioExternalDetails": {
                "required": [
                    "portfolio_id"
                ],
                "properties": {
                    "portfolio_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "internal_id_number": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableImage2": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "public_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ImageRequestEntry3": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "SerializableImageListCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImage2"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableAddress": {
                "required": [
                    "street",
                    "city",
                    "state",
                    "zip_code",
                    "country",
                    "is_company"
                ],
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "is_company": {
                        "type": "boolean"
                    },
                    "company_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableImage3": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "public_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "EventLocationRequestBody": {
                "properties": {
                    "address": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/EventLocationAddressRequestBody"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "EventPriceRequestBody": {
                "required": [
                    "amount",
                    "currency"
                ],
                "properties": {
                    "amount": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "currency": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PollAnswerLocalizationRequestEntryCollection": {
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/PollAnswerLocalizationRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "SerializablePollAnswer": {
                "required": [
                    "answer_id",
                    "author_id",
                    "localizations"
                ],
                "properties": {
                    "answer_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "answered_user_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "answered_user_ids_count": {
                        "type": "integer"
                    },
                    "localizations": {
                        "$ref": "#\/components\/schemas\/SerializablePollAnswerLocalizationCollection"
                    }
                },
                "type": "object"
            },
            "SerializableAnswer": {
                "required": [
                    "answer_id"
                ],
                "properties": {
                    "answer_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "votes": {
                        "$ref": "#\/components\/schemas\/SerializableAnswerVotesCollection"
                    }
                },
                "type": "object"
            },
            "PostTitleRequestEntry": {
                "required": [
                    "localized_titles"
                ],
                "properties": {
                    "localized_titles": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/LocalizedPostTitleRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "PostDescriptionRequestEntry": {
                "required": [
                    "localized_descriptions"
                ],
                "properties": {
                    "localized_descriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/LocalizedPostDescriptionRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "ImageRequestEntry4": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "TagRequestEntry": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "GeneralPostDataRequestEntry": {
                "required": [
                    "state",
                    "data",
                    "settings"
                ],
                "properties": {
                    "state": {
                        "type": "string",
                        "enum": [
                            "PUBLISHED",
                            "SCHEDULED",
                            "DRAFT",
                            "REMOVED"
                        ]
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PostDataRequestEntry"
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/PostSettingsRequestEntry"
                    }
                },
                "type": "object"
            },
            "AnnouncementSettingsRequestEntry": {
                "properties": {
                    "expiration_date": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "PollDataRequestEntry": {
                "required": [
                    "answers"
                ],
                "properties": {
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/PollAnswerRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "PollSettingsRequestEntry": {
                "required": [
                    "end_at",
                    "is_result_public_on",
                    "is_multiple_answers_on",
                    "is_users_answers_on",
                    "target"
                ],
                "properties": {
                    "end_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "is_result_public_on": {
                        "type": "boolean"
                    },
                    "is_multiple_answers_on": {
                        "type": "boolean"
                    },
                    "is_users_answers_on": {
                        "type": "boolean"
                    },
                    "target": {
                        "$ref": "#\/components\/schemas\/PollTargetRequestEntry"
                    }
                },
                "type": "object"
            },
            "CreateEventParametersRequestEntry": {
                "required": [
                    "event_settings"
                ],
                "properties": {
                    "hierarchy_parent_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "event_settings": {
                        "$ref": "#\/components\/schemas\/EventSettingsRequestBody"
                    }
                },
                "type": "object"
            },
            "SerializableGeneralPostInSpaceDataEntry": {
                "required": [
                    "state",
                    "post_data_entry",
                    "post_settings_entry",
                    "subject_likes",
                    "created_at"
                ],
                "properties": {
                    "author_entry": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableAuthor"
                            }
                        ]
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "PUBLISHED",
                            "SCHEDULED",
                            "DRAFT",
                            "REMOVED"
                        ]
                    },
                    "post_data_entry": {
                        "$ref": "#\/components\/schemas\/SerializablePostInSpaceDataEntry"
                    },
                    "post_settings_entry": {
                        "$ref": "#\/components\/schemas\/SerializablePostInSpaceSettingsEntry"
                    },
                    "subject_likes": {
                        "$ref": "#\/components\/schemas\/SerializableSubjectLikesEntry"
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializablePostDataEntry": {
                "properties": {
                    "category_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableTitleLocalizationCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableDescriptionLocalizationCollection"
                    },
                    "images": {
                        "$ref": "#\/components\/schemas\/SerializableImageListCollection"
                    },
                    "tags": {
                        "$ref": "#\/components\/schemas\/SerializableTagListCollection"
                    }
                },
                "type": "object"
            },
            "SerializablePostSettingsEntry": {
                "required": [
                    "is_post_pinned",
                    "is_comments_on"
                ],
                "properties": {
                    "target_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "is_post_pinned": {
                        "type": "boolean"
                    },
                    "post_pin_settings": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializablePostPinSettings"
                            }
                        ]
                    },
                    "is_comments_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableSubjectLikesEntry": {
                "required": [
                    "is_liked_by_me",
                    "likes"
                ],
                "properties": {
                    "is_liked_by_me": {
                        "type": "boolean"
                    },
                    "likes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableLike2"
                        }
                    }
                },
                "type": "object"
            },
            "SerializableTitleLocalizationCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTitleLocalization"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableEventLocation2": {
                "properties": {
                    "address": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableAddress2"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializablePollAnswer2": {
                "required": [
                    "answer_id",
                    "author_id",
                    "localizations"
                ],
                "properties": {
                    "answer_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "answered_user_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "answered_user_ids_count": {
                        "type": "integer"
                    },
                    "localizations": {
                        "$ref": "#\/components\/schemas\/SerializablePollAnswerLocalizationCollection2"
                    }
                },
                "type": "object"
            },
            "SerializableRoleTypeCollection2": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/enum"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "GeneralPostDataRequestEntry2": {
                "required": [
                    "state",
                    "data",
                    "settings"
                ],
                "properties": {
                    "state": {
                        "type": "string",
                        "enum": [
                            "PUBLISHED",
                            "SCHEDULED",
                            "DRAFT",
                            "REMOVED"
                        ]
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PostDataRequestEntry2"
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/PostSettingsRequestEntry2"
                    }
                },
                "type": "object"
            },
            "AnnouncementSettingsRequestEntry2": {
                "properties": {
                    "expiration_date": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "PollDataRequestEntry2": {
                "required": [
                    "answers"
                ],
                "properties": {
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/PollAnswerRequestEntry2"
                        }
                    }
                },
                "type": "object"
            },
            "PollSettingsRequestEntry2": {
                "required": [
                    "end_at",
                    "is_result_public_on",
                    "is_multiple_answers_on",
                    "is_users_answers_on",
                    "targets"
                ],
                "properties": {
                    "end_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "is_result_public_on": {
                        "type": "boolean"
                    },
                    "is_multiple_answers_on": {
                        "type": "boolean"
                    },
                    "is_users_answers_on": {
                        "type": "boolean"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "CreateEventParametersRequestEntry2": {
                "required": [
                    "event_settings"
                ],
                "properties": {
                    "event_settings": {
                        "$ref": "#\/components\/schemas\/EventSettingsRequestBody3"
                    }
                },
                "type": "object"
            },
            "SerializableAuthor2": {
                "required": [
                    "id",
                    "first_name",
                    "last_name"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "avatar_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializablePostDataEntry2": {
                "properties": {
                    "category_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableTitleLocalizationCollection2"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableDescriptionLocalizationCollection2"
                    },
                    "images": {
                        "$ref": "#\/components\/schemas\/SerializableImageListCollection2"
                    },
                    "tags": {
                        "$ref": "#\/components\/schemas\/SerializableTagListCollection"
                    }
                },
                "type": "object"
            },
            "SerializablePostSettingsEntry2": {
                "required": [
                    "is_post_pinned",
                    "is_comments_on"
                ],
                "properties": {
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "is_post_pinned": {
                        "type": "boolean"
                    },
                    "post_pin_settings": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializablePostPinSettings2"
                            }
                        ]
                    },
                    "is_comments_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableSubjectLikesEntry2": {
                "required": [
                    "is_liked_by_me",
                    "likes"
                ],
                "properties": {
                    "is_liked_by_me": {
                        "type": "boolean"
                    },
                    "likes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableLike2"
                        }
                    }
                },
                "type": "object"
            },
            "GeneralPostDataRequestEntry3": {
                "required": [
                    "state",
                    "data",
                    "settings"
                ],
                "properties": {
                    "state": {
                        "type": "string",
                        "enum": [
                            "PUBLISHED",
                            "SCHEDULED",
                            "DRAFT",
                            "REMOVED"
                        ]
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PostDataRequestEntry3"
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/PostSettingsRequestEntry3"
                    }
                },
                "type": "object"
            },
            "AnnouncementSettingsRequestEntry3": {
                "properties": {
                    "expiration_date": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "PollDataRequestEntry3": {
                "required": [
                    "answers"
                ],
                "properties": {
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                        }
                    }
                },
                "type": "object"
            },
            "PollSettingsRequestEntry3": {
                "required": [
                    "end_at",
                    "is_result_public_on",
                    "is_multiple_answers_on",
                    "is_users_answers_on"
                ],
                "properties": {
                    "end_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "is_result_public_on": {
                        "type": "boolean"
                    },
                    "is_multiple_answers_on": {
                        "type": "boolean"
                    },
                    "is_users_answers_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "EventSettingsRequestBody2": {
                "required": [
                    "start_date",
                    "end_date",
                    "is_capacity_visible"
                ],
                "properties": {
                    "event_location": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/EventLocationRequestBody2"
                            }
                        ]
                    },
                    "repeat_option": {
                        "type": "string",
                        "enum": [
                            "EVERY_DAY",
                            "EVERY_WEEK",
                            "EVERY_TWO_WEEK",
                            "EVERY_MONTH",
                            "EVERY_YEAR",
                            null
                        ],
                        "nullable": true
                    },
                    "start_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "end_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "price": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/EventPriceRequestBody2"
                            }
                        ]
                    },
                    "capacity": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "nullable": true
                    },
                    "is_capacity_visible": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "GeneralPostDataRequestEntry4": {
                "required": [
                    "state",
                    "data",
                    "settings"
                ],
                "properties": {
                    "state": {
                        "type": "string",
                        "enum": [
                            "PUBLISHED",
                            "SCHEDULED",
                            "DRAFT",
                            "REMOVED"
                        ]
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PostDataRequestEntry3"
                    },
                    "settings": {
                        "$ref": "#\/components\/schemas\/PostSettingsRequestEntry4"
                    }
                },
                "type": "object"
            },
            "SerializableImageEntry2": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableAvailabilityIdEntry": {
                "required": [
                    "id",
                    "type"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "inventory",
                            "calendar_reservations"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableAmenityPaymentDetailsEntry": {
                "required": [
                    "price",
                    "currency_code",
                    "vat",
                    "reservation_unit_time_minutes",
                    "terms_url"
                ],
                "properties": {
                    "price": {
                        "type": "integer"
                    },
                    "currency_code": {
                        "type": "string"
                    },
                    "vat": {
                        "type": "integer"
                    },
                    "reservation_unit_time_minutes": {
                        "type": "integer"
                    },
                    "terms_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableBookingSettingsEntry": {
                "required": [
                    "manual_confirmation",
                    "advanced_booking_days",
                    "cancellation_period_hours"
                ],
                "properties": {
                    "manual_confirmation": {
                        "type": "boolean"
                    },
                    "advanced_booking_days": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "exclusiveMaximum": true,
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    "cancellation_period_hours": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "exclusiveMaximum": true,
                        "minimum": 0
                    }
                },
                "type": "object"
            },
            "SerializableTimeIntervalEntry": {
                "required": [
                    "start",
                    "end"
                ],
                "properties": {
                    "start": {
                        "type": "string",
                        "pattern": "(?:[0-1][0-9]|2[0-3]):[0-5][0-9]",
                        "example": "23:59"
                    },
                    "end": {
                        "type": "string",
                        "pattern": "(?:[0-1][0-9]|2[0-3]):[0-5][0-9]",
                        "example": "23:59"
                    }
                },
                "type": "object"
            },
            "SerializableVendor2": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "EXTERNAL",
                            "PORTFOLIO",
                            "SPACE",
                            "TENANT"
                        ]
                    },
                    "owner_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "category": {
                        "$ref": "#\/components\/schemas\/SerializableVendorCategory"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "SUSPENDED",
                            null
                        ],
                        "nullable": true
                    },
                    "vendor_profile": {
                        "$ref": "#\/components\/schemas\/SerializableVendorProfile"
                    },
                    "individual_contact": {
                        "$ref": "#\/components\/schemas\/SerializableIndividualContactEntry"
                    },
                    "company_contact": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializableCompanyContactEntry"
                            }
                        ]
                    },
                    "created_at": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    }
                },
                "type": "object"
            },
            "SerializableActionButton": {
                "properties": {
                    "promo_code": {
                        "type": "string",
                        "nullable": true
                    },
                    "link": {
                        "type": "string",
                        "nullable": true
                    },
                    "contact": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializableIdentificationCardEntry": {
                "required": [
                    "type",
                    "number"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "NATIONAL_ID_CARD",
                            "PASSPORT"
                        ]
                    },
                    "number": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableCoordinatesEntry": {
                "required": [
                    "latitude",
                    "longitude"
                ],
                "properties": {
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "maximum": 90,
                        "minimum": -90
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "maximum": 180,
                        "minimum": -180
                    }
                },
                "type": "object"
            },
            "SerializableHIDParameters": {
                "properties": {
                    "key_set": {
                        "type": "string"
                    },
                    "lock_service_code": {
                        "type": "integer"
                    },
                    "is_connect_to_external_acs": {
                        "type": "boolean"
                    },
                    "is_physical_cards_on": {
                        "type": "boolean"
                    },
                    "is_virtual_cards_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableEndUserHIDParameters": {
                "properties": {
                    "is_connect_to_external_acs": {
                        "type": "boolean"
                    },
                    "lock_service_code": {
                        "type": "integer"
                    },
                    "is_physical_cards_on": {
                        "type": "boolean"
                    },
                    "is_virtual_cards_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableAccessCredentialLimit": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "physical_card",
                            "virtual_card"
                        ]
                    },
                    "value": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableAccessRuleForUserChangeSince": {
                "properties": {
                    "access_rule_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "external_access_rule_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableSpace2": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "space_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableAllowedValue": {
                "type": "object"
            },
            "SerializableSpaceUnit2": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "order": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SpaceUnitDistributionRequestEntry": {
                "required": [
                    "order"
                ],
                "properties": {
                    "order": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "IndividualTenantDetailsRequestEntry": {
                "required": [
                    "info",
                    "address"
                ],
                "properties": {
                    "info": {
                        "$ref": "#\/components\/schemas\/TenantInfoDetailsRequestEntry"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/AddressRequestEntry"
                    }
                },
                "type": "object"
            },
            "CompanyTenantDetailsRequestEntry": {
                "required": [
                    "details",
                    "address",
                    "representative_details",
                    "is_public_profile_on"
                ],
                "properties": {
                    "details": {
                        "$ref": "#\/components\/schemas\/CompanyInfoDetailsRequestEntry"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/AddressRequestEntry"
                    },
                    "representative_details": {
                        "$ref": "#\/components\/schemas\/CompanyRepresentativeDetailsRequestEntry"
                    },
                    "is_public_profile_on": {
                        "type": "boolean"
                    },
                    "public_profile": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/TenantPublicProfileRequestEntry"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableTenantManagerDetails": {
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "INVITED",
                            "ACTIVE",
                            "DEACTIVATED"
                        ]
                    }
                },
                "type": "object"
            },
            "EventLocationAddressRequestBody": {
                "required": [
                    "street",
                    "city",
                    "state",
                    "zip_code",
                    "country",
                    "is_company"
                ],
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "is_company": {
                        "type": "boolean"
                    },
                    "company_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PollAnswerLocalizationRequestEntry": {
                "required": [
                    "value",
                    "language"
                ],
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializablePollAnswerLocalizationCollection": {
                "required": [
                    "items",
                    "hits"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePollAnswerLocalization"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableAnswerVotesCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableAnswerVote"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    },
                    "scroll_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "active_filters": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "LocalizedPostTitleRequestEntry": {
                "required": [
                    "language",
                    "title"
                ],
                "properties": {
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LocalizedPostDescriptionRequestEntry": {
                "required": [
                    "language",
                    "description"
                ],
                "properties": {
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PostSettingsRequestEntry": {
                "required": [
                    "target",
                    "is_post_pinned",
                    "is_comments_on"
                ],
                "properties": {
                    "target": {
                        "$ref": "#\/components\/schemas\/PostTargetRequestEntry"
                    },
                    "is_post_pinned": {
                        "type": "boolean"
                    },
                    "pin_settings": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/PostPinSettingsRequestEntry"
                            }
                        ]
                    },
                    "is_comments_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializablePostInSpaceDataEntry": {
                "properties": {
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImage3"
                        }
                    }
                },
                "type": "object"
            },
            "SerializablePostInSpaceSettingsEntry": {
                "required": [
                    "is_post_pinned",
                    "is_comments_on"
                ],
                "properties": {
                    "channel_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "is_post_pinned": {
                        "type": "boolean"
                    },
                    "post_pin_settings": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SerializablePostPinSettings"
                            }
                        ]
                    },
                    "is_comments_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableDescriptionLocalizationCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableDescriptionLocalization"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableTagListCollection": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTag"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializablePostPinSettings": {
                "properties": {
                    "from": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "to": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableTitleLocalization": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableAddress2": {
                "required": [
                    "street",
                    "city",
                    "state",
                    "zip_code",
                    "country",
                    "is_company"
                ],
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "is_company": {
                        "type": "boolean"
                    },
                    "company_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SerializablePollAnswerLocalizationCollection2": {
                "required": [
                    "items",
                    "hits"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializablePollAnswerLocalization2"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PostDataRequestEntry2": {
                "required": [
                    "title",
                    "description",
                    "images",
                    "tags"
                ],
                "properties": {
                    "category_id": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/uuid"
                            }
                        ]
                    },
                    "title": {
                        "$ref": "#\/components\/schemas\/PostTitleRequestEntry2"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/PostDescriptionRequestEntry2"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ImageRequestEntry5"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TagRequestEntry"
                        }
                    }
                },
                "type": "object"
            },
            "PostSettingsRequestEntry2": {
                "required": [
                    "targets",
                    "is_post_pinned",
                    "is_comments_on"
                ],
                "properties": {
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "is_post_pinned": {
                        "type": "boolean"
                    },
                    "pin_settings": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/PostPinSettingsRequestEntry2"
                            }
                        ]
                    },
                    "is_comments_on": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "PollAnswerRequestEntry2": {
                "required": [
                    "localizations"
                ],
                "properties": {
                    "localizations": {
                        "$ref": "#\/components\/schemas\/PollAnswerLocalizationRequestEntryCollection2"
                    }
                },
                "type": "object"
            },
            "EventSettingsRequestBody3": {
                "required": [
                    "start_date",
                    "end_date",
                    "is_capacity_visible"
                ],
                "properties": {
                    "event_location": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/EventLocationRequestBody3"
                            }
                        ]
                    },
                    "repeat_option": {
                        "type": "string",
                        "enum": [
                            "EVERY_DAY",
                            "EVERY_WEEK",
                            "EVERY_TWO_WEEK",
                            "EVERY_MONTH",
                            "EVERY_YEAR",
                            null
                        ],
                        "nullable": true
                    },
                    "start_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "end_date": {
                        "$ref": "#\/components\/schemas\/SFDateTime"
                    },
                    "price": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/EventPriceRequestBody3"
                            }
                        ]
                    },
                    "capacity": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "nullable": true
                    },
                    "is_capacity_visible": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SerializableTitleLocalizationCollection2": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableTitleLocalization2"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableDescriptionLocalizationCollection2": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableDescriptionLocalization2"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializableImageListCollection2": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SerializableImage3"
                        }
                    },
                    "hits": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SerializablePostPinSettings2": {
                "properties": {
                    "from": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "to": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "PostDataRequestEntry3": {
                "required": [
                    "title",
                    "description",
                    "images"
                ],
                "properties": {
                    "title": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "description": {
                        "$ref": "#\/components\/schemas\/SerializableLocalizedTextCollection"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ImageRequestEntry6"
                        }
                    }
                },
                "type": "object"
            },
            "PostSettingsRequestEntry3": {
                "required": [
                    "is_comments_on",
                    "channel_id"
                ],
                "properties": {
                    "is_comments_on": {
                        "type": "boolean"
                    },
                    "channel_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "EventLocationRequestBody2": {
                "properties": {
                    "address": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/EventLocationAddressRequestBody2"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "EventPriceRequestBody2": {
                "required": [
                    "amount",
                    "currency"
                ],
                "properties": {
                    "amount": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "currency": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PostSettingsRequestEntry4": {
                "required": [
                    "is_comments_on",
                    "targets"
                ],
                "properties": {
                    "is_comments_on": {
                        "type": "boolean"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/uuid"
                        }
                    }
                },
                "type": "object"
            },
            "SerializablePollAnswerLocalization": {
                "required": [
                    "value",
                    "language"
                ],
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableAnswerVote": {
                "required": [
                    "vote_id",
                    "user_id",
                    "author"
                ],
                "properties": {
                    "vote_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "user_id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "author": {
                        "$ref": "#\/components\/schemas\/SerializableAuthor"
                    }
                },
                "type": "object"
            },
            "SerializableDescriptionLocalization": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializablePollAnswerLocalization2": {
                "required": [
                    "value",
                    "language"
                ],
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    }
                },
                "type": "object"
            },
            "PostTitleRequestEntry2": {
                "required": [
                    "localized_titles"
                ],
                "properties": {
                    "localized_titles": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/LocalizedPostTitleRequestEntry2"
                        }
                    }
                },
                "type": "object"
            },
            "PostDescriptionRequestEntry2": {
                "required": [
                    "localized_descriptions"
                ],
                "properties": {
                    "localized_descriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/LocalizedPostDescriptionRequestEntry2"
                        }
                    }
                },
                "type": "object"
            },
            "ImageRequestEntry5": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "PostPinSettingsRequestEntry2": {
                "properties": {
                    "from": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    },
                    "to": {
                        "type": "string",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/SFDateTime"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "PollAnswerLocalizationRequestEntryCollection2": {
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/PollAnswerLocalizationRequestEntry2"
                        }
                    }
                },
                "type": "object"
            },
            "EventLocationRequestBody3": {
                "properties": {
                    "address": {
                        "type": "object",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/EventLocationAddressRequestBody3"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "EventPriceRequestBody3": {
                "required": [
                    "amount",
                    "currency"
                ],
                "properties": {
                    "amount": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "currency": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SerializableTitleLocalization2": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    }
                },
                "type": "object"
            },
            "SerializableDescriptionLocalization2": {
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    }
                },
                "type": "object"
            },
            "ImageRequestEntry6": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#\/components\/schemas\/uuid"
                    }
                },
                "type": "object"
            },
            "EventLocationAddressRequestBody2": {
                "required": [
                    "street",
                    "city",
                    "state",
                    "zip_code",
                    "country",
                    "is_company"
                ],
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "is_company": {
                        "type": "boolean"
                    },
                    "company_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "LocalizedPostTitleRequestEntry2": {
                "required": [
                    "language",
                    "title"
                ],
                "properties": {
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LocalizedPostDescriptionRequestEntry2": {
                "required": [
                    "language",
                    "description"
                ],
                "properties": {
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PollAnswerLocalizationRequestEntry2": {
                "required": [
                    "value",
                    "language"
                ],
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string",
                        "enum": [
                            "en",
                            "cs",
                            "sk",
                            "ar",
                            "da",
                            "de",
                            "nl",
                            "hr",
                            "no",
                            "et",
                            "hu",
                            "es",
                            "pl",
                            "ro",
                            "sr",
                            "sv",
                            "fr",
                            "ru",
                            "kk"
                        ]
                    }
                },
                "type": "object"
            },
            "EventLocationAddressRequestBody3": {
                "required": [
                    "street",
                    "city",
                    "state",
                    "zip_code",
                    "country",
                    "is_company"
                ],
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "is_company": {
                        "type": "boolean"
                    },
                    "company_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "apiKey",
                "description": "Authorization: Bearer {jwt}",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}